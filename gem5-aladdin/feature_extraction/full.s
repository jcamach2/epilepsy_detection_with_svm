	.file	"full.llvm"
	.section	.debug_info,"",@progbits
.Lsection_info:
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.section	.debug_aranges,"",@progbits
	.section	.debug_macinfo,"",@progbits
	.section	.debug_line,"",@progbits
.Lsection_line:
	.section	.debug_loc,"",@progbits
	.section	.debug_pubnames,"",@progbits
	.section	.debug_pubtypes,"",@progbits
	.section	.debug_str,"MS",@progbits,1
.Linfo_string:
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
	.section	.debug_loc,"",@progbits
.Lsection_debug_loc:
	.text
.Ltext_begin:
	.data
	.file	1 "feature_extraction.c"
	.file	2 "kiss_fft.c"
	.file	3 "./_kiss_fft_guts.h"
	.file	4 "./kiss_fft.h"
	.text
	.globl	test_stores
	.align	16, 0x90
	.type	test_stores,@function
test_stores:                            # @test_stores
	.cfi_startproc
.Lfunc_begin0:
	.loc	1 22 0                  # feature_extraction.c:22:0
# BB#0:
	pushq	%rbp
.Ltmp7:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp8:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp9:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp10:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp11:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp12:
	.cfi_def_cfa_offset 56
	subq	$1912, %rsp             # imm = 0x778
.Ltmp13:
	.cfi_def_cfa_offset 1968
.Ltmp14:
	.cfi_offset %rbx, -56
.Ltmp15:
	.cfi_offset %r12, -48
.Ltmp16:
	.cfi_offset %r13, -40
.Ltmp17:
	.cfi_offset %r14, -32
.Ltmp18:
	.cfi_offset %r15, -24
.Ltmp19:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str6, %r8
	movabsq	$0, %r9
	leaq	.L.str8, %r10
	movabsq	$2, %r11
	leaq	.L.str12, %rbx
	movabsq	$3, %r14
	leaq	.L.str11, %r15
	movabsq	$23, %r12
	leaq	.L.str4, %r13
	leaq	.L.str5, %rbp
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str10, %rax
	movl	%ecx, 1900(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 1896(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	leaq	.L.str9, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1848(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str35, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str49, %rax
	.loc	1 22 0 prologue_end     # feature_extraction.c:22:0
.Ltmp20:
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	movq	1840(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1800(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1824(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1792(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	1800(%rsp), %rax        # 8-byte Reload
	movl	%edx, 1788(%rsp)        # 4-byte Spill
	movq	%rax, %rdx
	movq	1904(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 1784(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	1808(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1776(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1768(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r12, 1760(%rsp)        # 8-byte Spill
	movq	%r13, 1752(%rsp)        # 8-byte Spill
	movq	%rbp, 1744(%rsp)        # 8-byte Spill
	movq	%r15, 1736(%rsp)        # 8-byte Spill
	movq	%r14, 1728(%rsp)        # 8-byte Spill
	movq	%rbx, 1720(%rsp)        # 8-byte Spill
	movq	%r10, 1712(%rsp)        # 8-byte Spill
	movq	%r11, 1704(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	1788(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1900(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1864(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: test_stores:time_data <- [RSP+1800]
	#DEBUG_VALUE: test_stores:freq_data <- [RSP+1792]
	#DEBUG_VALUE: test_stores:n_samples <- [RSP+1788]
	#DEBUG_VALUE: test_stores:n_channels <- [RSP+1900]
.Ltmp21:
	#DEBUG_VALUE: j <- 0
	.loc	1 23 0                  # feature_extraction.c:23:0
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1744(%rsp), %rdx        # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	1848(%rsp), %r8         # 8-byte Reload
	movl	1896(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1768(%rsp), %rdx        # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	1856(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1900(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1904(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1864(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1900(%rsp), %esi        # 4-byte Reload
	cmpl	$0, %esi
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1880(%rsp), %rdi        # 8-byte Reload
	movq	1904(%rsp), %rsi        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1703(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1744(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movl	1896(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1728(%rsp), %rdi        # 8-byte Reload
	movq	1768(%rsp), %rsi        # 8-byte Reload
	movq	1768(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1736(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1768(%rsp), %rsi        # 8-byte Reload
	movq	1768(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1703(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1904(%rsp), %rdi        # 8-byte Reload
	movq	1904(%rsp), %rsi        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1768(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1703(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB0_1
	jmp	.LBB0_6
.Ltmp22:
.LBB0_1:                                # %.preheader.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str16, %r8
	leaq	.L.str8, %rdx
	movabsq	$23, %rdi
	leaq	.L.str4, %rsi
	leaq	.L.str11, %r9
	leaq	.L.str15, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	leaq	.L.str13, %r15
	movabsq	$32, %r12
	leaq	.L.str14, %r13
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	movabsq	$25, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	.loc	1 25 0                  # feature_extraction.c:25:0
.Ltmp23:
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	movq	1672(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1656(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1648(%rsp)        # 8-byte Spill
	movq	%rdx, 1640(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 1632(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	1664(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1624(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1616(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 1608(%rsp)        # 8-byte Spill
	movl	%ebp, 1604(%rsp)        # 4-byte Spill
	movq	%r15, 1592(%rsp)        # 8-byte Spill
	movq	%r13, 1584(%rsp)        # 8-byte Spill
	movq	%r12, 1576(%rsp)        # 8-byte Spill
	movl	%ebx, 1572(%rsp)        # 4-byte Spill
	movq	%r10, 1560(%rsp)        # 8-byte Spill
	movq	%r11, 1552(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1688(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1688(%rsp), %r9         # 8-byte Reload
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1788(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	1632(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1688(%rsp), %r9         # 8-byte Reload
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1788(%rsp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
.Ltmp24:
	.loc	1 23 0                  # feature_extraction.c:23:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1632(%rsp), %rsi        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1592(%rsp), %r8         # 8-byte Reload
	movq	1688(%rsp), %r9         # 8-byte Reload
	movq	1640(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1551(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1656(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movl	1572(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1632(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1688(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1624(%rsp), %r8         # 8-byte Reload
	movq	1688(%rsp), %r9         # 8-byte Reload
	movq	1640(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
.LBB0_2:                                # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_4 Depth 2
	movq	1536(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str13, %r8
	movabsq	$0, %rdx
	leaq	.L.str8, %rsi
	movabsq	$2, %rdi
	leaq	.L.str19, %r9
	movabsq	$3, %r10
	leaq	.L.str23, %r11
	movabsq	$25, %rbx
	leaq	.L.str4, %r14
	leaq	.L.str16, %r15
	leaq	.L.str22, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	stdout, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	leaq	.L.str21, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str17, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str11, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str18, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 27 0                  # feature_extraction.c:27:0
.Ltmp25:
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	movq	1440(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1424(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1416(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1408(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1472(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1400(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1432(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1392(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1384(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1376(%rsp)        # 8-byte Spill
	movq	%r14, 1368(%rsp)        # 8-byte Spill
	movq	%r12, 1360(%rsp)        # 8-byte Spill
	movl	%ebp, 1356(%rsp)        # 4-byte Spill
	movl	%r13d, 1352(%rsp)       # 4-byte Spill
	movq	%rbx, 1344(%rsp)        # 8-byte Spill
	movq	%r10, 1336(%rsp)        # 8-byte Spill
	movq	%r11, 1328(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	movq	1384(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	1356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rax
.Ltmp26:
	.loc	1 25 0                  # feature_extraction.c:25:0
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movl	1356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	1551(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1551(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 1312(%rsp)        # 8-byte Spill
	jne	.LBB0_3
	jmp	.LBB0_5
.LBB0_3:                                # %.lr.ph
                                        #   in Loop: Header=BB0_2 Depth=1
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str28, %r8
	leaq	.L.str8, %rdx
	movabsq	$25, %rsi
	leaq	.L.str4, %rdi
	leaq	.L.str23, %r9
	leaq	.L.str27, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str26, %r12
	movabsq	$32, %r13
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str25, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str24, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str17, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	.loc	1 27 0                  # feature_extraction.c:27:0
.Ltmp27:
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1232(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1232(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1224(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 1216(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	1280(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1240(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1200(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1192(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 1184(%rsp)        # 8-byte Spill
	movl	%ebp, 1180(%rsp)        # 4-byte Spill
	movq	%r15, 1168(%rsp)        # 8-byte Spill
	movq	%r12, 1160(%rsp)        # 8-byte Spill
	movq	%r13, 1152(%rsp)        # 8-byte Spill
	movl	%ebx, 1148(%rsp)        # 4-byte Spill
	movq	%r10, 1136(%rsp)        # 8-byte Spill
	movq	%r11, 1128(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rax        # 8-byte Reload
	movl	%eax, %ebx
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	1184(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebx, 1124(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1148(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1124(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1124(%rsp), %ebx        # 4-byte Reload
	movl	1788(%rsp), %ebp        # 4-byte Reload
	imull	%ebp, %ebx
.Ltmp28:
	.loc	1 25 0                  # feature_extraction.c:25:0
	movl	%ebx, %esi
	movl	%esi, %edx
	movq	1184(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 1120(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movl	1148(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1120(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1120(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	1184(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	1148(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	1304(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1304(%rsp), %rax        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	movq	%rcx, 1096(%rsp)        # 8-byte Spill
.LBB0_4:                                #   Parent Loop BB0_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	1096(%rsp), %rax        # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movabsq	$2, %rdx
	movabsq	$64, %rsi
	leaq	.L.str, %rdi
	movabsq	$0, %r8
	leaq	.L.str7, %r9
	leaq	.L.str8, %r10
	movabsq	$1, %r11
	leaq	.L.str31, %rbx
	movabsq	$5, %r14
	leaq	fprintf, %r15
	leaq	.L.str39, %r12
	movabsq	$27, %r13
	leaq	.L.str4, %rbp
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	leaq	.L.str28, %rax
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str38, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1064(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1060(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str37, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str36, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str34, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	leaq	.L.str35, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str29, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	leaq	.L.str26, %rax
	movq	%rax, 960(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str23, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	leaq	.L.str30, %rax
	.loc	1 27 0                  # feature_extraction.c:27:0
.Ltmp29:
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movq	920(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 896(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 892(%rsp)         # 4-byte Spill
	movq	%rbp, %rsi
	movq	1080(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	968(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	912(%rsp), %rax         # 8-byte Reload
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	1060(%rsp), %eax        # 4-byte Reload
	movq	%r9, 856(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 848(%rsp)         # 8-byte Spill
	movq	%r12, 840(%rsp)         # 8-byte Spill
	movq	%r13, 832(%rsp)         # 8-byte Spill
	movq	%rbp, 824(%rsp)         # 8-byte Spill
	movq	%r14, 816(%rsp)         # 8-byte Spill
	movq	%rbx, 808(%rsp)         # 8-byte Spill
	movq	%r10, 800(%rsp)         # 8-byte Spill
	movq	%r11, 792(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	944(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	944(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	808(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	944(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	944(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	1112(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	1112(%rsp), %rdx        # 8-byte Reload
	addq	%rdx, %rcx
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 784(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	784(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	784(%rsp), %rcx         # 8-byte Reload
	shlq	$2, %rcx
	movq	1792(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 776(%rsp)         # 8-byte Spill
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	784(%rsp), %rdx         # 8-byte Reload
	movl	(%rcx,%rdx,4), %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1032(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 772(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	784(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	784(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1032(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 768(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movl	1060(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	864(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
                                        # kill: AL<def> AL<kill> EAX<kill>
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movl	768(%rsp), %edx         # 4-byte Reload
	movl	772(%rsp), %ecx         # 4-byte Reload
	callq	fprintf
	movabsq	$1, %rsi
	leaq	.L.str41, %rdi
	movabsq	$0, %r8
	leaq	.L.str8, %r9
	movabsq	$2, %r10
	leaq	.L.str28, %r11
	movabsq	$3, %rbx
	leaq	.L.str19, %r14
	movabsq	$25, %r15
	leaq	.L.str4, %r12
	leaq	.L.str42, %rcx
	movl	$0, %edx
	movl	$1, %ebp
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 760(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 752(%rsp)         # 8-byte Spill
	leaq	.L.str40, %rcx
	movq	%rcx, 744(%rsp)         # 8-byte Spill
	leaq	.L.str14, %rcx
	movq	%rcx, 736(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	leaq	.L.str30, %rcx
	movq	%rcx, 712(%rsp)         # 8-byte Spill
	movabsq	$33, %rcx
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rcx
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	leaq	stdout, %rcx
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	leaq	.L.str21, %rcx
	movq	%rcx, 680(%rsp)         # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 672(%rsp)         # 8-byte Spill
	leaq	.L.str29, %rcx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	leaq	.L.str7, %rcx
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	leaq	.L.str38, %rcx
.Ltmp30:
	.loc	1 25 0                  # feature_extraction.c:25:0
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rdi, 640(%rsp)         # 8-byte Spill
	movq	%r13, %rdi
	movq	%rax, 632(%rsp)         # 8-byte Spill
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 624(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	632(%rsp), %rax         # 8-byte Reload
	movl	%edx, 620(%rsp)         # 4-byte Spill
	movq	%rax, %rdx
	movq	624(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	608(%rsp), %rax         # 8-byte Reload
	movq	%r8, 600(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	600(%rsp), %rax         # 8-byte Reload
	movq	%r9, 592(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r13, 584(%rsp)         # 8-byte Spill
	movl	%ebp, 580(%rsp)         # 4-byte Spill
	movq	%r12, 568(%rsp)         # 8-byte Spill
	movq	%r15, 560(%rsp)         # 8-byte Spill
	movq	%r10, 552(%rsp)         # 8-byte Spill
	movq	%r11, 544(%rsp)         # 8-byte Spill
	movq	%rbx, 536(%rsp)         # 8-byte Spill
	movq	%r14, 528(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	568(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	620(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	552(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	872(%rsp), %rax         # 8-byte Reload
	addq	$1, %rax
	.loc	1 27 0                  # feature_extraction.c:27:0
.Ltmp31:
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 520(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	672(%rsp), %rdi         # 8-byte Reload
	movq	568(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	696(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	620(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	688(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rax
.Ltmp32:
	.loc	1 25 0                  # feature_extraction.c:25:0
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 512(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	568(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movl	620(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	720(%rsp), %rsi         # 8-byte Reload
	movq	520(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	520(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	752(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 508(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	568(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movl	620(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	552(%rsp), %rdi         # 8-byte Reload
	movq	752(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	508(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	752(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	508(%rsp), %ebp         # 4-byte Reload
	movl	1788(%rsp), %esi        # 4-byte Reload
	cmpl	%esi, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 507(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	568(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movl	620(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	536(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	552(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	507(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	600(%rsp), %r9          # 8-byte Reload
	movq	592(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	507(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, 1104(%rsp)        # 8-byte Spill
	movq	%rdx, 1096(%rsp)        # 8-byte Spill
	movq	%rsi, 1312(%rsp)        # 8-byte Spill
	jne	.LBB0_5
	jmp	.LBB0_4
.Ltmp33:
.LBB0_5:                                # %._crit_edge
                                        #   in Loop: Header=BB0_2 Depth=1
	movq	1312(%rsp), %rax        # 8-byte Reload
	movabsq	$2, %rcx
	movabsq	$64, %rdx
	leaq	.L.str1, %rsi
	movabsq	$0, %rdi
	leaq	.L.str7, %r8
	leaq	.L.str8, %r9
	movabsq	$1, %r10
	leaq	.L.str43, %r11
	movabsq	$3, %rbx
	leaq	fprintf, %r14
	leaq	.L.str39, %r15
	movabsq	$29, %r12
	leaq	.L.str4, %r13
	leaq	.L.str19, %rbp
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str44, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 480(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 476(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 464(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str16, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	leaq	.L.str28, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 416(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 29 0                  # feature_extraction.c:29:0
	movq	%rax, 408(%rsp)         # 8-byte Spill
	movq	416(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 400(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 396(%rsp)         # 4-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 384(%rsp)         # 8-byte Spill
	movq	%rbp, %rdx
	movq	%rcx, 376(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%r8, 368(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	476(%rsp), %eax         # 4-byte Reload
	movq	%r9, 360(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 352(%rsp)         # 8-byte Spill
	movq	%r12, 344(%rsp)         # 8-byte Spill
	movq	%r13, 336(%rsp)         # 8-byte Spill
	movq	%rbp, 328(%rsp)         # 8-byte Spill
	movq	%r14, 320(%rsp)         # 8-byte Spill
	movq	%rbx, 312(%rsp)         # 8-byte Spill
	movq	%r10, 304(%rsp)         # 8-byte Spill
	movq	%r11, 296(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	304(%rsp), %r9          # 8-byte Reload
	movq	424(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	304(%rsp), %r9          # 8-byte Reload
	movq	448(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	456(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	448(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	476(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	352(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	360(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	360(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	368(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	360(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str1, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
                                        # kill: AL<def> AL<kill> EAX<kill>
	movq	496(%rsp), %rdi         # 8-byte Reload
	callq	fprintf
	movabsq	$1, %rcx
	leaq	.L.str46, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %rdi
	movabsq	$2, %r8
	leaq	.L.str16, %r9
	movabsq	$3, %r10
	leaq	.L.str12, %r11
	movabsq	$23, %rbx
	leaq	.L.str4, %r14
	leaq	.L.str19, %r15
	leaq	.L.str47, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str45, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	leaq	.L.str9, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	leaq	.L.str18, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	movabsq	$33, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	leaq	.L.str17, %rcx
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	.L.str7, %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	leaq	.L.str44, %rcx
.Ltmp34:
	.loc	1 23 0                  # feature_extraction.c:23:0
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movq	280(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 184(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	272(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 168(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	288(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	160(%rsp), %rax         # 8-byte Reload
	movq	%r8, 152(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%r9, 144(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r13d, 140(%rsp)        # 4-byte Spill
	movq	%r15, 128(%rsp)         # 8-byte Spill
	movq	%r12, 120(%rsp)         # 8-byte Spill
	movl	%ebp, 116(%rsp)         # 4-byte Spill
	movq	%r14, 104(%rsp)         # 8-byte Spill
	movq	%rbx, 96(%rsp)          # 8-byte Spill
	movq	%r10, 88(%rsp)          # 8-byte Spill
	movq	%r11, 80(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	232(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movl	116(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rdx         # 8-byte Reload
	movq	176(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 72(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movl	116(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	72(%rsp), %rax          # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 68(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movl	116(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1900(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	68(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	68(%rsp), %ebp          # 4-byte Reload
	movl	1900(%rsp), %r13d       # 4-byte Reload
	cmpl	%r13d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 67(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movl	116(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	88(%rsp), %rdi          # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	67(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	67(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	72(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	jne	.LBB0_6
	jmp	.LBB0_2
.Ltmp35:
.LBB0_6:                                # %._crit_edge3
	movl	$0, %eax
	movabsq	$1, %rcx
	movabsq	$32, %rsi
	movabsq	$0, %rdx
	leaq	.L.str7, %r8
	leaq	.L.str8, %rdi
	movabsq	$31, %r9
	leaq	.L.str4, %r10
	leaq	.L.str12, %r11
	leaq	.L.str48, %rbx
	movl	$1, %ebp
	.loc	1 31 0                  # feature_extraction.c:31:0
	movq	%rdi, 56(%rsp)          # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 40(%rsp)          # 8-byte Spill
	movq	%r11, %rdx
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%rbx, %rcx
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	%r8, 24(%rsp)           # 8-byte Spill
	movq	%r9, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	movl	%ebp, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	40(%rsp), %rdx          # 8-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movq	56(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	20(%rsp), %eax          # 4-byte Reload
	addq	$1912, %rsp             # imm = 0x778
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp36:
.Ltmp37:
	.size	test_stores, .Ltmp37-test_stores
.Lfunc_end0:
	.cfi_endproc

	.globl	process_data
	.align	16, 0x90
	.type	process_data,@function
process_data:                           # @process_data
	.cfi_startproc
.Lfunc_begin1:
	.loc	1 35 0                  # feature_extraction.c:35:0
# BB#0:
	pushq	%rbp
.Ltmp41:
	.cfi_def_cfa_offset 16
.Ltmp42:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp43:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$2520, %rsp             # imm = 0x9D8
.Ltmp44:
	.cfi_offset %rbx, -56
.Ltmp45:
	.cfi_offset %r12, -48
.Ltmp46:
	.cfi_offset %r13, -40
.Ltmp47:
	.cfi_offset %r14, -32
.Ltmp48:
	.cfi_offset %r15, -24
	#DEBUG_VALUE: process_data:time_data <- RDI
	#DEBUG_VALUE: process_data:freq_data <- RSI
	#DEBUG_VALUE: process_data:n_samples <- EDX
	#DEBUG_VALUE: process_data:n_channels <- ECX
	#DEBUG_VALUE: process_data:cfg <- R8
	movabsq	$1, %rax
	leaq	.L.str25, %r9
	movabsq	$0, %r10
	leaq	.L.str8, %r11
	movabsq	$2, %rbx
	leaq	.L.str52, %r14
	movabsq	$3, %r15
	leaq	.L.str11, %r12
	movabsq	$49, %r13
	movq	%rax, -48(%rbp)         # 8-byte Spill
	leaq	.L.str50, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	leaq	.L.str5, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	leaq	.L.str51, %rax
	movl	%ecx, -68(%rbp)         # 4-byte Spill
.Ltmp49:
	#DEBUG_VALUE: process_data:n_channels <- [RBP+-68]
	movl	$1, %ecx
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	leaq	.L.str9, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	leaq	.L.str24, %rax
	.loc	1 35 0 prologue_end     # feature_extraction.c:35:0
.Ltmp50:
	movl	%ecx, -132(%rbp)        # 4-byte Spill
	movl	$.L.str50, %ecx
                                        # kill: RCX<def> ECX<kill>
	movl	%edx, -136(%rbp)        # 4-byte Spill
.Ltmp51:
	#DEBUG_VALUE: process_data:n_samples <- [RBP+-136]
	movl	$5, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	%rdi, -144(%rbp)        # 8-byte Spill
.Ltmp52:
	#DEBUG_VALUE: process_data:time_data <- [RBP+-144]
	movq	%rcx, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
.Ltmp53:
	#DEBUG_VALUE: process_data:freq_data <- [RBP+-152]
	movq	%rdx, %rsi
	movq	%r13, -160(%rbp)        # 8-byte Spill
	movq	%rcx, -168(%rbp)        # 8-byte Spill
	movq	%r12, -176(%rbp)        # 8-byte Spill
	movq	%rdx, -184(%rbp)        # 8-byte Spill
	movq	%r8, -192(%rbp)         # 8-byte Spill
.Ltmp54:
	#DEBUG_VALUE: process_data:cfg <- [RBP+-192]
	movq	%rax, -200(%rbp)        # 8-byte Spill
	movq	%r9, -208(%rbp)         # 8-byte Spill
	movq	%r10, -216(%rbp)        # 8-byte Spill
	movq	%r11, -224(%rbp)        # 8-byte Spill
	movq	%rbx, -232(%rbp)        # 8-byte Spill
	movq	%r14, -240(%rbp)        # 8-byte Spill
	movq	%r15, -248(%rbp)        # 8-byte Spill
	callq	trace_logger_log_entry
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movl	$.L.str49, %esi
	movl	%esi, %r8d
	movl	$64, %esi
	movl	%esi, %eax
	movl	$1, %esi
	movl	%esi, %ecx
	xorl	%esi, %esi
	movl	%esi, %edx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	movq	-144(%rbp), %r9         # 8-byte Reload
	movq	%rdx, -256(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -264(%rbp)        # 8-byte Spill
	movq	-256(%rbp), %r9         # 8-byte Reload
	movq	%rax, -272(%rbp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movl	$.L.str35, %esi
	movl	%esi, %r8d
	movl	$2, %esi
	movl	%esi, %eax
	movq	%rax, %rdi
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	movq	%rax, -280(%rbp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-136(%rbp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %eax
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movl	$.L.str14, %esi
	movl	%esi, %ecx
	movl	$3, %esi
	movl	%esi, %edi
	movl	$32, %esi
	movl	%esi, %edx
	movq	%rdx, %rsi
	movq	%rdx, -288(%rbp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	-264(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -296(%rbp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	-296(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	movq	%rax, -304(%rbp)        # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-68(%rbp), %esi         # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %eax
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movl	$.L.str9, %esi
	movl	%esi, %ecx
	movl	$4, %esi
	movl	%esi, %edi
	movq	-288(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	-264(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -312(%rbp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	-312(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	movq	%rax, -320(%rbp)        # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movl	$.L.str73, %esi
	movl	%esi, %r8d
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	.loc	1 47 0                  # feature_extraction.c:47:0
	subq	$16, %rsp
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str5, %esi
	movl	%esi, %eax
	movl	$.L.str6, %esi
	movl	%esi, %ecx
	movl	$47, %esi
	movl	%esi, %edx
	movl	$12, %esi
	movl	%esi, %r8d
	movl	$1, %esi
	movq	%rdx, %rdi
	movq	-168(%rbp), %r9         # 8-byte Reload
	movl	%esi, -324(%rbp)        # 4-byte Spill
	movq	%r9, %rsi
	movq	%rdx, -336(%rbp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, -344(%rbp)        # 8-byte Spill
	movl	-324(%rbp), %r9d        # 4-byte Reload
	movq	%rax, -352(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-280(%rbp), %rdi        # 8-byte Reload
	movq	-288(%rbp), %rsi        # 8-byte Reload
	movq	-304(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-296(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	-288(%rbp), %rsi        # 8-byte Reload
	movq	-320(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-312(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-68(%rbp), %esi         # 4-byte Reload
	movl	-136(%rbp), %edi        # 4-byte Reload
	imull	%edi, %esi
	movl	%esi, %eax
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movl	$19134, %esi            # imm = 0x4ABE
	movl	%esi, %ecx
	movq	%rcx, %rdi
	movq	-288(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	-264(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -360(%rbp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	-344(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	movq	%rax, -368(%rbp)        # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str13, %esi
	movl	%esi, %eax
	movl	$34, %esi
	movl	%esi, %r8d
	movq	-336(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-352(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	movl	-324(%rbp), %r9d        # 4-byte Reload
	movq	%rax, -376(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	-288(%rbp), %rsi        # 8-byte Reload
	movq	-368(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-344(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-360(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	-368(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-376(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str20, %esi
	movl	%esi, %eax
	movl	$26, %esi
	movl	%esi, %ecx
	movq	-336(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-352(%rbp), %rdx        # 8-byte Reload
	movq	%rcx, -384(%rbp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	-384(%rbp), %r8         # 8-byte Reload
	movl	-324(%rbp), %r9d        # 4-byte Reload
	movq	%rax, -392(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	-368(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-376(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-368(%rbp), %rax        # 8-byte Reload
	leaq	15(,%rax,8), %rcx
	andq	$-16, %rcx
	movq	%rsp, %rdx
	subq	%rcx, %rdx
	movq	%rdx, %rsp
	subq	$16, %rsp
	movq	%rsp, %rsi
	movq	$.L.str8, (%rsi)
	movq	-360(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	%rdx, -400(%rbp)        # 8-byte Spill
	movq	-264(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -408(%rbp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	-392(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	.loc	1 48 0                  # feature_extraction.c:48:0
	subq	$16, %rsp
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str24, %esi
	movl	%esi, %ecx
	movl	$48, %esi
	movl	%esi, %edi
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-352(%rbp), %rdx        # 8-byte Reload
	movq	-384(%rbp), %r8         # 8-byte Reload
	movl	-324(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rax
	movq	$.L.str8, (%rax)
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movq	-368(%rbp), %rdx        # 8-byte Reload
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movq	-376(%rbp), %r8         # 8-byte Reload
	movq	-256(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	%rsp, %rax
	movq	-408(%rbp), %rcx        # 8-byte Reload
	subq	%rcx, %rax
	movq	%rax, %rsp
	subq	$16, %rsp
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-200(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -416(%rbp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	addq	$16, %rsp
.Ltmp55:
	#DEBUG_VALUE: process_data:out <- [RBP+-416]
	#DEBUG_VALUE: channel <- 0
	.loc	1 49 0                  # feature_extraction.c:49:0
	subq	$16, %rsp
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-208(%rbp), %rcx        # 8-byte Reload
	movq	-120(%rbp), %r8         # 8-byte Reload
	movl	-132(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	-216(%rbp), %rdx        # 8-byte Reload
	movq	-216(%rbp), %rcx        # 8-byte Reload
	movq	-112(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-68(%rbp), %esi         # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-104(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-68(%rbp), %esi         # 4-byte Reload
	cmpl	$0, %esi
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-208(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -417(%rbp)         # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	-232(%rbp), %r8         # 8-byte Reload
	movl	-132(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	-216(%rbp), %rdx        # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-176(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-232(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	-216(%rbp), %rdx        # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-240(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-417(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-208(%rbp), %r8         # 8-byte Reload
	movq	-216(%rbp), %r9         # 8-byte Reload
	movq	-224(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-417(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_1
	jmp	.LBB1_9
.Ltmp56:
.LBB1_1:                                # %.preheader.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str16, %r8
	leaq	.L.str8, %rdx
	movabsq	$49, %rdi
	leaq	.L.str50, %rsi
	leaq	.L.str11, %r9
	leaq	.L.str15, %r10
	movabsq	$2, %r11
	movl	$1, %ebx
	movabsq	$19134, %r14            # imm = 0x4ABE
	leaq	.L.str53, %r15
	movabsq	$32, %r12
	leaq	.L.str14, %r13
	movq	%rax, -432(%rbp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -440(%rbp)        # 8-byte Spill
	movabsq	$59, %rax
	movq	%rax, -448(%rbp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -456(%rbp)        # 8-byte Spill
	leaq	.L.str26, %rax
	movq	%rax, -464(%rbp)        # 8-byte Spill
	movabsq	$51, %rax
	.loc	1 51 0                  # feature_extraction.c:51:0
.Ltmp57:
	subq	$16, %rsp
	movq	%rdi, -472(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -480(%rbp)        # 8-byte Spill
	movq	%rdx, -488(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-464(%rbp), %rax        # 8-byte Reload
	movq	%rcx, -496(%rbp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	-456(%rbp), %rax        # 8-byte Reload
	movq	%r8, -504(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -512(%rbp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r13, -520(%rbp)        # 8-byte Spill
	movl	%ebx, -524(%rbp)        # 4-byte Spill
	movq	%r14, -536(%rbp)        # 8-byte Spill
	movq	%r12, -544(%rbp)        # 8-byte Spill
	movq	%r15, -552(%rbp)        # 8-byte Spill
	movq	%r11, -560(%rbp)        # 8-byte Spill
	movq	%r10, -568(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-560(%rbp), %rdi        # 8-byte Reload
	movq	-544(%rbp), %rsi        # 8-byte Reload
	movq	-432(%rbp), %rdx        # 8-byte Reload
	movq	-432(%rbp), %rcx        # 8-byte Reload
	movq	-440(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-136(%rbp), %ebx        # 4-byte Reload
	movl	%ebx, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-496(%rbp), %rdi        # 8-byte Reload
	movq	-544(%rbp), %rsi        # 8-byte Reload
	movq	-496(%rbp), %rcx        # 8-byte Reload
	movq	-520(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-136(%rbp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
.Ltmp58:
	.loc	1 59 0                  # feature_extraction.c:59:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-536(%rbp), %rdi        # 8-byte Reload
	movq	-496(%rbp), %rsi        # 8-byte Reload
	movq	-496(%rbp), %rcx        # 8-byte Reload
	movq	-464(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -569(%rbp)         # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-448(%rbp), %rdi        # 8-byte Reload
	movq	-480(%rbp), %rsi        # 8-byte Reload
	movq	-512(%rbp), %rdx        # 8-byte Reload
	movq	-552(%rbp), %rcx        # 8-byte Reload
	movq	-456(%rbp), %r8         # 8-byte Reload
	movl	-524(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-560(%rbp), %rdi        # 8-byte Reload
	movq	-544(%rbp), %rsi        # 8-byte Reload
	movq	-432(%rbp), %rdx        # 8-byte Reload
	movq	-432(%rbp), %rcx        # 8-byte Reload
	movq	-440(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-136(%rbp), %ebx        # 4-byte Reload
	movl	%ebx, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-496(%rbp), %rdi        # 8-byte Reload
	movq	-544(%rbp), %rsi        # 8-byte Reload
	movq	-496(%rbp), %rcx        # 8-byte Reload
	movq	-520(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-136(%rbp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	setg	%al
.Ltmp59:
	.loc	1 49 0                  # feature_extraction.c:49:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebx
	movl	%ebx, %edx
	subq	$16, %rsp
	movq	-536(%rbp), %rdi        # 8-byte Reload
	movq	-496(%rbp), %rsi        # 8-byte Reload
	movq	-496(%rbp), %rcx        # 8-byte Reload
	movq	-552(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -570(%rbp)         # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-472(%rbp), %rdi        # 8-byte Reload
	movq	-480(%rbp), %rsi        # 8-byte Reload
	movq	-512(%rbp), %rdx        # 8-byte Reload
	movq	-568(%rbp), %rcx        # 8-byte Reload
	movq	-560(%rbp), %r8         # 8-byte Reload
	movl	-524(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-496(%rbp), %rdi        # 8-byte Reload
	movq	-432(%rbp), %rsi        # 8-byte Reload
	movq	-432(%rbp), %rdx        # 8-byte Reload
	movq	-496(%rbp), %rcx        # 8-byte Reload
	movq	-504(%rbp), %r8         # 8-byte Reload
	movq	-432(%rbp), %r9         # 8-byte Reload
	movq	-488(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-432(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, -584(%rbp)        # 8-byte Spill
.LBB1_2:                                # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_4 Depth 2
                                        #     Child Loop BB1_7 Depth 2
	movq	-584(%rbp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str26, %r8
	movabsq	$0, %rdx
	leaq	.L.str8, %rsi
	movabsq	$2, %rdi
	leaq	.L.str19, %r9
	movabsq	$3, %r10
	leaq	.L.str23, %r11
	movabsq	$51, %rbx
	leaq	.L.str50, %r14
	leaq	.L.str16, %r15
	leaq	.L.str22, %r12
	movl	$1, %r13d
	movq	%rax, -592(%rbp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, -600(%rbp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -608(%rbp)        # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, -616(%rbp)        # 8-byte Spill
	leaq	.L.str31, %rax
	movq	%rax, -624(%rbp)        # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, -632(%rbp)        # 8-byte Spill
	movabsq	$53, %rax
	movq	%rax, -640(%rbp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, -648(%rbp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -656(%rbp)        # 8-byte Spill
	leaq	.L.str54, %rax
	movq	%rax, -664(%rbp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -672(%rbp)        # 8-byte Spill
	leaq	.L.str11, %rax
	movq	%rax, -680(%rbp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -688(%rbp)        # 8-byte Spill
	leaq	.L.str55, %rax
	movq	%rax, -696(%rbp)        # 8-byte Spill
	leaq	.L.str56, %rax
	movq	%rax, -704(%rbp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, -712(%rbp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 53 0                  # feature_extraction.c:53:0
.Ltmp60:
	subq	$16, %rsp
	movq	%rax, -720(%rbp)        # 8-byte Spill
	movq	-712(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -728(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -736(%rbp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, -744(%rbp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	-664(%rbp), %rax        # 8-byte Reload
	movq	%rcx, -752(%rbp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	-720(%rbp), %rax        # 8-byte Reload
	movq	%r8, -760(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -768(%rbp)         # 8-byte Spill
	movl	%r13d, %r9d
	movl	$1, (%rsp)
	movq	%r14, -776(%rbp)        # 8-byte Spill
	movq	%rbx, -784(%rbp)        # 8-byte Spill
	movq	%r15, -792(%rbp)        # 8-byte Spill
	movq	%r12, -800(%rbp)        # 8-byte Spill
	movl	%r13d, -804(%rbp)       # 4-byte Spill
	movq	%r11, -816(%rbp)        # 8-byte Spill
	movq	%r10, -824(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-728(%rbp), %rdi        # 8-byte Reload
	movq	-656(%rbp), %rsi        # 8-byte Reload
	movq	-744(%rbp), %rdx        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-696(%rbp), %r8         # 8-byte Reload
	movq	-752(%rbp), %r9         # 8-byte Reload
	movq	-704(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-752(%rbp), %rdi        # 8-byte Reload
	movq	-656(%rbp), %rsi        # 8-byte Reload
	movq	-744(%rbp), %rdx        # 8-byte Reload
	movq	-744(%rbp), %rcx        # 8-byte Reload
	movq	-688(%rbp), %r8         # 8-byte Reload
	movq	-752(%rbp), %r9         # 8-byte Reload
	movq	-680(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-600(%rbp), %rdi        # 8-byte Reload
	movq	-656(%rbp), %rsi        # 8-byte Reload
	movq	-592(%rbp), %rdx        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-664(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-680(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-640(%rbp), %rdi        # 8-byte Reload
	movq	-776(%rbp), %rsi        # 8-byte Reload
	movq	-792(%rbp), %rdx        # 8-byte Reload
	movq	-624(%rbp), %rcx        # 8-byte Reload
	movq	-672(%rbp), %r8         # 8-byte Reload
	movl	-804(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-752(%rbp), %rdi        # 8-byte Reload
	movq	-656(%rbp), %rsi        # 8-byte Reload
	movq	-592(%rbp), %rdx        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-664(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-592(%rbp), %rax        # 8-byte Reload
	movl	%eax, %r13d
	movl	%r13d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-600(%rbp), %rdi        # 8-byte Reload
	movq	-608(%rbp), %rsi        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-624(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%r13d, -828(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-640(%rbp), %rdi        # 8-byte Reload
	movq	-776(%rbp), %rsi        # 8-byte Reload
	movq	-792(%rbp), %rdx        # 8-byte Reload
	movq	-616(%rbp), %rcx        # 8-byte Reload
	movq	-648(%rbp), %r8         # 8-byte Reload
	movl	-804(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-136(%rbp), %r9d        # 4-byte Reload
	movl	%r9d, %r13d
	movl	%r13d, %edx
	subq	$16, %rsp
	movq	-728(%rbp), %rdi        # 8-byte Reload
	movq	-608(%rbp), %rsi        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-632(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-828(%rbp), %r13d       # 4-byte Reload
	movl	%r13d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-752(%rbp), %rdi        # 8-byte Reload
	movq	-608(%rbp), %rsi        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-624(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-828(%rbp), %r13d       # 4-byte Reload
	movl	-136(%rbp), %esi        # 4-byte Reload
	imull	%esi, %r13d
.Ltmp61:
	.loc	1 51 0                  # feature_extraction.c:51:0
	movl	%r13d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-600(%rbp), %rdi        # 8-byte Reload
	movq	-608(%rbp), %rsi        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-616(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r13d, -832(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-784(%rbp), %rdi        # 8-byte Reload
	movq	-776(%rbp), %rsi        # 8-byte Reload
	movq	-792(%rbp), %rdx        # 8-byte Reload
	movq	-800(%rbp), %rcx        # 8-byte Reload
	movq	-728(%rbp), %r8         # 8-byte Reload
	movl	-804(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-824(%rbp), %rdi        # 8-byte Reload
	movq	-744(%rbp), %rsi        # 8-byte Reload
	movq	-744(%rbp), %rdx        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-816(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-728(%rbp), %rdi        # 8-byte Reload
	movq	-744(%rbp), %rsi        # 8-byte Reload
	movq	-744(%rbp), %rdx        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-768(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-569(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r13d
	movl	%r13d, %edx
	subq	$16, %rsp
	movq	-752(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-752(%rbp), %rcx        # 8-byte Reload
	movq	-760(%rbp), %r8         # 8-byte Reload
	movq	-744(%rbp), %r9         # 8-byte Reload
	movq	-736(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-569(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_3
	jmp	.LBB1_5
.LBB1_3:                                # %.lr.ph
                                        #   in Loop: Header=BB1_2 Depth=1
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str57, %r8
	leaq	.L.str8, %rdx
	movabsq	$51, %rsi
	leaq	.L.str50, %rdi
	leaq	.L.str23, %r9
	leaq	.L.str27, %r10
	movabsq	$2, %r11
	movl	$1, %ebx
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str34, %r12
	movabsq	$32, %r13
	movq	%rax, -840(%rbp)        # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, -848(%rbp)        # 8-byte Spill
	movabsq	$35, %rax
	subq	$16, %rsp
	movq	%rdi, -856(%rbp)        # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, -864(%rbp)        # 8-byte Spill
	movq	-856(%rbp), %rax        # 8-byte Reload
	movq	%rsi, -872(%rbp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, -880(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -888(%rbp)        # 8-byte Spill
	movq	%r12, %rcx
	movq	-864(%rbp), %rax        # 8-byte Reload
	movq	%r8, -896(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -904(%rbp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, -912(%rbp)        # 8-byte Spill
	movl	%ebx, -916(%rbp)        # 4-byte Spill
	movq	%r15, -928(%rbp)        # 8-byte Spill
	movq	%r12, -936(%rbp)        # 8-byte Spill
	movq	%r13, -944(%rbp)        # 8-byte Spill
	movq	%r11, -952(%rbp)        # 8-byte Spill
	movq	%r10, -960(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-832(%rbp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	subq	$16, %rsp
	movq	-888(%rbp), %rdi        # 8-byte Reload
	movq	-944(%rbp), %rsi        # 8-byte Reload
	movq	-888(%rbp), %rcx        # 8-byte Reload
	movq	-848(%rbp), %r8         # 8-byte Reload
	movq	-840(%rbp), %r9         # 8-byte Reload
	movq	-880(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-832(%rbp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	subq	$16, %rsp
	movq	-912(%rbp), %rdi        # 8-byte Reload
	movq	-928(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	-888(%rbp), %rcx        # 8-byte Reload
	movq	-936(%rbp), %r8         # 8-byte Reload
	movq	-840(%rbp), %r9         # 8-byte Reload
	movq	-880(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -968(%rbp)        # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-872(%rbp), %rdi        # 8-byte Reload
	movq	-856(%rbp), %rsi        # 8-byte Reload
	movq	-904(%rbp), %rdx        # 8-byte Reload
	movq	-960(%rbp), %rcx        # 8-byte Reload
	movq	-952(%rbp), %r8         # 8-byte Reload
	movl	-916(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-888(%rbp), %rdi        # 8-byte Reload
	movq	-840(%rbp), %rsi        # 8-byte Reload
	movq	-840(%rbp), %rdx        # 8-byte Reload
	movq	-888(%rbp), %rcx        # 8-byte Reload
	movq	-896(%rbp), %r8         # 8-byte Reload
	movq	-840(%rbp), %r9         # 8-byte Reload
	movq	-880(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-840(%rbp), %rax        # 8-byte Reload
	movq	%rax, -976(%rbp)        # 8-byte Spill
.LBB1_4:                                #   Parent Loop BB1_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-976(%rbp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str41, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %rdi
	movabsq	$2, %r8
	leaq	.L.str57, %r9
	movabsq	$3, %r10
	leaq	.L.str19, %r11
	movabsq	$51, %rbx
	leaq	.L.str50, %r14
	leaq	.L.str68, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -984(%rbp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -992(%rbp)        # 8-byte Spill
	leaq	.L.str40, %rax
	movq	%rax, -1000(%rbp)       # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, -1008(%rbp)       # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -1016(%rbp)       # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -1024(%rbp)       # 8-byte Spill
	leaq	.L.str30, %rax
	movq	%rax, -1032(%rbp)       # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -1040(%rbp)       # 8-byte Spill
	leaq	.L.str29, %rax
	movq	%rax, -1048(%rbp)       # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -1056(%rbp)       # 8-byte Spill
	movabsq	$8, %rax
	vxorps	%xmm0, %xmm0, %xmm0
	vxorps	%xmm1, %xmm1, %xmm1
	movq	%rax, -1064(%rbp)       # 8-byte Spill
	leaq	.L.str66, %rax
	movq	%rax, -1072(%rbp)       # 8-byte Spill
	movabsq	$56, %rax
	movq	%rax, -1080(%rbp)       # 8-byte Spill
	leaq	.L.str67, %rax
	movq	%rax, -1088(%rbp)       # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, -1096(%rbp)       # 8-byte Spill
	leaq	.L.str64, %rax
	movq	%rax, -1104(%rbp)       # 8-byte Spill
	leaq	.L.str37, %rax
	movq	%rax, -1112(%rbp)       # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, -1120(%rbp)       # 8-byte Spill
	leaq	.L.str63, %rax
	movq	%rax, -1128(%rbp)       # 8-byte Spill
	movabsq	$55, %rax
	movq	%rax, -1136(%rbp)       # 8-byte Spill
	leaq	.L.str65, %rax
	movq	%rax, -1144(%rbp)       # 8-byte Spill
	leaq	.L.str61, %rax
	movq	%rax, -1152(%rbp)       # 8-byte Spill
	movabsq	$54, %rax
	movq	%rax, -1160(%rbp)       # 8-byte Spill
	leaq	.L.str62, %rax
	movq	%rax, -1168(%rbp)       # 8-byte Spill
	leaq	.L.str59, %rax
	movq	%rax, -1176(%rbp)       # 8-byte Spill
	leaq	.L.str44, %rax
	movq	%rax, -1184(%rbp)       # 8-byte Spill
	leaq	.L.str58, %rax
	movq	%rax, -1192(%rbp)       # 8-byte Spill
	movabsq	$53, %rax
	movq	%rax, -1200(%rbp)       # 8-byte Spill
	leaq	.L.str60, %rax
	.loc	1 53 0                  # feature_extraction.c:53:0
.Ltmp62:
	subq	$16, %rsp
	movq	%rax, -1208(%rbp)       # 8-byte Spill
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str50, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, -1216(%rbp)       # 8-byte Spill
	movl	$.L.str57, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -1224(%rbp)       # 8-byte Spill
	movl	$.L.str29, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -1232(%rbp)       # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, -1240(%rbp)       # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, -1248(%rbp)       # 8-byte Spill
	movl	$1, %esi
	movq	%rdi, -1256(%rbp)       # 8-byte Spill
	movq	%rax, %rdi
	movq	-1240(%rbp), %rax       # 8-byte Reload
	movl	%esi, -1260(%rbp)       # 4-byte Spill
	movq	%rax, %rsi
	movq	-1224(%rbp), %rax       # 8-byte Reload
	movq	%rdx, -1272(%rbp)       # 8-byte Spill
	movq	%rax, %rdx
	movq	-1232(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1280(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1248(%rbp), %rax       # 8-byte Reload
	movq	%r8, -1288(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movl	-1260(%rbp), %eax       # 4-byte Reload
	movq	%r9, -1296(%rbp)        # 8-byte Spill
	movl	%eax, %r9d
	vmovsd	%xmm1, -1304(%rbp)      # 8-byte Spill
	movl	%r12d, -1308(%rbp)      # 4-byte Spill
	movq	%r13, -1320(%rbp)       # 8-byte Spill
	vmovss	%xmm0, -1324(%rbp)      # 4-byte Spill
	movq	%r15, -1336(%rbp)       # 8-byte Spill
	movq	%r14, -1344(%rbp)       # 8-byte Spill
	movq	%r10, -1352(%rbp)       # 8-byte Spill
	movq	%r11, -1360(%rbp)       # 8-byte Spill
	movq	%rbx, -1368(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str57, (%rcx)
	movl	$.L.str30, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %ecx
	movl	$64, %eax
	movl	%eax, %edx
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %eax
	movl	%eax, %edi
	movq	%rdi, -1376(%rbp)       # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, -1384(%rbp)       # 8-byte Spill
	movq	%rdx, %rsi
	movq	-1384(%rbp), %r10       # 8-byte Reload
	movq	%rdx, -1392(%rbp)       # 8-byte Spill
	movq	%r10, %rdx
	movq	-1376(%rbp), %r11       # 8-byte Reload
	movq	%rcx, -1400(%rbp)       # 8-byte Spill
	movq	%r11, %rcx
	movq	%r11, %r9
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str23, (%rcx)
	movl	$.L.str7, %eax
	movl	%eax, %r8d
	movq	-1376(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-1384(%rbp), %rdx       # 8-byte Reload
	movq	-1384(%rbp), %rcx       # 8-byte Reload
	movq	-1376(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str23, (%rcx)
	movl	$19134, %eax            # imm = 0x4ABE
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-984(%rbp), %rdx        # 8-byte Reload
	movq	-1376(%rbp), %r8        # 8-byte Reload
	movq	%rcx, -1408(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-1232(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str37, %eax
	movl	%eax, %ecx
	movl	$53, %eax
	movl	%eax, %edx
	movl	$8, %eax
	movl	%eax, %r8d
	movq	%rdx, %rdi
	movq	-1240(%rbp), %rsi       # 8-byte Reload
	movq	-1224(%rbp), %r9        # 8-byte Reload
	movq	%rdx, -1416(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -1424(%rbp)       # 8-byte Spill
	movl	-1260(%rbp), %r9d       # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movl	$.L.str34, %eax
	movl	%eax, %r8d
	movq	-1400(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-968(%rbp), %rdx        # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movq	-1376(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-984(%rbp), %rdx        # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1232(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-984(%rbp), %rcx        # 8-byte Reload
	movq	-968(%rbp), %rdx        # 8-byte Reload
	addq	%rdx, %rcx
	subq	$16, %rsp
	movq	%rsp, %rsi
	movq	$.L.str8, (%rsi)
	movq	-1408(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-1376(%rbp), %r8        # 8-byte Reload
	movq	%rcx, -1432(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-1424(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str38, %eax
	movl	%eax, %ecx
	movl	$29, %eax
	movl	%eax, %r8d
	movq	-1416(%rbp), %rdi       # 8-byte Reload
	movq	-1240(%rbp), %rsi       # 8-byte Reload
	movq	-1224(%rbp), %rdx       # 8-byte Reload
	movq	%rcx, -1440(%rbp)       # 8-byte Spill
	movl	-1260(%rbp), %r9d       # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movq	-1400(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1424(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movl	$.L.str49, %eax
	movl	%eax, %r8d
	movq	-1376(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	leaq	(%rcx,%rdx,4), %rsi
	subq	$16, %rsp
	movq	%rsp, %rdi
	movq	$.L.str8, (%rdi)
	movq	-1408(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %r8        # 8-byte Reload
	movq	%rsi, -1448(%rbp)       # 8-byte Spill
	movq	%r8, %rsi
	movq	-1448(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1440(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str32, %eax
	movl	%eax, %ecx
	movl	$27, %eax
	movl	%eax, %r8d
	movq	-1416(%rbp), %rdi       # 8-byte Reload
	movq	-1240(%rbp), %rsi       # 8-byte Reload
	movq	-1224(%rbp), %rdx       # 8-byte Reload
	movq	%rcx, -1456(%rbp)       # 8-byte Spill
	movl	-1260(%rbp), %r9d       # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movq	-1376(%rbp), %rdi       # 8-byte Reload
	movq	-1392(%rbp), %rsi       # 8-byte Reload
	movq	-1448(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1440(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movl	(%rcx,%rdx,4), %eax
	movl	%eax, %esi
	subq	$16, %rsp
	movq	%rsp, %rdi
	movq	$.L.str8, (%rdi)
	movl	$32, %r12d
	movl	%r12d, %edi
	movq	-1408(%rbp), %r8        # 8-byte Reload
	movq	%rdi, -1464(%rbp)       # 8-byte Spill
	movq	%r8, %rdi
	movq	-1464(%rbp), %r9        # 8-byte Reload
	movq	%rsi, -1472(%rbp)       # 8-byte Spill
	movq	%r9, %rsi
	movq	-1472(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1456(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	movl	%eax, -1476(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str44, %eax
	movl	%eax, %ecx
	movl	$39, %eax
	movl	%eax, %r8d
	movq	-1416(%rbp), %rdi       # 8-byte Reload
	movq	-1240(%rbp), %rsi       # 8-byte Reload
	movq	-1224(%rbp), %rdx       # 8-byte Reload
	movl	-1260(%rbp), %r9d       # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str8, (%rcx)
	movq	-1376(%rbp), %rdi       # 8-byte Reload
	movq	-1464(%rbp), %rsi       # 8-byte Reload
	movq	-1472(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1456(%rbp), %r8        # 8-byte Reload
	movq	-1384(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
                                        # implicit-def: XMM0
	movl	-1476(%rbp), %eax       # 4-byte Reload
	vcvtsi2ssl	%eax, %xmm0, %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	vmovss	%xmm0, -1480(%rbp)      # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	-1280(%rbp), %rdx       # 8-byte Reload
	movq	-1184(%rbp), %rcx       # 8-byte Reload
	movq	-1216(%rbp), %r8        # 8-byte Reload
	movq	-1256(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	subq	$16, %rsp
	movq	-1200(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1192(%rbp), %rcx       # 8-byte Reload
	movq	-1120(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1216(%rbp), %rcx       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1112(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1176(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-400(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1488(%rbp)       # 8-byte Spill
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1192(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1200(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1208(%rbp), %rcx       # 8-byte Reload
	movq	-1096(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1488(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1192(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	vmovss	-1480(%rbp), %xmm0      # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rdx       # 8-byte Reload
	movq	-1184(%rbp), %rcx       # 8-byte Reload
	movq	-1216(%rbp), %r8        # 8-byte Reload
	movq	-1256(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	movq	-400(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	vmovss	-1480(%rbp), %xmm0      # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	1 54 0                  # feature_extraction.c:54:0
	subq	$16, %rsp
	movq	-1160(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1152(%rbp), %rcx       # 8-byte Reload
	movq	-1120(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rdx       # 8-byte Reload
	movq	-1216(%rbp), %rcx       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1112(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1176(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-400(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1496(%rbp)       # 8-byte Spill
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1152(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1160(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1168(%rbp), %rcx       # 8-byte Reload
	movq	-1096(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1496(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1152(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	vmovsd	-1304(%rbp), %xmm0      # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1056(%rbp), %rcx       # 8-byte Reload
	movq	-1216(%rbp), %r8        # 8-byte Reload
	movq	-1256(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	movq	-400(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	vmovss	-1324(%rbp), %xmm0      # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	1 55 0                  # feature_extraction.c:55:0
	subq	$16, %rsp
	movq	-1136(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1128(%rbp), %rcx       # 8-byte Reload
	movq	-1120(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1216(%rbp), %rcx       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1112(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-416(%rbp), %rdx        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1104(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-416(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1504(%rbp)       # 8-byte Spill
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1128(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1136(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1144(%rbp), %rcx       # 8-byte Reload
	movq	-1096(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1504(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1128(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	vmovsd	-1304(%rbp), %xmm0      # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1056(%rbp), %rcx       # 8-byte Reload
	movq	-1216(%rbp), %r8        # 8-byte Reload
	movq	-1256(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	movq	-416(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	vmovss	-1324(%rbp), %xmm0      # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	1 56 0                  # feature_extraction.c:56:0
	subq	$16, %rsp
	movq	-1080(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1072(%rbp), %rcx       # 8-byte Reload
	movq	-1120(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rdx       # 8-byte Reload
	movq	-1216(%rbp), %rcx       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1112(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-416(%rbp), %rdx        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1104(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-416(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1512(%rbp)       # 8-byte Spill
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1072(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1080(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1088(%rbp), %rcx       # 8-byte Reload
	movq	-1096(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1512(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1072(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	vmovsd	-1304(%rbp), %xmm0      # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1056(%rbp), %rcx       # 8-byte Reload
	movq	-1216(%rbp), %r8        # 8-byte Reload
	movq	-1256(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	movq	-416(%rbp), %rcx        # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	vmovss	-1324(%rbp), %xmm0      # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp63:
	.loc	1 51 0                  # feature_extraction.c:51:0
	subq	$16, %rsp
	movq	-1368(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1032(%rbp), %rcx       # 8-byte Reload
	movq	-1064(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1280(%rbp), %rdx       # 8-byte Reload
	movq	-1216(%rbp), %rcx       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-984(%rbp), %rdx        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1048(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-984(%rbp), %rcx        # 8-byte Reload
	addq	$1, %rcx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-1280(%rbp), %r8        # 8-byte Reload
	movq	%rcx, -1520(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-1032(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1368(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1000(%rbp), %rcx       # 8-byte Reload
	movq	-1040(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1024(%rbp), %rsi       # 8-byte Reload
	movq	-1520(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1032(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1520(%rbp), %rcx       # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1000(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, -1524(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1368(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1272(%rbp), %rcx       # 8-byte Reload
	movq	-1016(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-136(%rbp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1008(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1524(%rbp), %eax       # 4-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-992(%rbp), %rsi        # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1000(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1524(%rbp), %eax       # 4-byte Reload
	movl	-136(%rbp), %r12d       # 4-byte Reload
	cmpl	%r12d, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-1320(%rbp), %rdi       # 8-byte Reload
	movq	-1280(%rbp), %rsi       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1272(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -1525(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1368(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1296(%rbp), %rdx       # 8-byte Reload
	movq	-1336(%rbp), %rcx       # 8-byte Reload
	movq	-1288(%rbp), %r8        # 8-byte Reload
	movl	-1308(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-1216(%rbp), %rsi       # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1360(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1216(%rbp), %rsi       # 8-byte Reload
	movq	-1216(%rbp), %rdx       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1296(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1525(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1280(%rbp), %rdi       # 8-byte Reload
	movq	-1280(%rbp), %rsi       # 8-byte Reload
	movq	-1280(%rbp), %rcx       # 8-byte Reload
	movq	-1272(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1256(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1525(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-1520(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -976(%rbp)        # 8-byte Spill
	jne	.LBB1_5
	jmp	.LBB1_4
.Ltmp64:
.LBB1_5:                                # %._crit_edge
                                        #   in Loop: Header=BB1_2 Depth=1
	movabsq	$3, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str71, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %r8
	movabsq	$2, %r9
	leaq	.L.str70, %r10
	leaq	.L.str73, %r11
	movabsq	$4, %rbx
	leaq	kiss_fft, %r14
	leaq	.L.str72, %r15
	movabsq	$58, %r12
	leaq	.L.str50, %r13
	movq	%rax, -1536(%rbp)       # 8-byte Spill
	leaq	.L.str19, %rax
	movq	%rax, -1544(%rbp)       # 8-byte Spill
	leaq	.L.str47, %rax
	movq	%rax, -1552(%rbp)       # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, -1560(%rbp)       # 8-byte Spill
	movl	$1, %esi
	movq	%rax, -1568(%rbp)       # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, -1576(%rbp)       # 8-byte Spill
	leaq	.L.str64, %rax
	movq	%rax, -1584(%rbp)       # 8-byte Spill
	leaq	.L.str69, %rax
	movq	%rax, -1592(%rbp)       # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, -1600(%rbp)       # 8-byte Spill
	leaq	.L.str59, %rax
	movq	%rax, -1608(%rbp)       # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -1616(%rbp)       # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, -1624(%rbp)       # 8-byte Spill
	movabsq	$35, %rax
	.loc	1 58 0                  # feature_extraction.c:58:0
	subq	$16, %rsp
	movq	%rdi, -1632(%rbp)       # 8-byte Spill
	movq	%r12, %rdi
	movl	%esi, -1636(%rbp)       # 4-byte Spill
	movq	%r13, %rsi
	movq	%rax, -1648(%rbp)       # 8-byte Spill
	movq	-1544(%rbp), %rax       # 8-byte Reload
	movq	%rdx, -1656(%rbp)       # 8-byte Spill
	movq	%rax, %rdx
	movq	-1592(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1664(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1648(%rbp), %rax       # 8-byte Reload
	movq	%r8, -1672(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movl	-1636(%rbp), %eax       # 4-byte Reload
	movq	%r9, -1680(%rbp)        # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r13, -1688(%rbp)       # 8-byte Spill
	movq	%r14, -1696(%rbp)       # 8-byte Spill
	movq	%r15, -1704(%rbp)       # 8-byte Spill
	movq	%r12, -1712(%rbp)       # 8-byte Spill
	movq	%rbx, -1720(%rbp)       # 8-byte Spill
	movq	%r11, -1728(%rbp)       # 8-byte Spill
	movq	%r10, -1736(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-832(%rbp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	subq	$16, %rsp
	movq	-1664(%rbp), %rdi       # 8-byte Reload
	movq	-1616(%rbp), %rsi       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1624(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-832(%rbp), %eax        # 4-byte Reload
	movslq	%eax, %rcx
	subq	$16, %rsp
	movq	-1576(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-1664(%rbp), %r8        # 8-byte Reload
	movq	%rcx, -1744(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-1592(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1712(%rbp), %rdi       # 8-byte Reload
	movq	-1688(%rbp), %rsi       # 8-byte Reload
	movq	-1544(%rbp), %rdx       # 8-byte Reload
	movq	-1736(%rbp), %rcx       # 8-byte Reload
	movq	-1600(%rbp), %r8        # 8-byte Reload
	movl	-1636(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1680(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-1744(%rbp), %rdx       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1592(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1664(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1608(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1744(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-400(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	subq	$16, %rsp
	movq	-1576(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1752(%rbp)       # 8-byte Spill
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1736(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1712(%rbp), %rdi       # 8-byte Reload
	movq	-1688(%rbp), %rsi       # 8-byte Reload
	movq	-1544(%rbp), %rdx       # 8-byte Reload
	movq	-1656(%rbp), %rcx       # 8-byte Reload
	movq	-1600(%rbp), %r8        # 8-byte Reload
	movl	-1636(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1680(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-1744(%rbp), %rdx       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1592(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1664(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-416(%rbp), %rdx        # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1584(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1744(%rbp), %rcx       # 8-byte Reload
	shlq	$3, %rcx
	movq	-416(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	subq	$16, %rsp
	movq	-1576(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	%rdx, -1760(%rbp)       # 8-byte Spill
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1712(%rbp), %rdi       # 8-byte Reload
	movq	-1688(%rbp), %rsi       # 8-byte Reload
	movq	-1544(%rbp), %rdx       # 8-byte Reload
	movq	-1552(%rbp), %rcx       # 8-byte Reload
	movq	-1568(%rbp), %r8        # 8-byte Reload
	movl	-1636(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1720(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-1696(%rbp), %rdx       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1704(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1664(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1728(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1680(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-1752(%rbp), %rdx       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1736(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1632(%rbp), %rdi       # 8-byte Reload
	movq	-1536(%rbp), %rsi       # 8-byte Reload
	movq	-1760(%rbp), %rdx       # 8-byte Reload
	movq	-1664(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1560(%rbp), %r9        # 8-byte Reload
	movq	-1672(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-1752(%rbp), %rsi       # 8-byte Reload
	movq	-1760(%rbp), %rdx       # 8-byte Reload
	callq	kiss_fft
	movabsq	$1, %rcx
	leaq	.L.str53, %r8
	movabsq	$0, %rdx
	leaq	.L.str8, %rsi
	movabsq	$2, %rdi
	leaq	.L.str56, %r9
	movabsq	$3, %r10
	leaq	.L.str75, %r11
	movabsq	$59, %rbx
	leaq	.L.str50, %r14
	leaq	.L.str19, %r15
	leaq	.L.str74, %r12
	movl	$1, %eax
.Ltmp65:
	#DEBUG_VALUE: i <- 0
	.loc	1 59 0                  # feature_extraction.c:59:0
	subq	$16, %rsp
	movq	%rdi, -1768(%rbp)       # 8-byte Spill
	movq	%rbx, %rdi
	movq	%rsi, -1776(%rbp)       # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, -1784(%rbp)       # 8-byte Spill
	movq	%r15, %rdx
	movq	%rcx, -1792(%rbp)       # 8-byte Spill
	movq	%r12, %rcx
	movq	-1768(%rbp), %rbx       # 8-byte Reload
	movq	%r8, -1800(%rbp)        # 8-byte Spill
	movq	%rbx, %r8
	movq	%r9, -1808(%rbp)        # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r10, -1816(%rbp)       # 8-byte Spill
	movq	%r11, -1824(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1784(%rbp), %rsi       # 8-byte Reload
	movq	-1784(%rbp), %rdx       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1824(%rbp), %r8        # 8-byte Reload
	movq	-1784(%rbp), %r9        # 8-byte Reload
	movq	-1776(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1768(%rbp), %rdi       # 8-byte Reload
	movq	-1784(%rbp), %rsi       # 8-byte Reload
	movq	-1784(%rbp), %rdx       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1808(%rbp), %r8        # 8-byte Reload
	movq	-1784(%rbp), %r9        # 8-byte Reload
	movq	-1776(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-570(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-1792(%rbp), %rdi       # 8-byte Reload
	movq	-1792(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1800(%rbp), %r8        # 8-byte Reload
	movq	-1784(%rbp), %r9        # 8-byte Reload
	movq	-1776(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-570(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_6
	jmp	.LBB1_8
.LBB1_6:                                # %.lr.ph5
                                        #   in Loop: Header=BB1_2 Depth=1
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str78, %r8
	leaq	.L.str8, %rdx
	movabsq	$59, %rsi
	leaq	.L.str50, %rdi
	leaq	.L.str75, %r9
	leaq	.L.str77, %r10
	movabsq	$2, %r11
	movl	$1, %ebx
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str76, %r12
	movabsq	$32, %r13
	movq	%rax, -1832(%rbp)       # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, -1840(%rbp)       # 8-byte Spill
	movabsq	$35, %rax
	subq	$16, %rsp
	movq	%rdi, -1848(%rbp)       # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, -1856(%rbp)       # 8-byte Spill
	movq	-1848(%rbp), %rax       # 8-byte Reload
	movq	%rsi, -1864(%rbp)       # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, -1872(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -1880(%rbp)       # 8-byte Spill
	movq	%r12, %rcx
	movq	-1856(%rbp), %rax       # 8-byte Reload
	movq	%r8, -1888(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -1896(%rbp)        # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, -1904(%rbp)       # 8-byte Spill
	movl	%ebx, -1908(%rbp)       # 4-byte Spill
	movq	%r15, -1920(%rbp)       # 8-byte Spill
	movq	%r12, -1928(%rbp)       # 8-byte Spill
	movq	%r13, -1936(%rbp)       # 8-byte Spill
	movq	%r11, -1944(%rbp)       # 8-byte Spill
	movq	%r10, -1952(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-832(%rbp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	subq	$16, %rsp
	movq	-1880(%rbp), %rdi       # 8-byte Reload
	movq	-1936(%rbp), %rsi       # 8-byte Reload
	movq	-1880(%rbp), %rcx       # 8-byte Reload
	movq	-1840(%rbp), %r8        # 8-byte Reload
	movq	-1832(%rbp), %r9        # 8-byte Reload
	movq	-1872(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-832(%rbp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	subq	$16, %rsp
	movq	-1904(%rbp), %rdi       # 8-byte Reload
	movq	-1920(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-1880(%rbp), %rcx       # 8-byte Reload
	movq	-1928(%rbp), %r8        # 8-byte Reload
	movq	-1832(%rbp), %r9        # 8-byte Reload
	movq	-1872(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -1960(%rbp)       # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1864(%rbp), %rdi       # 8-byte Reload
	movq	-1848(%rbp), %rsi       # 8-byte Reload
	movq	-1896(%rbp), %rdx       # 8-byte Reload
	movq	-1952(%rbp), %rcx       # 8-byte Reload
	movq	-1944(%rbp), %r8        # 8-byte Reload
	movl	-1908(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1880(%rbp), %rdi       # 8-byte Reload
	movq	-1832(%rbp), %rsi       # 8-byte Reload
	movq	-1832(%rbp), %rdx       # 8-byte Reload
	movq	-1880(%rbp), %rcx       # 8-byte Reload
	movq	-1888(%rbp), %r8        # 8-byte Reload
	movq	-1832(%rbp), %r9        # 8-byte Reload
	movq	-1872(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1832(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1968(%rbp)       # 8-byte Spill
.LBB1_7:                                #   Parent Loop BB1_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-1968(%rbp), %rax       # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str88, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %rdi
	movabsq	$2, %r8
	leaq	.L.str78, %r9
	movabsq	$3, %r10
	leaq	.L.str56, %r11
	movabsq	$59, %rbx
	leaq	.L.str50, %r14
	leaq	.L.str89, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -1976(%rbp)       # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -1984(%rbp)       # 8-byte Spill
	leaq	.L.str87, %rax
	movq	%rax, -1992(%rbp)       # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, -2000(%rbp)       # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -2008(%rbp)       # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -2016(%rbp)       # 8-byte Spill
	leaq	.L.str80, %rax
	movq	%rax, -2024(%rbp)       # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -2032(%rbp)       # 8-byte Spill
	leaq	.L.str79, %rax
	movq	%rax, -2040(%rbp)       # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -2048(%rbp)       # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, -2056(%rbp)       # 8-byte Spill
	leaq	.L.str84, %rax
	movq	%rax, -2064(%rbp)       # 8-byte Spill
	leaq	.L.str85, %rax
	movq	%rax, -2072(%rbp)       # 8-byte Spill
	movabsq	$61, %rax
	movq	%rax, -2080(%rbp)       # 8-byte Spill
	leaq	.L.str86, %rax
	movq	%rax, -2088(%rbp)       # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, -2096(%rbp)       # 8-byte Spill
	leaq	.L.str35, %rax
	movq	%rax, -2104(%rbp)       # 8-byte Spill
	leaq	.L.str81, %rax
	movq	%rax, -2112(%rbp)       # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, -2120(%rbp)       # 8-byte Spill
	leaq	.L.str83, %rax
	movq	%rax, -2128(%rbp)       # 8-byte Spill
	movabsq	$37, %rax
	movq	%rax, -2136(%rbp)       # 8-byte Spill
	leaq	.L.str82, %rax
	movq	%rax, -2144(%rbp)       # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, -2152(%rbp)       # 8-byte Spill
	leaq	.L.str64, %rax
	movq	%rax, -2160(%rbp)       # 8-byte Spill
	leaq	.L.str76, %rax
	movq	%rax, -2168(%rbp)       # 8-byte Spill
	leaq	.L.str75, %rax
	movq	%rax, -2176(%rbp)       # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, -2184(%rbp)       # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 61 0                  # feature_extraction.c:61:0
.Ltmp66:
	subq	$16, %rsp
	movq	%rax, -2192(%rbp)       # 8-byte Spill
	movq	-2184(%rbp), %rax       # 8-byte Reload
	movq	%rdi, -2200(%rbp)       # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -2208(%rbp)       # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, -2216(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	-2040(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -2224(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-2192(%rbp), %rax       # 8-byte Reload
	movq	%r8, -2232(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -2240(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r14, -2248(%rbp)       # 8-byte Spill
	movq	%r15, -2256(%rbp)       # 8-byte Spill
	movl	%r12d, -2260(%rbp)      # 4-byte Spill
	movq	%r13, -2272(%rbp)       # 8-byte Spill
	movq	%rbx, -2280(%rbp)       # 8-byte Spill
	movq	%r11, -2288(%rbp)       # 8-byte Spill
	movq	%r10, -2296(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2208(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2024(%rbp), %r8        # 8-byte Reload
	movq	-2224(%rbp), %r9        # 8-byte Reload
	movq	-2240(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2208(%rbp), %rdx       # 8-byte Reload
	movq	-2208(%rbp), %rcx       # 8-byte Reload
	movq	-2048(%rbp), %r8        # 8-byte Reload
	movq	-2224(%rbp), %r9        # 8-byte Reload
	movq	-2176(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-1976(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2040(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2176(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2112(%rbp), %rcx       # 8-byte Reload
	movq	-2056(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-1960(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2168(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-1976(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2040(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1976(%rbp), %rax       # 8-byte Reload
	movq	-1960(%rbp), %rcx       # 8-byte Reload
	addq	%rcx, %rax
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2112(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -2304(%rbp)       # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2144(%rbp), %rcx       # 8-byte Reload
	movq	-2120(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2296(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2208(%rbp), %rdx       # 8-byte Reload
	movq	-2208(%rbp), %rcx       # 8-byte Reload
	movq	-2048(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2304(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2112(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-416(%rbp), %rdx        # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2160(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-2304(%rbp), %rax       # 8-byte Reload
	shlq	$3, %rax
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-2224(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -2312(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-2144(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2128(%rbp), %rcx       # 8-byte Reload
	movq	-2152(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2312(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2144(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-416(%rbp), %rax        # 8-byte Reload
	movq	-2304(%rbp), %rcx       # 8-byte Reload
	vmovss	(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	vmovss	%xmm0, -2316(%rbp)      # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	-2224(%rbp), %rdx       # 8-byte Reload
	movq	-2128(%rbp), %rcx       # 8-byte Reload
	movq	-2208(%rbp), %r8        # 8-byte Reload
	movq	-2200(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2064(%rbp), %rcx       # 8-byte Reload
	movq	-2136(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	vmovss	-2316(%rbp), %xmm0      # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rdx       # 8-byte Reload
	movq	-2128(%rbp), %rcx       # 8-byte Reload
	movq	-2208(%rbp), %r8        # 8-byte Reload
	movq	-2200(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	-2316(%rbp), %xmm0      # 4-byte Reload
	vcvttss2si	%xmm0, %r12d
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2064(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r12d, -2320(%rbp)      # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2072(%rbp), %rcx       # 8-byte Reload
	movq	-2120(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2304(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2112(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2104(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-2304(%rbp), %rax       # 8-byte Reload
	shlq	$2, %rax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-2224(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -2328(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-2072(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2080(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2088(%rbp), %rcx       # 8-byte Reload
	movq	-2096(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2328(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2072(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-2320(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2064(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	-2304(%rbp), %rcx       # 8-byte Reload
	movl	-2320(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, (%rax,%rcx,4)
.Ltmp67:
	.loc	1 59 0                  # feature_extraction.c:59:0
	subq	$16, %rsp
	movq	-2280(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2024(%rbp), %rcx       # 8-byte Reload
	movq	-2056(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rdx       # 8-byte Reload
	movq	-2208(%rbp), %rcx       # 8-byte Reload
	movq	-2048(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-1976(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2040(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1976(%rbp), %rax       # 8-byte Reload
	addq	$1, %rax
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2024(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -2336(%rbp)       # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2280(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-1992(%rbp), %rcx       # 8-byte Reload
	movq	-2032(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2016(%rbp), %rsi       # 8-byte Reload
	movq	-2336(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2024(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-2336(%rbp), %rax       # 8-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-1992(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%r12d, -2340(%rbp)      # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2280(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2216(%rbp), %rcx       # 8-byte Reload
	movq	-2008(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-136(%rbp), %r9d        # 4-byte Reload
	movl	%r9d, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2000(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-2340(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-1984(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-1992(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-2340(%rbp), %r12d      # 4-byte Reload
	movl	-136(%rbp), %esi        # 4-byte Reload
	cmpl	%esi, %r12d
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	movq	-2224(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2216(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -2341(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2280(%rbp), %rdi       # 8-byte Reload
	movq	-2248(%rbp), %rsi       # 8-byte Reload
	movq	-2240(%rbp), %rdx       # 8-byte Reload
	movq	-2256(%rbp), %rcx       # 8-byte Reload
	movq	-2232(%rbp), %r8        # 8-byte Reload
	movl	-2260(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2296(%rbp), %rdi       # 8-byte Reload
	movq	-2208(%rbp), %rsi       # 8-byte Reload
	movq	-2208(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2288(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2232(%rbp), %rdi       # 8-byte Reload
	movq	-2208(%rbp), %rsi       # 8-byte Reload
	movq	-2208(%rbp), %rdx       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2240(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-2341(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-2224(%rbp), %rdi       # 8-byte Reload
	movq	-2224(%rbp), %rsi       # 8-byte Reload
	movq	-2224(%rbp), %rcx       # 8-byte Reload
	movq	-2216(%rbp), %r8        # 8-byte Reload
	movq	-2208(%rbp), %r9        # 8-byte Reload
	movq	-2200(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-2341(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-2336(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -1968(%rbp)       # 8-byte Spill
	jne	.LBB1_8
	jmp	.LBB1_7
.Ltmp68:
.LBB1_8:                                # %._crit_edge6
                                        #   in Loop: Header=BB1_2 Depth=1
	movabsq	$1, %rax
	leaq	.L.str91, %rcx
	movabsq	$0, %rdx
	leaq	.L.str8, %rsi
	movabsq	$2, %rdi
	leaq	.L.str16, %r8
	movabsq	$3, %r9
	leaq	.L.str52, %r10
	movabsq	$49, %r11
	leaq	.L.str50, %rbx
	leaq	.L.str56, %r14
	leaq	.L.str92, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -2352(%rbp)       # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -2360(%rbp)       # 8-byte Spill
	leaq	.L.str90, %rax
	movq	%rax, -2368(%rbp)       # 8-byte Spill
	leaq	.L.str9, %rax
	movq	%rax, -2376(%rbp)       # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -2384(%rbp)       # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -2392(%rbp)       # 8-byte Spill
	leaq	.L.str55, %rax
	movq	%rax, -2400(%rbp)       # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -2408(%rbp)       # 8-byte Spill
	leaq	.L.str54, %rax
	movq	%rax, -2416(%rbp)       # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -2424(%rbp)       # 8-byte Spill
	movabsq	$8, %rax
	.loc	1 49 0                  # feature_extraction.c:49:0
	subq	$16, %rsp
	movq	%rdi, -2432(%rbp)       # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, -2440(%rbp)       # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, -2448(%rbp)       # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, -2456(%rbp)       # 8-byte Spill
	movq	-2400(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -2464(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-2456(%rbp), %rax       # 8-byte Reload
	movq	%r8, -2472(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -2480(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r14, -2488(%rbp)       # 8-byte Spill
	movq	%r15, -2496(%rbp)       # 8-byte Spill
	movl	%r12d, -2500(%rbp)      # 4-byte Spill
	movq	%r13, -2512(%rbp)       # 8-byte Spill
	movq	%rbx, -2520(%rbp)       # 8-byte Spill
	movq	%r11, -2528(%rbp)       # 8-byte Spill
	movq	%r10, -2536(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2432(%rbp), %rdi       # 8-byte Reload
	movq	-2392(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rdx       # 8-byte Reload
	movq	-2448(%rbp), %rcx       # 8-byte Reload
	movq	-2424(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2352(%rbp), %rdi       # 8-byte Reload
	movq	-2392(%rbp), %rsi       # 8-byte Reload
	movq	-592(%rbp), %rdx        # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2416(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-592(%rbp), %rax        # 8-byte Reload
	addq	$1, %rax
	subq	$16, %rsp
	movq	-2512(%rbp), %rdi       # 8-byte Reload
	movq	-2392(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2400(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -2544(%rbp)       # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2528(%rbp), %rdi       # 8-byte Reload
	movq	-2520(%rbp), %rsi       # 8-byte Reload
	movq	-2488(%rbp), %rdx       # 8-byte Reload
	movq	-2368(%rbp), %rcx       # 8-byte Reload
	movq	-2408(%rbp), %r8        # 8-byte Reload
	movl	-2500(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2352(%rbp), %rdi       # 8-byte Reload
	movq	-2392(%rbp), %rsi       # 8-byte Reload
	movq	-2544(%rbp), %rdx       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2400(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-2544(%rbp), %rax       # 8-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2512(%rbp), %rdi       # 8-byte Reload
	movq	-2360(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2368(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%r12d, -2548(%rbp)      # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2528(%rbp), %rdi       # 8-byte Reload
	movq	-2520(%rbp), %rsi       # 8-byte Reload
	movq	-2488(%rbp), %rdx       # 8-byte Reload
	movq	-2464(%rbp), %rcx       # 8-byte Reload
	movq	-2384(%rbp), %r8        # 8-byte Reload
	movl	-2500(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-68(%rbp), %r9d         # 4-byte Reload
	movl	%r9d, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-2432(%rbp), %rdi       # 8-byte Reload
	movq	-2360(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2376(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-2548(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-2352(%rbp), %rdi       # 8-byte Reload
	movq	-2360(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2368(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-2548(%rbp), %r12d      # 4-byte Reload
	movl	-68(%rbp), %esi         # 4-byte Reload
	cmpl	%esi, %r12d
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-2512(%rbp), %rdi       # 8-byte Reload
	movq	-2352(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2464(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -2549(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2528(%rbp), %rdi       # 8-byte Reload
	movq	-2520(%rbp), %rsi       # 8-byte Reload
	movq	-2488(%rbp), %rdx       # 8-byte Reload
	movq	-2496(%rbp), %rcx       # 8-byte Reload
	movq	-2432(%rbp), %r8        # 8-byte Reload
	movl	-2500(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2480(%rbp), %rdi       # 8-byte Reload
	movq	-2448(%rbp), %rsi       # 8-byte Reload
	movq	-2448(%rbp), %rdx       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2536(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-2432(%rbp), %rdi       # 8-byte Reload
	movq	-2448(%rbp), %rsi       # 8-byte Reload
	movq	-2448(%rbp), %rdx       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2472(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-2549(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-2352(%rbp), %rdi       # 8-byte Reload
	movq	-2352(%rbp), %rsi       # 8-byte Reload
	movq	-2352(%rbp), %rcx       # 8-byte Reload
	movq	-2464(%rbp), %r8        # 8-byte Reload
	movq	-2448(%rbp), %r9        # 8-byte Reload
	movq	-2440(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-2549(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-2544(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -584(%rbp)        # 8-byte Spill
	jne	.LBB1_9
	jmp	.LBB1_2
.Ltmp69:
.LBB1_9:                                # %._crit_edge8
	movabsq	$67, %rdi
	leaq	.L.str50, %rsi
	leaq	.L.str52, %rdx
	leaq	.L.str93, %rcx
	movabsq	$1, %r8
	movl	$1, %r9d
	.loc	1 67 0                  # feature_extraction.c:67:0
	subq	$16, %rsp
	movl	$1, (%rsp)
	callq	trace_logger_log0
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp70:
.Ltmp71:
	.size	process_data, .Ltmp71-process_data
.Lfunc_end1:
	.cfi_endproc

	.globl	main
	.align	16, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
.Lfunc_begin2:
	.loc	1 69 0                  # feature_extraction.c:69:0
# BB#0:
	pushq	%rbp
.Ltmp79:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp80:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp81:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp82:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp83:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp84:
	.cfi_def_cfa_offset 56
	subq	$2040, %rsp             # imm = 0x7F8
.Ltmp85:
	.cfi_def_cfa_offset 2096
.Ltmp86:
	.cfi_offset %rbx, -56
.Ltmp87:
	.cfi_offset %r12, -48
.Ltmp88:
	.cfi_offset %r13, -40
.Ltmp89:
	.cfi_offset %r14, -32
.Ltmp90:
	.cfi_offset %r15, -24
.Ltmp91:
	.cfi_offset %rbp, -16
	leaq	.L.str110, %rdi
	movabsq	$419, %rsi              # imm = 0x1A3
	.loc	1 71 0 prologue_end     # feature_extraction.c:71:0
.Ltmp92:
	callq	trace_logger_write_labelmap
	movabsq	$1, %rsi
	movabsq	$64, %rdi
	movabsq	$600, %rdx              # imm = 0x258
	movabsq	$0, %rax
	leaq	.L.str7, %r8
	leaq	.L.str8, %rcx
	movabsq	$2, %r9
	leaq	malloc, %r10
	leaq	.L.str95, %r11
	movabsq	$71, %rbx
	leaq	.L.str94, %r14
	leaq	.L.str5, %r15
	leaq	.L.str6, %r12
	movabsq	$49, %r13
	movl	$0, %ebp
	movq	%rsi, 2032(%rsp)        # 8-byte Spill
	movl	$1, %esi
	movq	%rdi, 2024(%rsp)        # 8-byte Spill
	movq	%rbx, %rdi
	movl	%esi, 2020(%rsp)        # 4-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 2008(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	%rcx, 2000(%rsp)        # 8-byte Spill
	movq	%r12, %rcx
	movq	%r8, 1992(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	%r9, 1984(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r11, 1976(%rsp)        # 8-byte Spill
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	movq	%r10, 1960(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1984(%rsp), %rdi        # 8-byte Reload
	movq	2024(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movq	1968(%rsp), %r9         # 8-byte Reload
	movq	2000(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2024(%rsp), %rsi        # 8-byte Reload
	movq	2008(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1992(%rsp), %r8         # 8-byte Reload
	movq	1968(%rsp), %r9         # 8-byte Reload
	movq	2000(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$600, %ebp              # imm = 0x258
	movl	%ebp, %edi
	callq	malloc
	movabsq	$1, %rcx
	movabsq	$64, %rdx
	movabsq	$600, %rsi              # imm = 0x258
	movabsq	$0, %rdi
	leaq	.L.str7, %r8
	leaq	.L.str8, %r9
	movabsq	$2, %r10
	leaq	malloc, %r11
	leaq	.L.str95, %rbx
	movabsq	$72, %r14
	leaq	.L.str94, %r15
	leaq	.L.str5, %r12
	leaq	.L.str20, %r13
	movabsq	$49, %rbp
	movq	%rsi, 1952(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1948(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str13, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str6, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	movabsq	$71, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	movq	1928(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1888(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1884(%rsp)        # 4-byte Spill
	movq	%rdx, %rsi
	movq	1936(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1872(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 1864(%rsp)        # 8-byte Spill
	movq	1912(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1856(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1888(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1848(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, 1840(%rsp)        # 8-byte Spill
	movq	%r12, 1832(%rsp)        # 8-byte Spill
	movq	%r13, 1824(%rsp)        # 8-byte Spill
	movq	%rbp, 1816(%rsp)        # 8-byte Spill
	movq	%r14, 1808(%rsp)        # 8-byte Spill
	movq	%rbx, 1800(%rsp)        # 8-byte Spill
	movq	%r10, 1792(%rsp)        # 8-byte Spill
	movq	%r11, 1784(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1904(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1896(%rsp), %r8         # 8-byte Reload
	movl	1948(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1936(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1912(%rsp), %r8         # 8-byte Reload
	movq	1888(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1936(%rsp), %rax        # 8-byte Reload
	movq	1928(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1888(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp93:
	#DEBUG_VALUE: main:time_data <- [RSP+1776]
	.loc	1 72 0                  # feature_extraction.c:72:0
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movl	1948(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1792(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1784(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1888(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1872(%rsp), %rsi        # 8-byte Reload
	movq	1952(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1856(%rsp), %r8         # 8-byte Reload
	movq	1888(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$600, %esi              # imm = 0x258
	movl	%esi, %edi
	callq	malloc
.Ltmp94:
	movabsq	$0, %rcx
	movabsq	$1, %rdx
	leaq	.L.str16, %r8
	leaq	.L.str8, %rdi
	movabsq	$75, %r9
	leaq	.L.str94, %r10
	leaq	.L.str5, %r11
	leaq	.L.str96, %rbx
	movabsq	$2, %r14
	movl	$0, %esi
	movl	$1, %ebp
	movabsq	$19134, %r15            # imm = 0x4ABE
	movabsq	$64, %r12
	leaq	.L.str24, %r13
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movabsq	$72, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rdi, 1744(%rsp)        # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 1740(%rsp)        # 4-byte Spill
	movq	%r12, %rsi
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	movq	1768(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1720(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1720(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1760(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1704(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1696(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	1744(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 1692(%rsp)        # 4-byte Spill
	movq	%r15, 1680(%rsp)        # 8-byte Spill
	movq	%r12, 1672(%rsp)        # 8-byte Spill
	movq	%r13, 1664(%rsp)        # 8-byte Spill
	movq	%r14, 1656(%rsp)        # 8-byte Spill
	movq	%r10, 1648(%rsp)        # 8-byte Spill
	movq	%r11, 1640(%rsp)        # 8-byte Spill
	movq	%rbx, 1632(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1752(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rdx        # 8-byte Reload
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movl	1740(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1672(%rsp), %rsi        # 8-byte Reload
	movq	1768(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1744(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1768(%rsp), %rax        # 8-byte Reload
	movq	1680(%rsp), %rdi        # 8-byte Reload
	movq	1672(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1744(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp95:
	#DEBUG_VALUE: main:freq_data <- [RSP+1624]
	#DEBUG_VALUE: j <- 0
	.loc	1 75 0                  # feature_extraction.c:75:0
	movq	1696(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1740(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1712(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1744(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rax, 1616(%rsp)        # 8-byte Spill
.Ltmp96:
.LBB2_1:                                # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_2 Depth 2
	movq	1616(%rsp), %rax        # 8-byte Reload
	movabsq	$0, %rcx
	movabsq	$1, %rdx
	leaq	.L.str100, %r8
	leaq	.L.str8, %rsi
	movabsq	$77, %rdi
	leaq	.L.str94, %r9
	leaq	.L.str16, %r10
	leaq	.L.str22, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$19134, %r15            # imm = 0x4ABE
	movabsq	$64, %r12
	leaq	.L.str25, %r13
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str97, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	movabsq	$10, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	movabsq	$79, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str5, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str98, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	leaq	.L.str99, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 79 0                  # feature_extraction.c:79:0
.Ltmp97:
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	movq	1536(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1520(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1512(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 1504(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1496(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1488(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1480(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%r14d, 1476(%rsp)       # 4-byte Spill
	movq	%r15, 1464(%rsp)        # 8-byte Spill
	movl	%ebp, 1460(%rsp)        # 4-byte Spill
	movq	%r12, 1448(%rsp)        # 8-byte Spill
	movq	%r13, 1440(%rsp)        # 8-byte Spill
	movq	%rbx, 1432(%rsp)        # 8-byte Spill
	movq	%r10, 1424(%rsp)        # 8-byte Spill
	movq	%r11, 1416(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1432(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1504(%rsp), %r9         # 8-byte Reload
	movq	1544(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1504(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1504(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1464(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %r8         # 8-byte Reload
	movq	1496(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1424(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movl	1460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1432(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1496(%rsp), %r9         # 8-byte Reload
	movq	1512(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1504(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %r8         # 8-byte Reload
	movq	1496(%rsp), %r9         # 8-byte Reload
	movq	1512(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rax        # 8-byte Reload
	imulq	$10, %rax, %rcx
.Ltmp98:
	.loc	1 77 0                  # feature_extraction.c:77:0
	movq	1464(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1408(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1496(%rsp), %r9         # 8-byte Reload
	movq	1512(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1424(%rsp), %rdx        # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	1460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1504(%rsp), %rdi        # 8-byte Reload
	movq	1496(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	1496(%rsp), %r9         # 8-byte Reload
	movq	1512(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1496(%rsp), %rax        # 8-byte Reload
	movq	%rax, 1400(%rsp)        # 8-byte Spill
.LBB2_2:                                #   Parent Loop BB2_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	1400(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str41, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %rdi
	movabsq	$2, %r8
	leaq	.L.str100, %r9
	movabsq	$3, %r10
	leaq	.L.str99, %r11
	movabsq	$77, %rbx
	leaq	.L.str94, %r14
	leaq	.L.str103, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	leaq	.L.str30, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	movabsq	$10, %rax
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1352(%rsp)        # 8-byte Spill
	leaq	.L.str29, %rax
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	leaq	.L.str34, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	movabsq	$80, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str102, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str24, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	leaq	.L.str53, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str33, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str31, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	movabsq	$79, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str101, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str13, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str25, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str16, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 79 0                  # feature_extraction.c:79:0
.Ltmp99:
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	movq	1192(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1176(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1168(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1160(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	1344(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1152(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1184(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1144(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1136(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1128(%rsp)        # 8-byte Spill
	movl	%ebp, 1124(%rsp)        # 4-byte Spill
	movl	%r12d, 1120(%rsp)       # 4-byte Spill
	movq	%r13, 1112(%rsp)        # 8-byte Spill
	movq	%r14, 1104(%rsp)        # 8-byte Spill
	movq	%rbx, 1096(%rsp)        # 8-byte Spill
	movq	%r10, 1088(%rsp)        # 8-byte Spill
	movq	%r11, 1080(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1168(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	movq	1136(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1168(%rsp), %rdx        # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	movq	1200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1392(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1272(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1392(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1392(%rsp), %rax        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	addq	%rcx, %rax
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1072(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1776(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1072(%rsp), %rax        # 8-byte Reload
	shlq	$2, %rax
	movq	1776(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1152(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1064(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1392(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1392(%rsp), %rax        # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1328(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 1060(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	1060(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1328(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1776(%rsp), %rax        # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movl	1060(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, (%rax,%rcx,4)
	.loc	1 80 0                  # feature_extraction.c:80:0
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1072(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1624(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1072(%rsp), %rax        # 8-byte Reload
	shlq	$2, %rax
	movq	1624(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1152(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1048(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1048(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1328(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1624(%rsp), %rax        # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movl	$-1, (%rax,%rcx,4)
.Ltmp100:
	.loc	1 77 0                  # feature_extraction.c:77:0
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1376(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rdx        # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1392(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1392(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1040(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1040(%rsp), %rax        # 8-byte Reload
	cmpq	$10, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1039(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1104(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movl	1124(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1168(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1080(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1168(%rsp), %rdx        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1039(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1152(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1168(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1039(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 1400(%rsp)        # 8-byte Spill
	jne	.LBB2_3
	jmp	.LBB2_2
.Ltmp101:
.LBB2_3:                                #   in Loop: Header=BB2_1 Depth=1
	movabsq	$1, %rax
	leaq	.L.str104, %rcx
	movabsq	$0, %rdx
	leaq	.L.str8, %rsi
	movabsq	$2, %rdi
	leaq	.L.str16, %r8
	movabsq	$3, %r9
	leaq	.L.str106, %r10
	movabsq	$75, %r11
	leaq	.L.str94, %rbx
	leaq	.L.str99, %r14
	leaq	.L.str105, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str98, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	movabsq	$15, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str97, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	1 75 0                  # feature_extraction.c:75:0
	movq	%rdi, 968(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 960(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 952(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 944(%rsp)         # 8-byte Spill
	movq	1008(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	944(%rsp), %rax         # 8-byte Reload
	movq	%r8, 928(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 920(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 912(%rsp)         # 8-byte Spill
	movl	%ebp, 908(%rsp)         # 4-byte Spill
	movl	%r12d, 904(%rsp)        # 4-byte Spill
	movq	%r13, 896(%rsp)         # 8-byte Spill
	movq	%r14, 888(%rsp)         # 8-byte Spill
	movq	%rbx, 880(%rsp)         # 8-byte Spill
	movq	%r10, 872(%rsp)         # 8-byte Spill
	movq	%r11, 864(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	896(%rsp), %rdi         # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 856(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	1000(%rsp), %rdx        # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rax         # 8-byte Reload
	cmpq	$15, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	896(%rsp), %rdi         # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 855(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	952(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	952(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	855(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	952(%rsp), %r9          # 8-byte Reload
	movq	960(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	855(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	%rcx, 1616(%rsp)        # 8-byte Spill
	jne	.LBB2_4
	jmp	.LBB2_1
.Ltmp102:
.LBB2_4:
	movabsq	$4, %rdi
	movabsq	$64, %rax
	movabsq	$0, %rcx
	leaq	.L.str7, %rdx
	leaq	.L.str8, %rsi
	movabsq	$3, %r8
	movabsq	$2, %r9
	movabsq	$32, %r10
	movabsq	$1, %r11
	movabsq	$10, %rbx
	movabsq	$5, %r14
	leaq	kiss_fft_alloc, %r15
	leaq	.L.str107, %r12
	movabsq	$92, %r13
	leaq	.L.str94, %rbp
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str106, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	leaq	.L.str38, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 816(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 812(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	1 92 0                  # feature_extraction.c:92:0
	movq	%rdi, 800(%rsp)         # 8-byte Spill
	movq	%r13, %rdi
	movl	%esi, 796(%rsp)         # 4-byte Spill
	movq	%rbp, %rsi
	movq	832(%rsp), %r13         # 8-byte Reload
	movq	%rdx, 784(%rsp)         # 8-byte Spill
	movq	%r13, %rdx
	movq	824(%rsp), %rbp         # 8-byte Reload
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movq	%rbp, %rcx
	movq	%r8, 768(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	812(%rsp), %ebp         # 4-byte Reload
	movq	%r9, 760(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r12, 752(%rsp)         # 8-byte Spill
	movq	%r14, 744(%rsp)         # 8-byte Spill
	movq	%r15, 736(%rsp)         # 8-byte Spill
	movq	%rbx, 728(%rsp)         # 8-byte Spill
	movq	%r11, 720(%rsp)         # 8-byte Spill
	movq	%r10, 712(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	760(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	xorl	%ebp, %ebp
	movl	%ebp, %eax
	movl	$10, %edi
	movl	%ebp, %esi
	movq	%rax, %rdx
	movq	%rax, %rcx
	callq	kiss_fft_alloc
	movabsq	$5, %rdi
	movabsq	$64, %rcx
	movabsq	$1, %rdx
	leaq	.L.str38, %r8
	movabsq	$0, %r9
	leaq	.L.str8, %r10
	movabsq	$4, %r11
	movabsq	$32, %rbx
	movabsq	$15, %r14
	leaq	.L.str7, %r15
	movabsq	$3, %r12
	movabsq	$10, %r13
	movabsq	$2, %rsi
	leaq	.L.str24, %rbp
	movq	%rax, 704(%rsp)         # 8-byte Spill
	leaq	.L.str13, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	movabsq	$6, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	process_data, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str50, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	movabsq	$94, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str94, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	leaq	.L.str106, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str108, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 632(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 628(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 616(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rdi, 608(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 604(%rsp)         # 4-byte Spill
	movq	%rcx, %rsi
	movq	704(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 592(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	%r8, 576(%rsp)          # 8-byte Spill
	movq	%r9, 568(%rsp)          # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%rbp, 560(%rsp)         # 8-byte Spill
	movq	%r13, 552(%rsp)         # 8-byte Spill
	movq	%r12, 544(%rsp)         # 8-byte Spill
	movq	%r15, 536(%rsp)         # 8-byte Spill
	movq	%r14, 528(%rsp)         # 8-byte Spill
	movq	%r10, 520(%rsp)         # 8-byte Spill
	movq	%r11, 512(%rsp)         # 8-byte Spill
	movq	%rbx, 504(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp103:
	#DEBUG_VALUE: main:cfg <- [RSP+704]
	.loc	1 94 0                  # feature_extraction.c:94:0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	656(%rsp), %rsi         # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movl	628(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	584(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	592(%rsp), %rdi         # 8-byte Reload
	movq	584(%rsp), %rsi         # 8-byte Reload
	movq	1776(%rsp), %rdx        # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	584(%rsp), %rsi         # 8-byte Reload
	movq	1624(%rsp), %rdx        # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	544(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	552(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	608(%rsp), %rdi         # 8-byte Reload
	movq	584(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movq	568(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	$10, %edx
	movl	$15, %ecx
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1624(%rsp), %rsi        # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	callq	process_data
.Ltmp104:
	movabsq	$4, %rdi
	movabsq	$32, %rax
	movabsq	$15, %rdx
	movabsq	$0, %rsi
	leaq	.L.str7, %r8
	leaq	.L.str8, %r9
	movabsq	$3, %r10
	movabsq	$10, %r11
	movabsq	$2, %rbx
	movabsq	$64, %r14
	movabsq	$1, %r15
	leaq	.L.str24, %r12
                                        # implicit-def: R13
	movabsq	$5, %rbp
	leaq	test_stores, %rcx
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str4, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	movabsq	$110, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	leaq	.L.str94, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	leaq	.L.str106, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rax
	movq	%rax, 456(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 448(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 444(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	1 110 0                 # feature_extraction.c:110:0
	movq	%rax, 432(%rsp)         # 8-byte Spill
	movq	480(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 424(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	472(%rsp), %rax         # 8-byte Reload
	movl	%esi, 420(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	464(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 408(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 400(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%r8, 392(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	444(%rsp), %eax         # 4-byte Reload
	movq	%r9, 384(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r12, 376(%rsp)         # 8-byte Spill
	movq	%r13, 368(%rsp)         # 8-byte Spill
	movq	%rbp, 360(%rsp)         # 8-byte Spill
	movq	%r15, 352(%rsp)         # 8-byte Spill
	movq	%r14, 344(%rsp)         # 8-byte Spill
	movq	%r10, 336(%rsp)         # 8-byte Spill
	movq	%r11, 328(%rsp)         # 8-byte Spill
	movq	%rbx, 320(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	352(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	1624(%rsp), %rdx        # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	$10, %edx
	movl	$15, %ecx
                                        # implicit-def: RDI
	movq	1624(%rsp), %rsi        # 8-byte Reload
	callq	test_stores
	movabsq	$2, %rdi
	movabsq	$64, %rsi
	leaq	.L.str3, %rdx
	movabsq	$0, %r8
	leaq	.L.str7, %r9
	leaq	.L.str8, %r10
	movabsq	$1, %r11
	leaq	.L.str44, %rbx
	movabsq	$3, %r14
	leaq	fprintf, %r15
	leaq	.L.str39, %r12
	movabsq	$115, %r13
	leaq	.L.str94, %rbp
	leaq	.L.str106, %rcx
	movq	%rcx, 312(%rsp)         # 8-byte Spill
	leaq	.L.str58, %rcx
	movq	%rcx, 304(%rsp)         # 8-byte Spill
	movabsq	$49, %rcx
	movl	%eax, 300(%rsp)         # 4-byte Spill
	movl	$0, %eax
	movl	%eax, 296(%rsp)         # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	leaq	stdout, %rcx
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str21, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	movabsq	$112, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rcx
	movl	%eax, 236(%rsp)         # 4-byte Spill
	movl	300(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 224(%rsp)         # 8-byte Spill
	movq	280(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 216(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	240(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 208(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	224(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 200(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%r8, 184(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%r9, 176(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movq	%r12, 168(%rsp)         # 8-byte Spill
	movq	%rbp, 160(%rsp)         # 8-byte Spill
	movq	%r13, 152(%rsp)         # 8-byte Spill
	movq	%r15, 144(%rsp)         # 8-byte Spill
	movq	%r14, 136(%rsp)         # 8-byte Spill
	movq	%r10, 128(%rsp)         # 8-byte Spill
	movq	%r11, 120(%rsp)         # 8-byte Spill
	movq	%rbx, 112(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp105:
	#DEBUG_VALUE: main:num_failures <- 0
	.loc	1 112 0                 # feature_extraction.c:112:0
	movq	256(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movl	296(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rsi         # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rax
.Ltmp106:
	.loc	1 115 0                 # feature_extraction.c:115:0
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 104(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movl	296(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rsi         # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rsi         # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	208(%rsp), %rsi         # 8-byte Reload
	movq	200(%rsp), %rdx         # 8-byte Reload
	movq	184(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str3, %esi
                                        # kill: RSI<def> ESI<kill>
	xorl	%edi, %edi
	movb	%dil, %al
	movq	104(%rsp), %rdi         # 8-byte Reload
	callq	fprintf
	movl	$0, %esi
	movabsq	$1, %rcx
	movabsq	$32, %rdx
	movabsq	$0, %rdi
	leaq	.L.str7, %r8
	leaq	.L.str8, %r9
	movabsq	$117, %r10
	leaq	.L.str94, %r11
	leaq	.L.str106, %rbx
	leaq	.L.str109, %r14
	movl	$1, %ebp
	movabsq	$19134, %r15            # imm = 0x4ABE
	leaq	.L.str58, %r12
	.loc	1 117 0                 # feature_extraction.c:117:0
	movl	%eax, %eax
	movl	%eax, %r13d
	movq	%rdi, 96(%rsp)          # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 92(%rsp)          # 4-byte Spill
	movq	%rdx, %rsi
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movq	%r13, %rdx
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movq	%r8, 64(%rsp)           # 8-byte Spill
	movq	%r12, %r8
	movq	96(%rsp), %r15          # 8-byte Reload
	movq	%r9, 56(%rsp)           # 8-byte Spill
	movq	%r15, %r9
	movq	56(%rsp), %r12          # 8-byte Reload
	movq	%r12, (%rsp)
	movq	%r10, 48(%rsp)          # 8-byte Spill
	movl	%ebp, 44(%rsp)          # 4-byte Spill
	movq	%r11, 32(%rsp)          # 8-byte Spill
	movq	%rbx, 24(%rsp)          # 8-byte Spill
	movq	%r14, 16(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movl	92(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	64(%rsp), %r8           # 8-byte Reload
	movq	96(%rsp), %r9           # 8-byte Reload
	movq	56(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	92(%rsp), %eax          # 4-byte Reload
	addq	$2040, %rsp             # imm = 0x7F8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp107:
.Ltmp108:
	.size	main, .Ltmp108-main
.Lfunc_end2:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI3_0:
	.quad	-4604611780675359464    # double -6.2831853071795862
.LCPI3_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	kiss_fft_alloc
	.align	16, 0x90
	.type	kiss_fft_alloc,@function
kiss_fft_alloc:                         # @kiss_fft_alloc
	.cfi_startproc
.Lfunc_begin3:
	.loc	2 348 0                 # kiss_fft.c:348:0
# BB#0:
	pushq	%rbp
.Ltmp116:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp117:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp118:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp119:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp120:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp121:
	.cfi_def_cfa_offset 56
	subq	$3208, %rsp             # imm = 0xC88
.Ltmp122:
	.cfi_def_cfa_offset 3264
.Ltmp123:
	.cfi_offset %rbx, -56
.Ltmp124:
	.cfi_offset %r12, -48
.Ltmp125:
	.cfi_offset %r13, -40
.Ltmp126:
	.cfi_offset %r14, -32
.Ltmp127:
	.cfi_offset %r15, -24
.Ltmp128:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str9120, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %r10
	movabsq	$2, %r11
	leaq	.L.str13124, %rbx
	movabsq	$3, %r14
	leaq	.L.str12123, %r15
	movabsq	$353, %r12              # imm = 0x161
	leaq	.L.str111, %r13
	leaq	.L.str1112, %rbp
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	leaq	.L.str11122, %rax
	movl	%esi, 3196(%rsp)        # 4-byte Spill
	movl	$0, %esi
	movl	%esi, 3192(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3176(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	leaq	.L.str10121, %rax
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	movabsq	$272, %rax              # imm = 0x110
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	movabsq	$350, %rax              # imm = 0x15E
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 3104(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 3096(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3088(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3080(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 3072(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3064(%rsp)        # 8-byte Spill
	leaq	.L.str5116, %rax
	movq	%rax, 3056(%rsp)        # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 3048(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3040(%rsp)        # 8-byte Spill
	leaq	.L.str20131, %rax
	movq	%rax, 3032(%rsp)        # 8-byte Spill
	leaq	.L.str42153, %rax
	.loc	2 347 0 prologue_end    # kiss_fft.c:347:0
.Ltmp129:
	movl	%esi, 3028(%rsp)        # 4-byte Spill
	movl	%edi, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 3016(%rsp)        # 8-byte Spill
	movq	3040(%rsp), %rax        # 8-byte Reload
	movl	%edi, 3012(%rsp)        # 4-byte Spill
	movq	%rax, %rdi
	movq	3080(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3000(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3000(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2992(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3200(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2984(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2976(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2968(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r12, 2960(%rsp)        # 8-byte Spill
	movq	%rbp, 2952(%rsp)        # 8-byte Spill
	movq	%r13, 2944(%rsp)        # 8-byte Spill
	movq	%r15, 2936(%rsp)        # 8-byte Spill
	movq	%r14, 2928(%rsp)        # 8-byte Spill
	movq	%rbx, 2920(%rsp)        # 8-byte Spill
	movq	%r10, 2912(%rsp)        # 8-byte Spill
	movq	%r11, 2904(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movl	3196(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kiss_fft_alloc:nfft <- [RSP+3012]
	#DEBUG_VALUE: kiss_fft_alloc:inverse_fft <- [RSP+3196]
	#DEBUG_VALUE: kiss_fft_alloc:mem <- [RSP+2992]
	#DEBUG_VALUE: kiss_fft_alloc:lenmem <- [RSP+2984]
	.loc	2 350 0                 # kiss_fft.c:350:0
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3072(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3048(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3056(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %esi        # 4-byte Reload
	addl	$4294967295, %esi       # imm = 0xFFFFFFFF
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rax        # 8-byte Reload
	movl	%esi, 2900(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2900(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2900(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2888(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3128(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2928(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2888(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3136(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	3120(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2880(%rsp), %rax        # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2872(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp130:
	#DEBUG_VALUE: kiss_fft_alloc:memneeded <- [RSP+2872]
	.loc	2 353 0                 # kiss_fft.c:353:0
	movq	2960(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	3144(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2984(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2871(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2960(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3184(%rsp), %rcx        # 8-byte Reload
	movq	2904(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2928(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2920(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2871(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2871(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_1
	jmp	.LBB3_2
.Ltmp131:
.LBB3_1:
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str8119, %r8
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	malloc, %r9
	leaq	.L.str15126, %r10
	movabsq	$354, %r11              # imm = 0x162
	leaq	.L.str111, %rbx
	leaq	.L.str12123, %r14
	leaq	.L.str14125, %r15
	movabsq	$49, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	.loc	2 354 0                 # kiss_fft.c:354:0
.Ltmp132:
	movq	%rdi, 2856(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2848(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2840(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 2832(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	%r8, 2824(%rsp)         # 8-byte Spill
	movq	%r12, %r8
	movq	%r9, 2816(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 2808(%rsp)        # 8-byte Spill
	movq	%r10, 2800(%rsp)        # 8-byte Spill
	movl	%r13d, 2796(%rsp)       # 4-byte Spill
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	2832(%rsp), %rsi        # 8-byte Reload
	movq	2816(%rsp), %rdx        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movq	2840(%rsp), %r9         # 8-byte Reload
	movq	2848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2808(%rsp), %rdi        # 8-byte Reload
	movq	2832(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2840(%rsp), %r9         # 8-byte Reload
	movq	2848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2872(%rsp), %rdi        # 8-byte Reload
	callq	malloc
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str18129, %r8
	leaq	.L.str4115, %rsi
	movabsq	$355, %rdi              # imm = 0x163
	leaq	.L.str111, %r9
	leaq	.L.str12123, %r10
	leaq	.L.str17128, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r13d
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str16127, %r12
	movq	%rax, 2784(%rsp)        # 8-byte Spill
	leaq	.L.str14125, %rax
	movq	%rax, 2776(%rsp)        # 8-byte Spill
	movabsq	$354, %rax              # imm = 0x162
	movq	%rax, 2768(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rdi, 2760(%rsp)        # 8-byte Spill
	movq	%r14, %rdi
	movq	%rsi, 2752(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	movq	2784(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2736(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 2728(%rsp)        # 8-byte Spill
	movq	2776(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2720(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	2736(%rsp), %rax        # 8-byte Reload
	movq	%r9, 2712(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r13d, 2708(%rsp)       # 4-byte Spill
	movq	%r14, 2696(%rsp)        # 8-byte Spill
	movl	%ebp, 2692(%rsp)        # 4-byte Spill
	movq	%r15, 2680(%rsp)        # 8-byte Spill
	movq	%r12, 2672(%rsp)        # 8-byte Spill
	movq	%rbx, 2664(%rsp)        # 8-byte Spill
	movq	%r10, 2656(%rsp)        # 8-byte Spill
	movq	%r11, 2648(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2672(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2680(%rsp), %rsi        # 8-byte Reload
	movq	2784(%rsp), %rdx        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2784(%rsp), %rax        # 8-byte Reload
	movq	2696(%rsp), %rdi        # 8-byte Reload
	movq	2680(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp133:
	#DEBUG_VALUE: kiss_fft_alloc:st <- [RSP+2640]
	.loc	2 355 0                 # kiss_fft.c:355:0
	movq	2760(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2648(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2736(%rsp), %rsi        # 8-byte Reload
	movq	2736(%rsp), %rdx        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2640(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	jmp	.LBB3_6
.Ltmp134:
.LBB3_2:
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str19130, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str23134, %r8
	movabsq	$3, %r9
	leaq	.L.str22133, %r10
	movabsq	$356, %r11              # imm = 0x164
	leaq	.L.str111, %rbx
	leaq	.L.str13124, %r14
	leaq	.L.str21132, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	leaq	.L.str20131, %rax
	movq	%rax, 2608(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	.loc	2 356 0                 # kiss_fft.c:356:0
.Ltmp135:
	movq	%rdi, 2592(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2584(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2576(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 2568(%rsp)        # 8-byte Spill
	movq	2576(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2560(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2568(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2552(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2544(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2536(%rsp)        # 8-byte Spill
	movl	%ebp, 2532(%rsp)        # 4-byte Spill
	movl	%r12d, 2528(%rsp)       # 4-byte Spill
	movq	%r13, 2520(%rsp)        # 8-byte Spill
	movq	%r14, 2512(%rsp)        # 8-byte Spill
	movq	%rbx, 2504(%rsp)        # 8-byte Spill
	movq	%r10, 2496(%rsp)        # 8-byte Spill
	movq	%r11, 2488(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2992(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2560(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2487(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2488(%rsp), %rdi        # 8-byte Reload
	movq	2504(%rsp), %rsi        # 8-byte Reload
	movq	2512(%rsp), %rdx        # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2532(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2544(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2487(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2560(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2487(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2472(%rsp)        # 8-byte Spill
	jne	.LBB3_5
# BB#3:
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str25136, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str27138, %r8
	movabsq	$3, %r9
	leaq	.L.str22133, %r10
	movabsq	$356, %r11              # imm = 0x164
	leaq	.L.str111, %rbx
	leaq	.L.str23134, %r14
	leaq	.L.str26137, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	leaq	.L.str10121, %rax
	movq	%rax, 2424(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rdi, 2416(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2408(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2400(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	movq	2448(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2384(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2392(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2376(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2368(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2360(%rsp)        # 8-byte Spill
	movl	%ebp, 2356(%rsp)        # 4-byte Spill
	movl	%r12d, 2352(%rsp)       # 4-byte Spill
	movq	%r13, 2344(%rsp)        # 8-byte Spill
	movq	%r14, 2336(%rsp)        # 8-byte Spill
	movq	%rbx, 2328(%rsp)        # 8-byte Spill
	movq	%r10, 2320(%rsp)        # 8-byte Spill
	movq	%r11, 2312(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2424(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2984(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2344(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2304(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2448(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2312(%rsp), %rdi        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2416(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2440(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2304(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2448(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2304(%rsp), %rax        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	cmpq	%rcx, %rax
	setb	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2344(%rsp), %rdi        # 8-byte Reload
	movq	2384(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2303(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2312(%rsp), %rdi        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movl	2356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2464(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2416(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2464(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2303(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2384(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2303(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2472(%rsp)        # 8-byte Spill
	jne	.LBB3_5
# BB#4:
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str22133, %r8
	leaq	.L.str4115, %rdx
	movabsq	$357, %rsi              # imm = 0x165
	leaq	.L.str111, %rdi
	leaq	.L.str27138, %r9
	leaq	.L.str29140, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str20131, %r12
	leaq	.L.str28139, %r13
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	.loc	2 357 0                 # kiss_fft.c:357:0
	movq	%rdi, 2280(%rsp)        # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	movq	2280(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2264(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 2256(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 2248(%rsp)        # 8-byte Spill
	movq	%r13, %rcx
	movq	2272(%rsp), %r13        # 8-byte Reload
	movq	%r8, 2240(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	%r9, 2232(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 2228(%rsp)        # 4-byte Spill
	movq	%r15, 2216(%rsp)        # 8-byte Spill
	movq	%r12, 2208(%rsp)        # 8-byte Spill
	movq	%r14, 2200(%rsp)        # 8-byte Spill
	movl	%ebx, 2196(%rsp)        # 4-byte Spill
	movq	%r10, 2184(%rsp)        # 8-byte Spill
	movq	%r11, 2176(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2992(%rsp), %rax        # 8-byte Reload
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp136:
	#DEBUG_VALUE: kiss_fft_alloc:st <- [RSP+2168]
	movq	2264(%rsp), %rdi        # 8-byte Reload
	movq	2280(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2196(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2248(%rsp), %rsi        # 8-byte Reload
	movq	2248(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2168(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2472(%rsp)        # 8-byte Spill
.Ltmp137:
.LBB3_5:
	movq	2472(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str18129, %r8
	leaq	.L.str4115, %rsi
	movabsq	$-1, %rdi
	leaq	.L.str111, %r9
	leaq	.L.str22133, %r10
	leaq	.L.str32143, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$64, %r15
	leaq	.L.str8119, %r12
	leaq	.L.str10121, %r13
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	movabsq	$358, %rax              # imm = 0x166
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str31142, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str30141, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str27138, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str20131, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	leaq	.L.str23134, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	leaq	.L.str13124, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 358 0                 # kiss_fft.c:358:0
	movq	%rdi, 2064(%rsp)        # 8-byte Spill
	movq	%rsi, 2056(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 2048(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2032(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2040(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2024(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2016(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%r14d, 2012(%rsp)       # 4-byte Spill
	movq	%r15, 2000(%rsp)        # 8-byte Spill
	movl	%ebp, 1996(%rsp)        # 4-byte Spill
	movq	%r12, 1984(%rsp)        # 8-byte Spill
	movq	%r13, 1976(%rsp)        # 8-byte Spill
	movq	%rbx, 1968(%rsp)        # 8-byte Spill
	movq	%r10, 1960(%rsp)        # 8-byte Spill
	movq	%r11, 1952(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2072(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2160(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2152(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2136(%rsp), %r8         # 8-byte Reload
	movl	1996(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	1984(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2984(%rsp), %rax        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	movq	2064(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	1968(%rsp), %r8         # 8-byte Reload
	movl	1996(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2048(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2024(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2160(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2632(%rsp)        # 8-byte Spill
.Ltmp138:
.LBB3_6:
	movq	2632(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str34145, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str37148, %r9
	movabsq	$3, %r10
	leaq	.L.str36147, %r11
	movabsq	$360, %rbx              # imm = 0x168
	leaq	.L.str111, %r14
	leaq	.L.str18129, %r15
	leaq	.L.str35146, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str33144, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str12123, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	leaq	.L.str30141, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	leaq	.L.str22133, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 360 0                 # kiss_fft.c:360:0
.Ltmp139:
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	movq	1864(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1848(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1840(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1832(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1824(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1856(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1816(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1808(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1800(%rsp)        # 8-byte Spill
	movq	%r12, 1792(%rsp)        # 8-byte Spill
	movl	%ebp, 1788(%rsp)        # 4-byte Spill
	movl	%r13d, 1784(%rsp)       # 4-byte Spill
	movq	%r14, 1776(%rsp)        # 8-byte Spill
	movq	%rbx, 1768(%rsp)        # 8-byte Spill
	movq	%r10, 1760(%rsp)        # 8-byte Spill
	movq	%r11, 1752(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1880(%rsp), %r8         # 8-byte Reload
	movq	1824(%rsp), %r9         # 8-byte Reload
	movq	1872(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1888(%rsp), %r8         # 8-byte Reload
	movq	1824(%rsp), %r9         # 8-byte Reload
	movq	1896(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1896(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1768(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1800(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1904(%rsp), %r8         # 8-byte Reload
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1912(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1751(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1768(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1800(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1752(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1751(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1751(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_13
# BB#7:
	movabsq	$1, %rax
	leaq	.L.str43154, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str46157, %r8
	movabsq	$3, %r9
	leaq	.L.str45156, %r10
	movabsq	$365, %r11              # imm = 0x16D
	leaq	.L.str111, %rbx
	leaq	.L.str37148, %r14
	leaq	.L.str44155, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str5116, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str42153, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	movabsq	$363, %rax              # imm = 0x16B
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str41152, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str33144, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	movabsq	$362, %rax              # imm = 0x16A
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str39150, %rax
	.loc	2 362 0                 # kiss_fft.c:362:0
.Ltmp140:
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	movq	1624(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1608(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1600(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 1592(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	1632(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1584(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1576(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1560(%rsp)        # 8-byte Spill
	movl	%ebp, 1556(%rsp)        # 4-byte Spill
	movl	%r12d, 1552(%rsp)       # 4-byte Spill
	movq	%r13, 1544(%rsp)        # 8-byte Spill
	movq	%r14, 1536(%rsp)        # 8-byte Spill
	movq	%rbx, 1528(%rsp)        # 8-byte Spill
	movq	%r10, 1520(%rsp)        # 8-byte Spill
	movq	%r11, 1512(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1944(%rsp), %rax        # 8-byte Reload
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, (%rax)
	.loc	2 363 0                 # kiss_fft.c:363:0
	movq	1672(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1672(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3196(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1944(%rsp), %rax        # 8-byte Reload
	movl	3196(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 4(%rax)
.Ltmp141:
	#DEBUG_VALUE: i <- 0
	.loc	2 365 0                 # kiss_fft.c:365:0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r12d
	movl	%r12d, %edx
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1736(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1503(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1608(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1576(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1503(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1736(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1503(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_8
	jmp	.LBB3_12
.LBB3_8:                                # %.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str49160, %r8
	leaq	.L.str4115, %rdx
	movabsq	$365, %rdi              # imm = 0x16D
	leaq	.L.str111, %rsi
	leaq	.L.str45156, %r9
	leaq	.L.str48159, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str47158, %r12
	.loc	2 367 0                 # kiss_fft.c:367:0
.Ltmp142:
	movq	%rsp, %r13
	movl	$1, (%r13)
	movl	$.L.str111, %r13d
                                        # kill: R13<def> R13D<kill>
	movq	%rsi, 1488(%rsp)        # 8-byte Spill
	movl	$.L.str45156, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1480(%rsp)        # 8-byte Spill
	movl	$.L.str47158, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1472(%rsp)        # 8-byte Spill
	movl	$367, %esi              # imm = 0x16F
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1464(%rsp)        # 8-byte Spill
	movl	$39, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1456(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1440(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1436(%rsp)        # 4-byte Spill
	movq	%r13, %rsi
	movq	1480(%rsp), %r13        # 8-byte Reload
	movq	%rdx, 1424(%rsp)        # 8-byte Spill
	movq	%r13, %rdx
	movq	1472(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1416(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1408(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1436(%rsp), %r13d       # 4-byte Reload
	movq	%r9, 1400(%rsp)         # 8-byte Spill
	movl	%r13d, %r9d
	movq	%r14, 1392(%rsp)        # 8-byte Spill
	movl	%ebp, 1388(%rsp)        # 4-byte Spill
	movq	%r15, 1376(%rsp)        # 8-byte Spill
	movq	%r12, 1368(%rsp)        # 8-byte Spill
	movl	%ebx, 1364(%rsp)        # 4-byte Spill
	movq	%r10, 1352(%rsp)        # 8-byte Spill
	movq	%r11, 1344(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	3012(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str5116, %ebx
	movl	%ebx, %r8d
	movl	$32, %ebx
	movl	%ebx, %esi
	movl	$1, %ebx
	movl	%ebx, %eax
	movl	1436(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %r9d
	movq	%rax, %rdi
	movq	%rax, %rcx
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	3012(%rsp), %ebx        # 4-byte Reload
	vcvtsi2sdl	%ebx, %xmm0, %xmm0
.Ltmp143:
	.loc	2 365 0                 # kiss_fft.c:365:0
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1376(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1336(%rsp)       # 8-byte Spill
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1440(%rsp), %rdi        # 8-byte Reload
	movq	1488(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movl	1364(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1416(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1448(%rsp), %rax        # 8-byte Reload
	movq	%rax, 1328(%rsp)        # 8-byte Spill
.LBB3_9:                                # =>This Inner Loop Header: Depth=1
	movq	1328(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str58169, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str60171, %r9
	movabsq	$3, %r10
	leaq	.L.str52163, %r11
	movabsq	$368, %rbx              # imm = 0x170
	leaq	.L.str111, %r14
	leaq	.L.str49160, %r15
	leaq	.L.str59170, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str57168, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	movabsq	$367, %rax              # imm = 0x16F
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$16, %rax
	vmovsd	.LCPI3_0, %xmm0
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	.loc	2 366 0                 # kiss_fft.c:366:0
.Ltmp144:
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str111, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 1192(%rsp)        # 8-byte Spill
	movl	$.L.str49160, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1184(%rsp)        # 8-byte Spill
	movl	$.L.str50161, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1176(%rsp)        # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, 1160(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rdi, 1152(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1168(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1148(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1184(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1136(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1128(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1160(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1120(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1148(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1112(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	vmovsd	%xmm0, 1104(%rsp)       # 8-byte Spill
	movq	%r12, 1096(%rsp)        # 8-byte Spill
	movl	%ebp, 1092(%rsp)        # 4-byte Spill
	movl	%r13d, 1088(%rsp)       # 4-byte Spill
	movq	%r15, 1080(%rsp)        # 8-byte Spill
	movq	%r14, 1072(%rsp)        # 8-byte Spill
	movq	%r10, 1064(%rsp)        # 8-byte Spill
	movq	%r11, 1056(%rsp)        # 8-byte Spill
	movq	%rbx, 1048(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str52163, (%rcx)
	movl	$.L.str51162, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %edi
	movl	$64, %eax
	movl	%eax, %ecx
	movl	1148(%rsp), %eax        # 4-byte Reload
	movl	%eax, %edx
	movl	$1, %r9d
	movl	%r9d, %esi
	movq	%rsi, 1040(%rsp)        # 8-byte Spill
	movq	%rcx, %rsi
	movq	%rdx, 1032(%rsp)        # 8-byte Spill
	movq	1040(%rsp), %r10        # 8-byte Reload
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	movq	%r10, %rcx
	movq	%r10, %r9
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str45156, (%rcx)
	movl	$.L.str3114, %eax
	movl	%eax, %r8d
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1032(%rsp), %rdx        # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	1040(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str45156, (%rcx)
	movl	$19134, %eax            # imm = 0x4ABE
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1016(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
.Ltmp145:
	#DEBUG_VALUE: pi <- 3.141593e+00
	.loc	2 367 0                 # kiss_fft.c:367:0
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str53164, %eax
	movl	%eax, %ecx
	movl	$367, %eax              # imm = 0x16F
	movl	%eax, %edx
	movl	$33, %eax
	movl	%eax, %r8d
	movq	%rdx, %rdi
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1184(%rsp), %r9         # 8-byte Reload
	movq	%rdx, 1008(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	movl	1148(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	%rsp, %rsi
	movq	$.L.str4115, (%rsi)
	movl	$32, %ebp
	movl	%ebp, %esi
	movq	1016(%rsp), %rdi        # 8-byte Reload
	movq	%rsi, 992(%rsp)         # 8-byte Spill
	movq	%rdx, 984(%rsp)         # 8-byte Spill
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movl	%eax, 980(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str54165, %eax
	movl	%eax, %ecx
	movl	$39, %eax
	movl	%eax, %r8d
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1184(%rsp), %rdx        # 8-byte Reload
	movl	1148(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	992(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	980(%rsp), %eax         # 4-byte Reload
	vcvtsi2sdl	%eax, %xmm0, %xmm0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 968(%rsp)        # 8-byte Spill
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	1104(%rsp), %xmm0       # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1288(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	968(%rsp), %xmm0        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	968(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1104(%rsp), %xmm1       # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	vmovsd	%xmm2, 960(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm0       # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	960(%rsp), %xmm0        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	960(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm1       # 8-byte Reload
	vdivsd	%xmm1, %xmm0, %xmm2
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	vmovsd	%xmm2, 952(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
.Ltmp146:
	#DEBUG_VALUE: phase <- [RSP+952]
	.loc	2 368 0                 # kiss_fft.c:368:0
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 948(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	948(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	948(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 947(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	947(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	947(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	vmovsd	%xmm0, 936(%rsp)        # 8-byte Spill
	jne	.LBB3_11
.Ltmp147:
# BB#10:                                #   in Loop: Header=BB3_9 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str52163, %r8
	leaq	.L.str4115, %rdx
	movabsq	$369, %rsi              # imm = 0x171
	leaq	.L.str111, %rdi
	leaq	.L.str60171, %r9
	leaq	.L.str62173, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str61172, %r12
	movabsq	$-1, %r13
	vmovsd	.LCPI3_1, %xmm0
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	.loc	2 369 0                 # kiss_fft.c:369:0
	movq	%rdi, 904(%rsp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 896(%rsp)         # 8-byte Spill
	movq	904(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%r12, %rcx
	movq	896(%rsp), %rax         # 8-byte Reload
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 856(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r15, 848(%rsp)         # 8-byte Spill
	movq	%r14, 840(%rsp)         # 8-byte Spill
	movq	%r12, 832(%rsp)         # 8-byte Spill
	movq	%r13, 824(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 816(%rsp)        # 8-byte Spill
	movl	%ebp, 812(%rsp)         # 4-byte Spill
	movq	%r10, 800(%rsp)         # 8-byte Spill
	movq	%r11, 792(%rsp)         # 8-byte Spill
	movl	%ebx, 788(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovsd	816(%rsp), %xmm0        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	vmovsd	816(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	840(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 776(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
.Ltmp148:
	#DEBUG_VALUE: phase <- [RSP+776]
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	904(%rsp), %rsi         # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movl	788(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	872(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	872(%rsp), %r9          # 8-byte Reload
	movq	880(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovsd	776(%rsp), %xmm0        # 8-byte Reload
	vmovsd	%xmm0, 936(%rsp)        # 8-byte Spill
.Ltmp149:
.LBB3_11:                               #   in Loop: Header=BB3_9 Depth=1
	vmovsd	936(%rsp), %xmm0        # 8-byte Reload
	movabsq	$1, %rax
	leaq	.L.str75186, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str49160, %r8
	movabsq	$3, %r9
	leaq	.L.str46157, %r10
	movabsq	$365, %r11              # imm = 0x16D
	leaq	.L.str111, %rbx
	leaq	.L.str52163, %r14
	leaq	.L.str76187, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str74185, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	leaq	.L.str5116, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	leaq	.L.str51162, %rax
	movq	%rax, 720(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	leaq	.L.str50161, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str72183, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	movabsq	$370, %rax              # imm = 0x172
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str73184, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str33144, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str69180, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str63174, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	sin, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	leaq	.L.str70181, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	movabsq	$102, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str66177, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str67178, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str68179, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str64175, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	cos, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str65176, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	movabsq	$103, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str60171, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str61172, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 370 0                 # kiss_fft.c:370:0
.Ltmp150:
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movq	480(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 464(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 456(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 448(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 440(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	472(%rsp), %rax         # 8-byte Reload
	movq	%r8, 432(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 424(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	vmovsd	%xmm0, 416(%rsp)        # 8-byte Spill
	movq	%r15, 408(%rsp)         # 8-byte Spill
	movl	%ebp, 404(%rsp)         # 4-byte Spill
	movl	%r12d, 400(%rsp)        # 4-byte Spill
	movq	%r13, 392(%rsp)         # 8-byte Spill
	movq	%r14, 384(%rsp)         # 8-byte Spill
	movq	%rbx, 376(%rsp)         # 8-byte Spill
	movq	%r10, 368(%rsp)         # 8-byte Spill
	movq	%r11, 360(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	768(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	768(%rsp), %r9          # 8-byte Reload
	movq	504(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	504(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	callq	cos
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 352(%rsp)        # 8-byte Spill
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	352(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	352(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 348(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1320(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 336(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	348(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1944(%rsp), %rax        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	vmovss	348(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 264(%rax,%rcx,8)
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	568(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	callq	sin
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 328(%rsp)        # 8-byte Spill
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	328(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	328(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 324(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1320(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1944(%rsp), %rax        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 268(%rax,%rcx,8)
.Ltmp151:
	.loc	2 365 0                 # kiss_fft.c:365:0
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1320(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 304(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	304(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	304(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 300(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	440(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3012(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	300(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	300(%rsp), %ebp         # 4-byte Reload
	movl	3012(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	768(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 299(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	368(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	299(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	768(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	299(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	%rcx, 1328(%rsp)        # 8-byte Spill
	jne	.LBB3_12
	jmp	.LBB3_9
.Ltmp152:
.LBB3_12:                               # %._crit_edge
	movabsq	$2, %rax
	movabsq	$64, %rcx
	movabsq	$1, %rdx
	leaq	.L.str77188, %rsi
	movabsq	$0, %rdi
	leaq	.L.str4115, %r8
	movabsq	$32, %r9
	leaq	.L.str5116, %r10
	movabsq	$3, %r11
	leaq	kf_factor, %rbx
	leaq	.L.str79190, %r14
	movabsq	$373, %r15              # imm = 0x175
	leaq	.L.str111, %r12
	leaq	.L.str46157, %r13
	leaq	.L.str78189, %rbp
	movq	%rax, 288(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 280(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 276(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 264(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str33144, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	.loc	2 373 0                 # kiss_fft.c:373:0
	movq	%rdi, 224(%rsp)         # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 220(%rsp)         # 4-byte Spill
	movq	%r12, %rsi
	movq	%rdx, 208(%rsp)         # 8-byte Spill
	movq	%r13, %rdx
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movq	280(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	200(%rsp), %rax         # 8-byte Reload
	movq	%r8, 184(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	276(%rsp), %eax         # 4-byte Reload
	movq	%r9, 176(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 168(%rsp)         # 8-byte Spill
	movq	%r12, 160(%rsp)         # 8-byte Spill
	movq	%r13, 152(%rsp)         # 8-byte Spill
	movq	%rbp, 144(%rsp)         # 8-byte Spill
	movq	%r14, 136(%rsp)         # 8-byte Spill
	movq	%rbx, 128(%rsp)         # 8-byte Spill
	movq	%r10, 120(%rsp)         # 8-byte Spill
	movq	%r11, 112(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	232(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	256(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	168(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movl	276(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %edi        # 4-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	callq	kf_factor
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str36147, %r8
	leaq	.L.str4115, %rsi
	movabsq	$374, %rdi              # imm = 0x176
	leaq	.L.str111, %r9
	leaq	.L.str46157, %r10
	leaq	.L.str80191, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	.loc	2 374 0                 # kiss_fft.c:374:0
	movq	%rsi, 96(%rsp)          # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 88(%rsp)          # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 72(%rsp)           # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 68(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp153:
.LBB3_13:
	movabsq	$1, %rax
	movabsq	$64, %rsi
	leaq	.L.str33144, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %rcx
	movabsq	$375, %rdi              # imm = 0x177
	leaq	.L.str111, %rdx
	leaq	.L.str36147, %r10
	leaq	.L.str81192, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	.loc	2 375 0                 # kiss_fft.c:375:0
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	movq	%rdx, %rsi
	movq	%r10, %rdx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 40(%rsp)           # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 32(%rsp)           # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movl	%ebp, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	56(%rsp), %rsi          # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	48(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$3208, %rsp             # imm = 0xC88
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp154:
.Ltmp155:
	.size	kiss_fft_alloc, .Ltmp155-kiss_fft_alloc
.Lfunc_end3:
	.cfi_endproc

	.globl	kiss_fft_stride
	.align	16, 0x90
	.type	kiss_fft_stride,@function
kiss_fft_stride:                        # @kiss_fft_stride
	.cfi_startproc
.Lfunc_begin4:
	.loc	2 380 0                 # kiss_fft.c:380:0
# BB#0:
	pushq	%rbp
.Ltmp163:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp164:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp165:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp166:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp167:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp168:
	.cfi_def_cfa_offset 56
	subq	$376, %rsp              # imm = 0x178
.Ltmp169:
	.cfi_def_cfa_offset 432
.Ltmp170:
	.cfi_offset %rbx, -56
.Ltmp171:
	.cfi_offset %r12, -48
.Ltmp172:
	.cfi_offset %r13, -40
.Ltmp173:
	.cfi_offset %r14, -32
.Ltmp174:
	.cfi_offset %r15, -24
.Ltmp175:
	.cfi_offset %rbp, -16
	leaq	360(%rsp), %rax
	leaq	368(%rsp), %r8
	movabsq	$1, %r9
	movabsq	$6, %r10
	movabsq	$64, %r11
	leaq	.L.str117, %rbx
	movabsq	$0, %r14
	leaq	.L.str4115, %r15
	movabsq	$5, %r12
	leaq	.L.str7118, %r13
	movabsq	$4, %rbp
	movq	%rax, 352(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 344(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 336(%rsp)         # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 328(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 320(%rsp)         # 8-byte Spill
	movabsq	$2, %rax
	movq	%rax, 312(%rsp)         # 8-byte Spill
	leaq	.L.str114, %rax
	movq	%rax, 304(%rsp)         # 8-byte Spill
	leaq	.L.str116, %rax
	movq	%rax, 296(%rsp)         # 8-byte Spill
	movabsq	$7, %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	leaq	kf_work, %rax
	movq	%rax, 280(%rsp)         # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movabsq	$391, %rax              # imm = 0x187
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str112, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movl	%ecx, 236(%rsp)         # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 232(%rsp)         # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 224(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	.L.str115, %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	.L.str113, %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	movabsq	$26, %rax
	movq	%rax, 160(%rsp)         # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rdi, 144(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 136(%rsp)         # 8-byte Spill
	movq	%r11, %rsi
	movq	%rax, 128(%rsp)         # 8-byte Spill
	movq	144(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movl	%ecx, 116(%rsp)         # 4-byte Spill
	movq	%r9, %rcx
	movq	%r8, 104(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movq	%r9, 96(%rsp)           # 8-byte Spill
	movq	%r14, %r9
	movq	%r15, (%rsp)
	movq	%r12, 88(%rsp)          # 8-byte Spill
	movq	%r13, 80(%rsp)          # 8-byte Spill
	movq	%rbp, 72(%rsp)          # 8-byte Spill
	movq	%r15, 64(%rsp)          # 8-byte Spill
	movq	%r14, 56(%rsp)          # 8-byte Spill
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	movq	%r10, 40(%rsp)          # 8-byte Spill
	movq	%r11, 32(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	236(%rsp), %esi         # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	.loc	2 379 0 prologue_end    # kiss_fft.c:379:0
.Ltmp176:
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kiss_fft_stride:st <- [RSP+144]
	#DEBUG_VALUE: kiss_fft_stride:fin <- [RSP+136]
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	176(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	136(%rsp), %rax         # 8-byte Reload
	movq	%rax, 368(%rsp)
.Ltmp177:
	#DEBUG_VALUE: kiss_fft_stride:fin <- [RSP+104]
	#DEBUG_VALUE: kiss_fft_stride:fout <- [RSP+120]
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rax         # 8-byte Reload
	movq	%rax, 360(%rsp)
.Ltmp178:
	#DEBUG_VALUE: kiss_fft_stride:fout <- [RSP+352]
	#DEBUG_VALUE: kiss_fft_stride:in_stride <- [RSP+236]
	.loc	2 391 0                 # kiss_fft.c:391:0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	48(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	144(%rsp), %rax         # 8-byte Reload
	addq	$8, %rax
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	%rax, %rdx
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	240(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movl	232(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	280(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	272(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rcx          # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	236(%rsp), %esi         # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	88(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	40(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	48(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	352(%rsp), %rdi         # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movl	236(%rsp), %ecx         # 4-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	144(%rsp), %r9          # 8-byte Reload
	callq	kf_work
	movabsq	$392, %rdi              # imm = 0x188
	leaq	.L.str112, %rsi
	leaq	.L.str1112, %rdx
	leaq	.L.str121, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %r10d
	.loc	2 392 0                 # kiss_fft.c:392:0
	movl	$1, (%rsp)
	movl	%r10d, 20(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	addq	$376, %rsp              # imm = 0x178
.Ltmp179:
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp180:
.Ltmp181:
	.size	kiss_fft_stride, .Ltmp181-kiss_fft_stride
.Lfunc_end4:
	.cfi_endproc

	.globl	kiss_fft
	.align	16, 0x90
	.type	kiss_fft,@function
kiss_fft:                               # @kiss_fft
	.cfi_startproc
.Lfunc_begin5:
	.loc	2 395 0                 # kiss_fft.c:395:0
# BB#0:
	pushq	%rbp
.Ltmp189:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp190:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp191:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp192:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp193:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp194:
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
.Ltmp195:
	.cfi_def_cfa_offset 288
.Ltmp196:
	.cfi_offset %rbx, -56
.Ltmp197:
	.cfi_offset %r12, -48
.Ltmp198:
	.cfi_offset %r13, -40
.Ltmp199:
	.cfi_offset %r14, -32
.Ltmp200:
	.cfi_offset %r15, -24
.Ltmp201:
	.cfi_offset %rbp, -16
	movabsq	$4, %rax
	movabsq	$32, %rcx
	movabsq	$1, %r8
	movabsq	$0, %r9
	leaq	.L.str3114, %r10
	leaq	.L.str4115, %r11
	movabsq	$3, %rbx
	movabsq	$64, %r14
	leaq	.L.str116, %r15
	movabsq	$2, %r12
	leaq	.L.str114, %r13
	leaq	.L.str179, %rbp
	movq	%rax, 224(%rsp)         # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	kiss_fft_stride, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	leaq	.L.str112, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movabsq	$396, %rax              # imm = 0x18C
	movq	%rax, 192(%rsp)         # 8-byte Spill
	leaq	.L.str177, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	.L.str178, %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 160(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 156(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 144(%rsp)         # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	.loc	2 394 0 prologue_end    # kiss_fft.c:394:0
.Ltmp202:
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 132(%rsp)         # 4-byte Spill
	movq	%r14, %rsi
	movq	%rax, 120(%rsp)         # 8-byte Spill
	movq	136(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 112(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movq	%rbp, %r8
	movq	%r9, 88(%rsp)           # 8-byte Spill
	movq	%r11, (%rsp)
	movq	%r13, 80(%rsp)          # 8-byte Spill
	movq	%rbp, 72(%rsp)          # 8-byte Spill
	movq	%r12, 64(%rsp)          # 8-byte Spill
	movq	%r15, 56(%rsp)          # 8-byte Spill
	movq	%r14, 48(%rsp)          # 8-byte Spill
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%r10, 32(%rsp)          # 8-byte Spill
	movq	%r11, 24(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kiss_fft:cfg <- [RSP+136]
	#DEBUG_VALUE: kiss_fft:fin <- [RSP+160]
	#DEBUG_VALUE: kiss_fft:fout <- [RSP+112]
	.loc	2 396 0                 # kiss_fft.c:396:0
	movq	192(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movl	156(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	40(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	224(%rsp), %rdi         # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	32(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$1, %ecx
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	callq	kiss_fft_stride
.Ltmp203:
	movabsq	$397, %rdi              # imm = 0x18D
	leaq	.L.str177, %rsi
	leaq	.L.str1112, %rdx
	leaq	.L.str85196, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %r10d
	.loc	2 397 0                 # kiss_fft.c:397:0
	movl	$1, (%rsp)
	movl	%r10d, 20(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	addq	$232, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp204:
.Ltmp205:
	.size	kiss_fft, .Ltmp205-kiss_fft
.Lfunc_end5:
	.cfi_endproc

	.globl	kiss_fft_cleanup
	.align	16, 0x90
	.type	kiss_fft_cleanup,@function
kiss_fft_cleanup:                       # @kiss_fft_cleanup
	.cfi_startproc
.Lfunc_begin6:
	.loc	2 401 0                 # kiss_fft.c:401:0
# BB#0:
	subq	$24, %rsp
.Ltmp207:
	.cfi_def_cfa_offset 32
	movabsq	$403, %rdi              # imm = 0x193
	leaq	.L.str180, %rsi
	leaq	.L.str1112, %rdx
	leaq	.L.str181, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 403 0 prologue_end    # kiss_fft.c:403:0
.Ltmp208:
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$24, %rsp
	ret
.Ltmp209:
.Ltmp210:
	.size	kiss_fft_cleanup, .Ltmp210-kiss_fft_cleanup
.Lfunc_end6:
	.cfi_endproc

	.globl	kiss_fft_next_fast_size
	.align	16, 0x90
	.type	kiss_fft_next_fast_size,@function
kiss_fft_next_fast_size:                # @kiss_fft_next_fast_size
	.cfi_startproc
.Lfunc_begin7:
	.loc	2 406 0                 # kiss_fft.c:406:0
# BB#0:
	pushq	%rbp
.Ltmp218:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp219:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp220:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp221:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp222:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp223:
	.cfi_def_cfa_offset 56
	subq	$1832, %rsp             # imm = 0x728
.Ltmp224:
	.cfi_def_cfa_offset 1888
.Ltmp225:
	.cfi_offset %rbx, -56
.Ltmp226:
	.cfi_offset %r12, -48
.Ltmp227:
	.cfi_offset %r13, -40
.Ltmp228:
	.cfi_offset %r14, -32
.Ltmp229:
	.cfi_offset %r15, -24
.Ltmp230:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str184, %r8
	leaq	.L.str4115, %rdx
	movabsq	$407, %rsi              # imm = 0x197
	leaq	.L.str182, %r9
	leaq	.L.str1112, %r10
	leaq	.L.str183, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$24601, %r15            # imm = 0x6019
	movabsq	$32, %r12
	leaq	.L.str82193, %r13
	.loc	2 405 0 prologue_end    # kiss_fft.c:405:0
.Ltmp231:
	movq	%rsi, 1824(%rsp)        # 8-byte Spill
	movl	%edi, %esi
                                        # kill: RSI<def> ESI<kill>
	movl	%edi, 1820(%rsp)        # 4-byte Spill
	movq	%r15, %rdi
	movq	%rsi, 1808(%rsp)        # 8-byte Spill
	movq	%r12, %rsi
	movq	1808(%rsp), %r15        # 8-byte Reload
	movq	%rdx, 1800(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	%rcx, 1792(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	%r8, 1784(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	1792(%rsp), %r12        # 8-byte Reload
	movq	%r9, 1776(%rsp)         # 8-byte Spill
	movq	%r12, %r9
	movq	1800(%rsp), %r13        # 8-byte Reload
	movq	%r13, (%rsp)
	movl	%r14d, 1772(%rsp)       # 4-byte Spill
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movl	%ebp, 1756(%rsp)        # 4-byte Spill
	movq	%r11, 1744(%rsp)        # 8-byte Spill
	movq	%rbx, 1736(%rsp)        # 8-byte Spill
	movq	%r10, 1728(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	#DEBUG_VALUE: kiss_fft_next_fast_size:n <- [RSP+1820]
	.loc	2 407 0                 # kiss_fft.c:407:0
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1728(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1736(%rsp), %r8         # 8-byte Reload
	movl	1756(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1792(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movq	1792(%rsp), %r9         # 8-byte Reload
	movq	1800(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1820(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1724(%rsp)        # 4-byte Spill
.Ltmp232:
.LBB7_1:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_2 Depth 2
                                        #     Child Loop BB7_4 Depth 2
                                        #     Child Loop BB7_6 Depth 2
	movl	1724(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str7118, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str187, %r9
	movabsq	$3, %r10
	leaq	.L.str94205, %r11
	movabsq	$409, %rbx              # imm = 0x199
	leaq	.L.str182, %r14
	leaq	.L.str184, %r15
	leaq	.L.str186, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1704(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rcx
	movq	%rcx, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 1680(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rcx
	movq	%rcx, 1664(%rsp)        # 8-byte Spill
	movabsq	$23, %rcx
	movq	%rcx, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str1112, %rcx
	movq	%rcx, 1648(%rsp)        # 8-byte Spill
	leaq	.L.str82193, %rcx
	movq	%rcx, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str34145, %rcx
	movq	%rcx, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str88199, %rcx
	movq	%rcx, 1624(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1616(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 408 0                 # kiss_fft.c:408:0
.Ltmp233:
	movq	%rcx, 1608(%rsp)        # 8-byte Spill
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1600(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1592(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1584(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1576(%rsp)         # 8-byte Spill
	movq	1608(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1564(%rsp)        # 4-byte Spill
	movq	%r15, 1552(%rsp)        # 8-byte Spill
	movq	%r12, 1544(%rsp)        # 8-byte Spill
	movl	%ebp, 1540(%rsp)        # 4-byte Spill
	movl	%r13d, 1536(%rsp)       # 4-byte Spill
	movq	%r14, 1528(%rsp)        # 8-byte Spill
	movq	%rbx, 1520(%rsp)        # 8-byte Spill
	movq	%r10, 1512(%rsp)        # 8-byte Spill
	movq	%r11, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1624(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1820(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1648(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1648(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp234:
	#DEBUG_VALUE: m <- [RSP+1564]
	.loc	2 409 0                 # kiss_fft.c:409:0
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	andl	$1, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1500(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1500(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1500(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1712(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1499(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1576(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1499(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1712(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1499(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1564(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1492(%rsp)        # 4-byte Spill
	jne	.LBB7_2
	jmp	.LBB7_3
.Ltmp235:
.LBB7_2:                                # %.lr.ph
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1492(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str125, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str187, %r9
	movabsq	$3, %r10
	leaq	.L.str94205, %r11
	movabsq	$409, %rbx              # imm = 0x199
	leaq	.L.str182, %r14
	leaq	.L.str189, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1480(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rcx
	movq	%rcx, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 1456(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rcx
	movq	%rcx, 1440(%rsp)        # 8-byte Spill
	movabsq	$23, %rcx
	movl	%eax, 1436(%rsp)        # 4-byte Spill
	movl	$2, %eax
	movq	%rcx, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str188, %rcx
	movq	%rcx, 1416(%rsp)        # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 1408(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rcx
	movq	%rcx, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str184, %rcx
	movq	%rcx, 1392(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1384(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 1376(%rsp)        # 8-byte Spill
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1368(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1360(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1352(%rsp)        # 8-byte Spill
	movq	%r11, %rdx
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1344(%rsp)         # 8-byte Spill
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1336(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1332(%rsp)        # 4-byte Spill
	movq	%r15, 1320(%rsp)        # 8-byte Spill
	movl	%ebp, 1316(%rsp)        # 4-byte Spill
	movl	%r12d, 1312(%rsp)       # 4-byte Spill
	movq	%r13, 1304(%rsp)        # 8-byte Spill
	movq	%r14, 1296(%rsp)        # 8-byte Spill
	movq	%rbx, 1288(%rsp)        # 8-byte Spill
	movq	%r10, 1280(%rsp)        # 8-byte Spill
	movq	%r11, 1272(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movq	1480(%rsp), %r9         # 8-byte Reload
	movq	1392(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1480(%rsp), %r9         # 8-byte Reload
	movq	1272(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1272(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1332(%rsp), %ebp        # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1268(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp236:
	#DEBUG_VALUE: m <- [RSP+1268]
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1268(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1268(%rsp), %eax        # 4-byte Reload
	andl	$1, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1264(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1264(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1264(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1263(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1263(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1263(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1268(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1492(%rsp)        # 4-byte Spill
	jne	.LBB7_2
.Ltmp237:
.LBB7_3:                                # %.loopexit
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	1492(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str16127, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str193, %r9
	movabsq	$3, %r10
	leaq	.L.str192, %r11
	movabsq	$410, %rbx              # imm = 0x19A
	leaq	.L.str182, %r14
	leaq	.L.str187, %r15
	leaq	.L.str191, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1248(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1240(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str14125, %rcx
	movq	%rcx, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 1216(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 1212(%rsp)        # 4-byte Spill
	movl	$3, %eax
	movq	%rcx, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str190, %rcx
	movq	%rcx, 1192(%rsp)        # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str184, %rcx
	movq	%rcx, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rcx
	movq	%rcx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rcx
	movq	%rcx, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str94205, %rcx
	movq	%rcx, 1152(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1144(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 410 0                 # kiss_fft.c:410:0
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1128(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1120(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1112(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1104(%rsp)         # 8-byte Spill
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1096(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1092(%rsp)        # 4-byte Spill
	movq	%r15, 1080(%rsp)        # 8-byte Spill
	movq	%r12, 1072(%rsp)        # 8-byte Spill
	movl	%ebp, 1068(%rsp)        # 4-byte Spill
	movl	%r13d, 1064(%rsp)       # 4-byte Spill
	movq	%r14, 1056(%rsp)        # 8-byte Spill
	movq	%rbx, 1048(%rsp)        # 8-byte Spill
	movq	%r10, 1040(%rsp)        # 8-byte Spill
	movq	%r11, 1032(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1248(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1248(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1040(%rsp), %rdx        # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1092(%rsp), %ebp        # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 1028(%rsp)        # 4-byte Spill
	movq	%rcx, %rdx
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1028(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1028(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1248(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1027(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1120(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1120(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1096(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1027(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1248(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1027(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1212(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1020(%rsp)        # 4-byte Spill
	jne	.LBB7_4
	jmp	.LBB7_5
.LBB7_4:                                # %.lr.ph4
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1020(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str105216, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str193, %r9
	movabsq	$3, %r10
	leaq	.L.str192, %r11
	movabsq	$410, %rbx              # imm = 0x19A
	leaq	.L.str182, %r14
	leaq	.L.str195, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1008(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str19130, %rcx
	movq	%rcx, 992(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 984(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 980(%rsp)         # 4-byte Spill
	movl	$3, %eax
	movq	%rcx, 968(%rsp)         # 8-byte Spill
	leaq	.L.str104215, %rcx
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	leaq	.L.str194, %rcx
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	leaq	.L.str190, %rcx
	movq	%rcx, 928(%rsp)         # 8-byte Spill
	leaq	.L.str187, %rcx
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 904(%rsp)         # 8-byte Spill
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 896(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 872(%rsp)          # 8-byte Spill
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	%r9, 864(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 860(%rsp)         # 4-byte Spill
	movq	%r15, 848(%rsp)         # 8-byte Spill
	movl	%ebp, 844(%rsp)         # 4-byte Spill
	movl	%r12d, 840(%rsp)        # 4-byte Spill
	movq	%r13, 832(%rsp)         # 8-byte Spill
	movq	%r14, 824(%rsp)         # 8-byte Spill
	movq	%rbx, 816(%rsp)         # 8-byte Spill
	movq	%r10, 808(%rsp)         # 8-byte Spill
	movq	%r11, 800(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	1008(%rsp), %r9         # 8-byte Reload
	movq	920(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	1008(%rsp), %r9         # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	cltd
	movl	860(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 796(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp238:
	#DEBUG_VALUE: m <- [RSP+796]
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	796(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	796(%rsp), %eax         # 4-byte Reload
	cltd
	movl	860(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 792(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	792(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	792(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 791(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	791(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	791(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	796(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 1020(%rsp)        # 4-byte Spill
	jne	.LBB7_4
.Ltmp239:
.LBB7_5:                                # %.loopexit2
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	1020(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str25136, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str88199, %r9
	movabsq	$3, %r10
	leaq	.L.str198, %r11
	movabsq	$411, %rbx              # imm = 0x19B
	leaq	.L.str182, %r14
	leaq	.L.str193, %r15
	leaq	.L.str197, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 760(%rsp)         # 8-byte Spill
	leaq	.L.str24135, %rcx
	movq	%rcx, 752(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 740(%rsp)         # 4-byte Spill
	movl	$5, %eax
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	leaq	.L.str196, %rcx
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 712(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	leaq	.L.str187, %rcx
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	leaq	.L.str190, %rcx
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	leaq	.L.str104215, %rcx
	movq	%rcx, 680(%rsp)         # 8-byte Spill
	leaq	.L.str192, %rcx
	movq	%rcx, 672(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 411 0                 # kiss_fft.c:411:0
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 648(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 640(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 632(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 624(%rsp)          # 8-byte Spill
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	%r9, 616(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 612(%rsp)         # 4-byte Spill
	movq	%r15, 600(%rsp)         # 8-byte Spill
	movq	%r12, 592(%rsp)         # 8-byte Spill
	movl	%ebp, 588(%rsp)         # 4-byte Spill
	movl	%r13d, 584(%rsp)        # 4-byte Spill
	movq	%r14, 576(%rsp)         # 8-byte Spill
	movq	%rbx, 568(%rsp)         # 8-byte Spill
	movq	%r10, 560(%rsp)         # 8-byte Spill
	movq	%r11, 552(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	cltd
	movl	612(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 548(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	548(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	548(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	776(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 547(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	640(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	640(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	547(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	776(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	547(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	740(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 540(%rsp)         # 4-byte Spill
	jne	.LBB7_6
	jmp	.LBB7_7
.LBB7_6:                                # %.lr.ph7
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	540(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str110221, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str88199, %r9
	movabsq	$3, %r10
	leaq	.L.str198, %r11
	movabsq	$411, %rbx              # imm = 0x19B
	leaq	.L.str182, %r14
	leaq	.L.str200, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 528(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 520(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rcx
	movq	%rcx, 512(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 504(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 500(%rsp)         # 4-byte Spill
	movl	$5, %eax
	movq	%rcx, 488(%rsp)         # 8-byte Spill
	leaq	.L.str107218, %rcx
	movq	%rcx, 480(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 472(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 464(%rsp)         # 8-byte Spill
	leaq	.L.str199, %rcx
	movq	%rcx, 456(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 448(%rsp)         # 8-byte Spill
	leaq	.L.str196, %rcx
	movq	%rcx, 440(%rsp)         # 8-byte Spill
	leaq	.L.str193, %rcx
	movq	%rcx, 432(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 424(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 416(%rsp)         # 8-byte Spill
	movq	424(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 408(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 400(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 392(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 384(%rsp)          # 8-byte Spill
	movq	416(%rsp), %r8          # 8-byte Reload
	movq	%r9, 376(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 372(%rsp)         # 4-byte Spill
	movq	%r15, 360(%rsp)         # 8-byte Spill
	movl	%ebp, 356(%rsp)         # 4-byte Spill
	movl	%r12d, 352(%rsp)        # 4-byte Spill
	movq	%r13, 344(%rsp)         # 8-byte Spill
	movq	%r14, 336(%rsp)         # 8-byte Spill
	movq	%rbx, 328(%rsp)         # 8-byte Spill
	movq	%r10, 320(%rsp)         # 8-byte Spill
	movq	%r11, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	movq	312(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	312(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	cltd
	movl	372(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 308(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp240:
	#DEBUG_VALUE: m <- [RSP+308]
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %eax         # 4-byte Reload
	cltd
	movl	372(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 304(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	304(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	304(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	528(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 303(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	303(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	528(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	303(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 540(%rsp)         # 4-byte Spill
	jne	.LBB7_6
.Ltmp241:
.LBB7_7:                                # %._crit_edge
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	540(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str132, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str184, %r9
	movabsq	$3, %r10
	leaq	.L.str37148, %r11
	movabsq	$412, %rbx              # imm = 0x19C
	leaq	.L.str182, %r14
	leaq	.L.str88199, %r15
	leaq	.L.str202, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str34145, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	leaq	.L.str185, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	movabsq	$414, %rcx              # imm = 0x19E
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	.L.str201, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	.L.str193, %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	leaq	.L.str196, %rcx
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	leaq	.L.str107218, %rcx
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	leaq	.L.str198, %rcx
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 412 0                 # kiss_fft.c:412:0
.Ltmp242:
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	movq	176(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 160(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 152(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 144(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 136(%rsp)          # 8-byte Spill
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	%r9, 128(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 124(%rsp)         # 4-byte Spill
	movq	%r15, 112(%rsp)         # 8-byte Spill
	movq	%r12, 104(%rsp)         # 8-byte Spill
	movl	%ebp, 100(%rsp)         # 4-byte Spill
	movl	%r13d, 96(%rsp)         # 4-byte Spill
	movq	%r14, 88(%rsp)          # 8-byte Spill
	movq	%rbx, 80(%rsp)          # 8-byte Spill
	movq	%r10, 72(%rsp)          # 8-byte Spill
	movq	%r11, 64(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	192(%rsp), %r8          # 8-byte Reload
	movq	288(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	288(%rsp), %r9          # 8-byte Reload
	movq	208(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	208(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	cmpl	$2, %eax
	setl	%al
.Ltmp243:
	.loc	2 414 0                 # kiss_fft.c:414:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 63(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	240(%rsp), %rdi         # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %ebp        # 4-byte Reload
	addl	$1, %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 56(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp244:
	#DEBUG_VALUE: kiss_fft_next_fast_size:n <- [RSP+56]
	.loc	2 412 0                 # kiss_fft.c:412:0
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	104(%rsp), %rcx         # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	152(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	64(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	152(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	128(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	63(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	63(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movl	56(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, 1724(%rsp)        # 4-byte Spill
	jne	.LBB7_8
	jmp	.LBB7_1
.Ltmp245:
.LBB7_8:
	movabsq	$1, %rax
	movabsq	$32, %rsi
	leaq	.L.str185, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %rcx
	movabsq	$416, %rdi              # imm = 0x1A0
	leaq	.L.str182, %rdx
	leaq	.L.str37148, %r10
	leaq	.L.str39150, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	.loc	2 416 0                 # kiss_fft.c:416:0
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%rdx, %rsi
	movq	%r10, %rdx
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 32(%rsp)           # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 24(%rsp)           # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movl	%ebp, 12(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movl	1564(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	32(%rsp), %r8           # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
	movq	40(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	addq	$1832, %rsp             # imm = 0x728
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp246:
.Ltmp247:
	.size	kiss_fft_next_fast_size, .Ltmp247-kiss_fft_next_fast_size
.Lfunc_end7:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_factor,@function
kf_factor:                              # @kf_factor
	.cfi_startproc
.Lfunc_begin8:
	.loc	2 318 0                 # kiss_fft.c:318:0
# BB#0:
	pushq	%rbp
.Ltmp255:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp256:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp257:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp258:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp259:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp260:
	.cfi_def_cfa_offset 56
	subq	$1608, %rsp             # imm = 0x648
.Ltmp261:
	.cfi_def_cfa_offset 1664
.Ltmp262:
	.cfi_offset %rbx, -56
.Ltmp263:
	.cfi_offset %r12, -48
.Ltmp264:
	.cfi_offset %r13, -40
.Ltmp265:
	.cfi_offset %r14, -32
.Ltmp266:
	.cfi_offset %r15, -24
.Ltmp267:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: kf_factor:facbuf <- RSI
	#DEBUG_VALUE: kf_factor:n <- EDI
	movl	$4, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str86197, %r8
	leaq	.L.str4115, %r9
	movabsq	$324, %r10              # imm = 0x144
	leaq	.L.str79190, %r11
	leaq	.L.str1112, %rbx
	leaq	.L.str85196, %r14
	movabsq	$2, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1600(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rcx
	movq	%rcx, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rcx
	movq	%rcx, 1576(%rsp)        # 8-byte Spill
	leaq	floor, %rcx
	movq	%rcx, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str84195, %rcx
	movq	%rcx, 1560(%rsp)        # 8-byte Spill
	movabsq	$321, %rcx              # imm = 0x141
	movq	%rcx, 1552(%rsp)        # 8-byte Spill
	movabsq	$49, %rcx
	movq	%rcx, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rcx
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	leaq	sqrt, %rcx
	movq	%rcx, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str83194, %rcx
	.loc	2 317 0 prologue_end    # kiss_fft.c:317:0
.Ltmp268:
	movl	%eax, 1524(%rsp)        # 4-byte Spill
	movl	%edi, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str82193, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 1504(%rsp)        # 8-byte Spill
.Ltmp269:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+1504]
	movl	$24601, %esi            # imm = 0x6019
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1496(%rsp)        # 8-byte Spill
	movl	$32, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1488(%rsp)        # 8-byte Spill
	movl	$1, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1480(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	movl	%esi, %eax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	movq	1496(%rsp), %rax        # 8-byte Reload
	movl	%edi, 1460(%rsp)        # 4-byte Spill
.Ltmp270:
	#DEBUG_VALUE: kf_factor:n <- [RSP+1460]
	movq	%rax, %rdi
	movq	1488(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1456(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1512(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1448(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1480(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1440(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1472(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1432(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1424(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movl	%r12d, 1420(%rsp)       # 4-byte Spill
	movq	%r13, 1408(%rsp)        # 8-byte Spill
	movq	%r15, 1400(%rsp)        # 8-byte Spill
	movl	%ebp, 1396(%rsp)        # 4-byte Spill
	movq	%r14, 1384(%rsp)        # 8-byte Spill
	movq	%rbx, 1376(%rsp)        # 8-byte Spill
	movq	%r10, 1368(%rsp)        # 8-byte Spill
	movq	%r11, 1360(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp271:
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str89200, %ebp
	movl	%ebp, %r8d
	movl	$64, %ebp
	movl	%ebp, %esi
	movq	1496(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
.Ltmp272:
	#DEBUG_VALUE: kf_factor:p <- 4
	.loc	2 321 0                 # kiss_fft.c:321:0
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str79190, %ebp
	movl	%ebp, %esi
	movl	$.L.str1112, %ebp
	movl	%ebp, %edx
	movl	$.L.str2113, %ebp
	movl	%ebp, %ecx
	movl	$321, %ebp              # imm = 0x141
	movl	%ebp, %edi
	movl	$39, %ebp
	movl	%ebp, %r8d
	movl	1456(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1488(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1464(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	1460(%rsp), %ebp        # 4-byte Reload
	vcvtsi2sdl	%ebp, %xmm0, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1352(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	1352(%rsp), %xmm0       # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	1352(%rsp), %xmm0       # 8-byte Reload
	callq	sqrt
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1344(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1568(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	1344(%rsp), %xmm0       # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
                                        # implicit-def: XMM0
	vmovsd	1344(%rsp), %xmm1       # 8-byte Reload
	vroundsd	$1, %xmm1, %xmm0, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1336(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
.Ltmp273:
	#DEBUG_VALUE: kf_factor:floor_sqrt <- [RSP+1336]
	.loc	2 324 0                 # kiss_fft.c:324:0
	movq	1368(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1504(%rsp), %rax        # 8-byte Reload
	movl	1524(%rsp), %ebp        # 4-byte Reload
	movl	1460(%rsp), %r12d       # 4-byte Reload
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movl	%ebp, 1324(%rsp)        # 4-byte Spill
	movl	%r12d, 1320(%rsp)       # 4-byte Spill
.Ltmp274:
.LBB8_1:                                # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_2 Depth 2
	movl	1320(%rsp), %eax        # 4-byte Reload
	movl	1324(%rsp), %ecx        # 4-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movabsq	$1, %rsi
	leaq	.L.str9120, %rdi
	movabsq	$0, %r8
	leaq	.L.str4115, %r9
	movabsq	$2, %r10
	leaq	.L.str94205, %r11
	movabsq	$3, %rbx
	leaq	.L.str88199, %r14
	movabsq	$325, %r15              # imm = 0x145
	leaq	.L.str79190, %r12
	leaq	.L.str86197, %r13
	leaq	.L.str93204, %rbp
	movl	%eax, 1316(%rsp)        # 4-byte Spill
	movl	$0, %eax
	movl	%eax, 1312(%rsp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rdx, 1304(%rsp)        # 8-byte Spill
	movabsq	$19134, %rdx            # imm = 0x4ABE
	movq	%rdx, 1296(%rsp)        # 8-byte Spill
	movabsq	$32, %rdx
	movq	%rdx, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rdx
	movq	%rdx, 1280(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rdx
	movq	%rdx, 1272(%rsp)        # 8-byte Spill
	movabsq	$46, %rdx
	movq	%rdx, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str92203, %rdx
	movq	%rdx, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str90201, %rdx
	movq	%rdx, 1248(%rsp)        # 8-byte Spill
	movabsq	$18, %rdx
	movq	%rdx, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str1112, %rdx
	movq	%rdx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str82193, %rdx
	movq	%rdx, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str25136, %rdx
	movq	%rdx, 1216(%rsp)        # 8-byte Spill
	movabsq	$-1, %rdx
	movq	%rdx, 1208(%rsp)        # 8-byte Spill
	movabsq	$48, %rdx
	movq	%rdx, 1200(%rsp)        # 8-byte Spill
	movabsq	$4, %rdx
	movq	%rdx, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str91202, %rdx
	movq	%rdx, 1184(%rsp)        # 8-byte Spill
	movabsq	$64, %rdx
	movq	%rdx, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str87198, %rdx
	movq	%rdx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str89200, %rdx
	movq	%rdx, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str28139, %rdx
	.loc	2 325 0                 # kiss_fft.c:325:0
.Ltmp275:
	movq	%rdx, 1152(%rsp)        # 8-byte Spill
	movq	1208(%rsp), %rdx        # 8-byte Reload
	movq	%rdi, 1144(%rsp)        # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rsi, 1136(%rsp)        # 8-byte Spill
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%r8, 1128(%rsp)         # 8-byte Spill
	movq	1168(%rsp), %r8         # 8-byte Reload
	movl	%ecx, 1124(%rsp)        # 4-byte Spill
	movq	%r8, %rcx
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	%eax, 1120(%rsp)        # 4-byte Spill
	movl	1312(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1112(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1104(%rsp)        # 8-byte Spill
	movq	%r12, 1096(%rsp)        # 8-byte Spill
	movq	%r13, 1088(%rsp)        # 8-byte Spill
	movq	%rbp, 1080(%rsp)        # 8-byte Spill
	movq	%r14, 1072(%rsp)        # 8-byte Spill
	movq	%rbx, 1064(%rsp)        # 8-byte Spill
	movq	%r10, 1056(%rsp)        # 8-byte Spill
	movq	%r11, 1048(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1460(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1124(%rsp), %esi        # 4-byte Reload
	idivl	%esi
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 1044(%rsp)        # 4-byte Spill
	movq	%rcx, %rdx
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1044(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1044(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1136(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1043(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1072(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1043(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1136(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1043(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, 1036(%rsp)        # 4-byte Spill
	jne	.LBB8_6
.LBB8_2:                                # %.lr.ph
                                        #   Parent Loop BB8_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1036(%rsp), %eax        # 4-byte Reload
	movl	$2, %ecx
	.loc	2 326 0                 # kiss_fft.c:326:0
.Ltmp276:
	movq	%rsp, %rdx
	movl	$1, (%rdx)
	movl	$.L.str79190, %esi
	movl	%esi, %edx
	movl	$.L.str94205, %esi
	movl	%esi, %edi
	movl	$.L.str95206, %esi
	movl	%esi, %r8d
	movl	$48, %esi
	movl	%esi, %r9d
	movq	$-1, %r10
	xorl	%esi, %esi
	movq	%rdi, 1024(%rsp)        # 8-byte Spill
	movq	%r10, %rdi
	movl	%esi, 1020(%rsp)        # 4-byte Spill
	movq	%rdx, %rsi
	movq	1024(%rsp), %r10        # 8-byte Reload
	movq	%rdx, 1008(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movl	%ecx, 1004(%rsp)        # 4-byte Spill
	movq	%r8, %rcx
	movq	%r8, 992(%rsp)          # 8-byte Spill
	movq	%r9, %r8
	movl	1020(%rsp), %r9d        # 4-byte Reload
	movl	%eax, 988(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str86197, (%rcx)
	movl	$.L.str90201, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %ecx
	movl	$32, %eax
	movl	%eax, %edx
	movl	1020(%rsp), %eax        # 4-byte Reload
	movl	%eax, %esi
	movl	$1, %r9d
	movl	%r9d, %edi
	movq	%rdi, 976(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 968(%rsp)         # 8-byte Spill
	movq	%rdx, %rsi
	movq	968(%rsp), %r10         # 8-byte Reload
	movq	%rdx, 960(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	976(%rsp), %r11         # 8-byte Reload
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r11, %r9
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str97208, (%rcx)
	movl	$.L.str96207, %eax
	movl	%eax, %r8d
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	$.L.str97208, %eax
	movl	%eax, %r8d
	movl	988(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebx
	movl	%ebx, %ecx
	movq	%rsp, %rdx
	movq	$.L.str97208, (%rdx)
	movl	$19134, %ebx            # imm = 0x4ABE
	movl	%ebx, %edi
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	976(%rsp), %r9          # 8-byte Reload
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	movq	%r9, %rcx
	movq	992(%rsp), %r10         # 8-byte Reload
	movq	%r8, 936(%rsp)          # 8-byte Spill
	movq	%r10, %r8
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str98209, %eax
	movl	%eax, %ecx
	movl	$326, %eax              # imm = 0x146
	movl	%eax, %edi
	movl	$3, %eax
	movl	%eax, %edx
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	%rdx, 928(%rsp)         # 8-byte Spill
	movq	%r8, %rdx
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	1020(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movl	$.L.str99210, %eax
	movl	%eax, %r8d
	movl	$6, %eax
	movl	%eax, %edi
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movl	$.L.str3114, %eax
	movl	%eax, %ecx
	movl	$5, %eax
	movl	%eax, %edi
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movl	$4, %eax
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	912(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movl	$.L.str100211, %eax
	movl	%eax, %r8d
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	988(%rsp), %eax         # 4-byte Reload
	subl	$4, %eax
	movl	$2, %ebx
	movl	%eax, 908(%rsp)         # 4-byte Spill
	movl	%ebx, 904(%rsp)         # 4-byte Spill
	je	.LBB8_5
	jmp	.LBB8_8
.LBB8_8:                                # %.lr.ph
                                        #   in Loop: Header=BB8_2 Depth=2
	movl	988(%rsp), %eax         # 4-byte Reload
	subl	$2, %eax
	movl	%eax, 900(%rsp)         # 4-byte Spill
	jne	.LBB8_4
	jmp	.LBB8_3
.LBB8_3:                                #   in Loop: Header=BB8_2 Depth=2
	movl	$3, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str97208, %r8
	leaq	.L.str4115, %rsi
	movabsq	$328, %rdi              # imm = 0x148
	leaq	.L.str79190, %r9
	leaq	.L.str99210, %r10
	leaq	.L.str101212, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
.Ltmp277:
	#DEBUG_VALUE: kf_factor:p <- 3
	.loc	2 328 0                 # kiss_fft.c:328:0
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 860(%rsp)         # 4-byte Spill
	movl	%r14d, 856(%rsp)        # 4-byte Spill
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	888(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	860(%rsp), %eax         # 4-byte Reload
	movl	%eax, 904(%rsp)         # 4-byte Spill
	jmp	.LBB8_5
.LBB8_4:                                #   in Loop: Header=BB8_2 Depth=2
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str97208, %r8
	leaq	.L.str4115, %rdx
	movabsq	$329, %rsi              # imm = 0x149
	leaq	.L.str79190, %rdi
	leaq	.L.str100211, %r9
	leaq	.L.str102213, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str16127, %r12
	leaq	.L.str95206, %r13
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	2 329 0                 # kiss_fft.c:329:0
	movq	%rdi, 832(%rsp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 824(%rsp)         # 8-byte Spill
	movq	832(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 816(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 808(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 800(%rsp)         # 8-byte Spill
	movq	%r12, %rcx
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%r8, 792(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 784(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 776(%rsp)         # 8-byte Spill
	movl	%ebp, 772(%rsp)         # 4-byte Spill
	movq	%r15, 760(%rsp)         # 8-byte Spill
	movq	%r12, 752(%rsp)         # 8-byte Spill
	movq	%r13, 744(%rsp)         # 8-byte Spill
	movl	%ebx, 740(%rsp)         # 4-byte Spill
	movq	%r10, 728(%rsp)         # 8-byte Spill
	movq	%r11, 720(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	988(%rsp), %ebx         # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	988(%rsp), %ebx         # 4-byte Reload
	addl	$2, %ebx
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 716(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp278:
	#DEBUG_VALUE: kf_factor:p <- [RSP+716]
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	832(%rsp), %rsi         # 8-byte Reload
	movq	784(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movl	740(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	800(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	716(%rsp), %ebx         # 4-byte Reload
	movl	%ebx, 904(%rsp)         # 4-byte Spill
.Ltmp279:
.LBB8_5:                                # %.backedge
                                        #   in Loop: Header=BB8_2 Depth=2
	movl	904(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str24135, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str94205, %r9
	movabsq	$3, %r10
	leaq	.L.str88199, %r11
	movabsq	$325, %rbx              # imm = 0x145
	leaq	.L.str79190, %r14
	leaq	.L.str97208, %r15
	leaq	.L.str106217, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	leaq	.L.str105216, %rcx
	movq	%rcx, 680(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 672(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	leaq	.L.str92203, %rcx
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	leaq	.L.str96207, %rcx
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 640(%rsp)         # 8-byte Spill
	leaq	.L.str19130, %rcx
	movq	%rcx, 632(%rsp)         # 8-byte Spill
	leaq	.L.str103214, %rcx
	movq	%rcx, 624(%rsp)         # 8-byte Spill
	movabsq	$331, %rcx              # imm = 0x14B
	movq	%rcx, 616(%rsp)         # 8-byte Spill
	movabsq	$50, %rcx
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 600(%rsp)         # 8-byte Spill
	leaq	.L.str104215, %rcx
	movq	%rcx, 592(%rsp)         # 8-byte Spill
	leaq	.L.str7118, %rcx
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movabsq	$47, %rcx
	.loc	2 331 0                 # kiss_fft.c:331:0
.Ltmp280:
	movq	%rcx, 576(%rsp)         # 8-byte Spill
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str79190, %ecx
                                        # kill: RCX<def> ECX<kill>
	movl	%eax, 572(%rsp)         # 4-byte Spill
	movl	$.L.str97208, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 560(%rsp)         # 8-byte Spill
	movl	$.L.str103214, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 552(%rsp)         # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 544(%rsp)         # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, 536(%rsp)         # 8-byte Spill
	xorl	%esi, %esi
	movq	%rdi, 528(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 524(%rsp)         # 4-byte Spill
	movq	%rcx, %rsi
	movq	544(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 512(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	552(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 504(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%r8, 496(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	524(%rsp), %eax         # 4-byte Reload
	movq	%r9, 488(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movq	%r15, 480(%rsp)         # 8-byte Spill
	movl	%r13d, 476(%rsp)        # 4-byte Spill
	movq	%r12, 464(%rsp)         # 8-byte Spill
	movl	%ebp, 460(%rsp)         # 4-byte Spill
	movq	%r14, 448(%rsp)         # 8-byte Spill
	movq	%rbx, 440(%rsp)         # 8-byte Spill
	movq	%r10, 432(%rsp)         # 8-byte Spill
	movq	%r11, 424(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str94205, (%rcx)
	movl	$.L.str3114, %eax
	movl	%eax, %ecx
	movl	$3, %eax
	movl	%eax, %edx
	movl	$32, %eax
	movl	%eax, %esi
	movl	$2, %eax
	movl	%eax, %edi
	movl	524(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r8d
	movl	$1, %r9d
	movl	%r9d, %r10d
	movq	%rdi, 416(%rsp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rsi, 408(%rsp)         # 8-byte Spill
	movq	416(%rsp), %r11         # 8-byte Reload
	movq	%rdx, 400(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	%rcx, 392(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	392(%rsp), %rbx         # 8-byte Reload
	movq	%r8, 384(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movq	%r10, %r9
	movq	%r10, 376(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str99210, (%rcx)
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	376(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str100211, (%rcx)
	movl	$.L.str16127, %eax
	movl	%eax, %r8d
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	572(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %ecx
	movq	%rsp, %rdx
	movq	$.L.str100211, (%rdx)
	movl	$19134, %ebp            # imm = 0x4ABE
	movl	%ebp, %edi
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 368(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	384(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str104215, %eax
	movl	%eax, %ecx
	movl	$331, %eax              # imm = 0x14B
	movl	%eax, %edi
	movl	$39, %eax
	movl	%eax, %r8d
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movl	524(%rsp), %r9d         # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str4115, (%rcx)
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	384(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	572(%rsp), %eax         # 4-byte Reload
	vcvtsi2sdl	%eax, %xmm0, %xmm0
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 360(%rsp)        # 8-byte Spill
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	1336(%rsp), %xmm0       # 8-byte Reload
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	360(%rsp), %xmm0        # 8-byte Reload
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	360(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm1       # 8-byte Reload
	vucomisd	%xmm1, %xmm0
	seta	%al
	.loc	2 332 0                 # kiss_fft.c:332:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 359(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
.Ltmp281:
	#DEBUG_VALUE: kf_factor:p <- [RSP+1316]
	.loc	2 331 0                 # kiss_fft.c:331:0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	572(%rsp), %r9d         # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	359(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	359(%rsp), %al          # 1-byte Reload
	testb	%al, %al
	movl	1316(%rsp), %ebp        # 4-byte Reload
	movl	572(%rsp), %r13d        # 4-byte Reload
	cmovel	%r13d, %ebp
.Ltmp282:
	.loc	2 325 0                 # kiss_fft.c:325:0
	movl	%ebp, %eax
	movl	%eax, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 352(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	352(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	352(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 348(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	664(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	348(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	348(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 347(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	464(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	347(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	347(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	352(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 1036(%rsp)        # 4-byte Spill
	jne	.LBB8_6
	jmp	.LBB8_2
.Ltmp283:
.LBB8_6:                                # %._crit_edge
                                        #   in Loop: Header=BB8_1 Depth=1
	movl	1036(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str110221, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str18129, %r9
	movabsq	$3, %r10
	leaq	.L.str86197, %r11
	movabsq	$337, %rbx              # imm = 0x151
	leaq	.L.str79190, %r14
	leaq	.L.str88199, %r15
	leaq	.L.str111222, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 336(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 328(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 320(%rsp)         # 8-byte Spill
	leaq	.L.str25136, %rcx
	movq	%rcx, 312(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 304(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 296(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	leaq	.L.str107218, %rcx
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$336, %rcx              # imm = 0x150
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str109220, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	leaq	.L.str87198, %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	.L.str91202, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	movabsq	$335, %rcx              # imm = 0x14F
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	.L.str108219, %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	leaq	.L.str92203, %rcx
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	movabsq	$334, %rcx              # imm = 0x14E
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	leaq	.L.str90201, %rcx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	leaq	.L.str96207, %rcx
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	leaq	.L.str97208, %rcx
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 152(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 334 0                 # kiss_fft.c:334:0
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 112(%rsp)          # 8-byte Spill
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	%r9, 104(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 100(%rsp)         # 4-byte Spill
	movq	%r15, 88(%rsp)          # 8-byte Spill
	movq	%r12, 80(%rsp)          # 8-byte Spill
	movl	%ebp, 76(%rsp)          # 4-byte Spill
	movl	%r13d, 72(%rsp)         # 4-byte Spill
	movq	%r14, 64(%rsp)          # 8-byte Spill
	movq	%rbx, 56(%rsp)          # 8-byte Spill
	movq	%r10, 48(%rsp)          # 8-byte Spill
	movq	%r11, 40(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	336(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	336(%rsp), %r9          # 8-byte Reload
	movq	40(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	40(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	192(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	312(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	100(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 36(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp284:
	#DEBUG_VALUE: kf_factor:n <- [RSP+36]
	.loc	2 335 0                 # kiss_fft.c:335:0
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp285:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+24]
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, (%rcx)
	.loc	2 336 0                 # kiss_fft.c:336:0
	movq	272(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	248(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp286:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+16]
	movq	272(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, 4(%rcx)
	.loc	2 337 0                 # kiss_fft.c:337:0
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	36(%rsp), %eax          # 4-byte Reload
	cmpl	$1, %eax
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 15(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	128(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	128(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	16(%rsp), %rcx          # 8-byte Reload
	movl	100(%rsp), %ebp         # 4-byte Reload
	movl	36(%rsp), %r13d         # 4-byte Reload
	movq	%rcx, 1328(%rsp)        # 8-byte Spill
	movl	%ebp, 1324(%rsp)        # 4-byte Spill
	movl	%r13d, 1320(%rsp)       # 4-byte Spill
	jne	.LBB8_1
.Ltmp287:
# BB#7:
	movabsq	$338, %rdi              # imm = 0x152
	leaq	.L.str79190, %rsi
	leaq	.L.str18129, %rdx
	leaq	.L.str35146, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 338 0                 # kiss_fft.c:338:0
	movl	$1, (%rsp)
	movl	%eax, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$1608, %rsp             # imm = 0x648
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp288:
.Ltmp289:
	.size	kf_factor, .Ltmp289-kf_factor
.Lfunc_end8:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_work,@function
kf_work:                                # @kf_work
	.cfi_startproc
.Lfunc_begin9:
	.loc	2 252 0                 # kiss_fft.c:252:0
# BB#0:
	pushq	%rbp
.Ltmp297:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp298:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp299:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp300:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp301:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp302:
	.cfi_def_cfa_offset 56
	subq	$3208, %rsp             # imm = 0xC88
.Ltmp303:
	.cfi_def_cfa_offset 3264
.Ltmp304:
	.cfi_offset %rbx, -56
.Ltmp305:
	.cfi_offset %r12, -48
.Ltmp306:
	.cfi_offset %r13, -40
.Ltmp307:
	.cfi_offset %r14, -32
.Ltmp308:
	.cfi_offset %r15, -24
.Ltmp309:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str19130, %r10
	movabsq	$0, %r11
	leaq	.L.str4115, %rbx
	movabsq	$2, %r14
	leaq	.L.str128, %r15
	movabsq	$3, %r12
	leaq	.L.str127, %r13
	movabsq	$283, %rbp              # imm = 0x11B
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 3192(%rsp)        # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	leaq	.L.str126, %rax
	movl	%ecx, 3180(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 3176(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 3104(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 3096(%rsp)        # 8-byte Spill
	movabsq	$257, %rax              # imm = 0x101
	movq	%rax, 3088(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3080(%rsp)        # 8-byte Spill
	leaq	.L.str14125, %rax
	movq	%rax, 3072(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3064(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 3056(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 3048(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 3040(%rsp)        # 8-byte Spill
	movabsq	$256, %rax              # imm = 0x100
	movq	%rax, 3032(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 3024(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 3016(%rsp)        # 8-byte Spill
	leaq	.L.str124, %rax
	movq	%rax, 3008(%rsp)        # 8-byte Spill
	movabsq	$255, %rax
	movq	%rax, 3000(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 2992(%rsp)        # 8-byte Spill
	leaq	.L.str123, %rax
	movq	%rax, 2984(%rsp)        # 8-byte Spill
	movabsq	$254, %rax
	movq	%rax, 2976(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 2968(%rsp)        # 8-byte Spill
	movabsq	$253, %rax
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 2952(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 2944(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 2936(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 245 0 prologue_end    # kiss_fft.c:245:0
.Ltmp310:
	movq	%rax, 2928(%rsp)        # 8-byte Spill
	movq	2952(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2920(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	3120(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2912(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2904(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3200(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 2900(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	2968(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2888(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2880(%rsp)         # 8-byte Spill
	movq	%r11, %r9
	movq	%rbx, (%rsp)
	movq	%r13, 2872(%rsp)        # 8-byte Spill
	movq	%rbx, 2864(%rsp)        # 8-byte Spill
	movq	%r14, 2856(%rsp)        # 8-byte Spill
	movq	%r15, 2848(%rsp)        # 8-byte Spill
	movq	%r12, 2840(%rsp)        # 8-byte Spill
	movq	%rbp, 2832(%rsp)        # 8-byte Spill
	movq	%r10, 2824(%rsp)        # 8-byte Spill
	movq	%r11, 2816(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2952(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2952(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3180(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	2952(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2952(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2952(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2944(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kf_work:Fout <- [RSP+2920]
	#DEBUG_VALUE: kf_work:f <- [RSP+2912]
	#DEBUG_VALUE: kf_work:fstride <- [RSP+2904]
	#DEBUG_VALUE: kf_work:in_stride <- [RSP+3180]
	#DEBUG_VALUE: kf_work:factors <- [RSP+2888]
	#DEBUG_VALUE: kf_work:st <- [RSP+2880]
	.loc	2 253 0                 # kiss_fft.c:253:0
	movq	2960(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3104(%rsp), %rcx        # 8-byte Reload
	movq	3024(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2968(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	3200(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2808(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	3104(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp311:
	#DEBUG_VALUE: kf_work:Fout_beg <- [RSP+2808]
	.loc	2 254 0                 # kiss_fft.c:254:0
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	2992(%rsp), %rcx        # 8-byte Reload
	movq	3024(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	3200(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2800(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2992(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp312:
	#DEBUG_VALUE: kf_work:f_beg <- [RSP+2800]
	.loc	2 255 0                 # kiss_fft.c:255:0
	movq	3000(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3040(%rsp), %rcx        # 8-byte Reload
	movq	3080(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rdx        # 8-byte Reload
	movq	2816(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2888(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2792(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp313:
	#DEBUG_VALUE: kf_work:factors <- [RSP+2792]
	movq	3000(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	3024(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2888(%rsp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 2788(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3056(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp314:
	#DEBUG_VALUE: kf_work:p <- [RSP+2788]
	.loc	2 256 0                 # kiss_fft.c:256:0
	movq	3032(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3016(%rsp), %rcx        # 8-byte Reload
	movq	3080(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2856(%rsp), %rdx        # 8-byte Reload
	movq	2816(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2888(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2776(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp315:
	#DEBUG_VALUE: kf_work:factors <- [RSP+2776]
	movq	3032(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3144(%rsp), %rcx        # 8-byte Reload
	movq	3024(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2792(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2888(%rsp), %rax        # 8-byte Reload
	movl	4(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 2772(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3144(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp316:
	#DEBUG_VALUE: kf_work:m <- [RSP+2772]
	.loc	2 257 0                 # kiss_fft.c:257:0
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3072(%rsp), %rcx        # 8-byte Reload
	movq	3048(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2788(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3056(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3144(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %esi        # 4-byte Reload
	movl	2788(%rsp), %edi        # 4-byte Reload
	imull	%edi, %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rax        # 8-byte Reload
	movl	%esi, 2768(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2768(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2768(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2760(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3112(%rsp), %rcx        # 8-byte Reload
	movq	3080(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2760(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2760(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	2808(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3120(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	3200(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2752(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	3112(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp317:
	#DEBUG_VALUE: kf_work:Fout_end <- [RSP+2752]
	.loc	2 283 0                 # kiss_fft.c:283:0
	movq	2832(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rdx        # 8-byte Reload
	movq	2816(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3144(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %esi        # 4-byte Reload
	cmpl	$1, %esi
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	3160(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2751(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2832(%rsp), %rdi        # 8-byte Reload
	movq	3192(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3168(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movl	3176(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	2816(%rsp), %rsi        # 8-byte Reload
	movq	2816(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	2816(%rsp), %rsi        # 8-byte Reload
	movq	2816(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2848(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2751(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2816(%rsp), %r9         # 8-byte Reload
	movq	2864(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2751(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB9_2
.Ltmp318:
# BB#1:                                 # %.preheader1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str131, %r8
	leaq	.L.str4115, %rdx
	movabsq	$294, %rsi              # imm = 0x126
	leaq	.L.str119, %rdi
	leaq	.L.str128, %r9
	leaq	.L.str130, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str28139, %r12
	movabsq	$32, %r13
	movq	%rax, 2736(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 2728(%rsp)        # 8-byte Spill
	movabsq	$296, %rax              # imm = 0x128
	movq	%rax, 2720(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2712(%rsp)        # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 2704(%rsp)        # 8-byte Spill
	leaq	.L.str25136, %rax
	movq	%rax, 2696(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	movabsq	$295, %rax              # imm = 0x127
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	.loc	2 294 0                 # kiss_fft.c:294:0
.Ltmp319:
	movq	%rdi, 2640(%rsp)        # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	movq	2640(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2624(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 2616(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2648(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2608(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2712(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2600(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2592(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2584(%rsp)        # 8-byte Spill
	movl	%ebp, 2580(%rsp)        # 4-byte Spill
	movq	%r15, 2568(%rsp)        # 8-byte Spill
	movq	%r12, 2560(%rsp)        # 8-byte Spill
	movq	%r13, 2552(%rsp)        # 8-byte Spill
	movl	%ebx, 2548(%rsp)        # 4-byte Spill
	movq	%r10, 2536(%rsp)        # 8-byte Spill
	movq	%r11, 2528(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	2788(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2552(%rsp), %rsi        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2788(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2584(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2520(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2624(%rsp), %rdi        # 8-byte Reload
	movq	2640(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movl	2548(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2688(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	2520(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2520(%rsp), %rax        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 295 0                 # kiss_fft.c:295:0
	movq	2584(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2656(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2512(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2680(%rsp), %rdi        # 8-byte Reload
	movq	2640(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rdx        # 8-byte Reload
	movq	2696(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movl	2548(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3180(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2552(%rsp), %rsi        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3180(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2584(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2696(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2504(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2680(%rsp), %rdi        # 8-byte Reload
	movq	2640(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rdx        # 8-byte Reload
	movq	2704(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movl	2548(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2688(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	2504(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2696(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2504(%rsp), %rax        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 296 0                 # kiss_fft.c:296:0
	movq	2584(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2704(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2496(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2720(%rsp), %rdi        # 8-byte Reload
	movq	2640(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movl	2548(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2772(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2552(%rsp), %rsi        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2728(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 294 0                 # kiss_fft.c:294:0
	movq	2584(%rsp), %rdi        # 8-byte Reload
	movq	2568(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2488(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2624(%rsp), %rdi        # 8-byte Reload
	movq	2640(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rdx        # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movl	2548(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2736(%rsp), %rdi        # 8-byte Reload
	movq	2608(%rsp), %rsi        # 8-byte Reload
	movq	2608(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	2608(%rsp), %r9         # 8-byte Reload
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_4
.Ltmp320:
.LBB9_2:                                # %.preheader
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str134, %r8
	leaq	.L.str4115, %rdx
	movabsq	$285, %rdi              # imm = 0x11D
	leaq	.L.str119, %rsi
	leaq	.L.str127, %r9
	leaq	.L.str133, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str132, %r12
	leaq	.L.str110221, %r13
	movq	%rax, 2480(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2472(%rsp)        # 8-byte Spill
	movabsq	$286, %rax              # imm = 0x11E
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	.loc	2 286 0                 # kiss_fft.c:286:0
.Ltmp321:
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	movq	2464(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2424(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2416(%rsp)        # 8-byte Spill
	movq	%rdx, 2408(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 2400(%rsp)        # 8-byte Spill
	movq	%r13, %rcx
	movq	2432(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2392(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2384(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2376(%rsp)        # 8-byte Spill
	movl	%ebp, 2372(%rsp)        # 4-byte Spill
	movq	%r15, 2360(%rsp)        # 8-byte Spill
	movq	%r13, 2352(%rsp)        # 8-byte Spill
	movq	%r12, 2344(%rsp)        # 8-byte Spill
	movl	%ebx, 2340(%rsp)        # 4-byte Spill
	movq	%r10, 2328(%rsp)        # 8-byte Spill
	movq	%r11, 2320(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	3180(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2448(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2440(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3180(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2376(%rsp), %rdi        # 8-byte Reload
	movq	2360(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2464(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2340(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2320(%rsp), %rdi        # 8-byte Reload
	movq	2360(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2472(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2360(%rsp), %rsi        # 8-byte Reload
	movq	2312(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2312(%rsp), %rax        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 285 0                 # kiss_fft.c:285:0
	movq	2376(%rsp), %rdi        # 8-byte Reload
	movq	2360(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2424(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	2328(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movl	2340(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	2400(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movq	2400(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
.LBB9_3:                                # =>This Inner Loop Header: Depth=1
	movabsq	$1, %rax
	leaq	.L.str56167, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str134, %r8
	movabsq	$3, %r9
	leaq	.L.str141, %r10
	movabsq	$287, %r11              # imm = 0x11F
	leaq	.L.str119, %rbx
	leaq	.L.str140, %r14
	movl	$0, %ebp
	movl	$1, %r15d
	movabsq	$19134, %r12            # imm = 0x4ABE
	movabsq	$64, %r13
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	leaq	.L.str139, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2232(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2224(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2216(%rsp)        # 8-byte Spill
	leaq	.L.str53164, %rax
	movq	%rax, 2208(%rsp)        # 8-byte Spill
	leaq	.L.str123, %rax
	movq	%rax, 2200(%rsp)        # 8-byte Spill
	movabsq	$286, %rax              # imm = 0x11E
	movq	%rax, 2192(%rsp)        # 8-byte Spill
	leaq	.L.str138, %rax
	movq	%rax, 2184(%rsp)        # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 2176(%rsp)        # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	movabsq	$285, %rax              # imm = 0x11D
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	leaq	.L.str136, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2096(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2088(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2080(%rsp)        # 8-byte Spill
	movq	%r8, %rdx
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2072(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2064(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2056(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 2052(%rsp)        # 4-byte Spill
	movl	%r15d, 2048(%rsp)       # 4-byte Spill
	movq	%r12, 2040(%rsp)        # 8-byte Spill
	movq	%r13, 2032(%rsp)        # 8-byte Spill
	movq	%r14, 2024(%rsp)        # 8-byte Spill
	movq	%rbx, 2016(%rsp)        # 8-byte Spill
	movq	%r10, 2008(%rsp)        # 8-byte Spill
	movq	%r11, 2000(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1992(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2144(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2104(%rsp), %rcx        # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2200(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1984(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2144(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1984(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1984(%rsp), %rax        # 8-byte Reload
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2128(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2144(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1992(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1992(%rsp), %rax        # 8-byte Reload
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2144(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1976(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2128(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1984(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1960(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2160(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2144(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1968(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2160(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1992(%rsp), %rax        # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	.loc	2 286 0                 # kiss_fft.c:286:0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2200(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1952(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2176(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2304(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1952(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2304(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	1952(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1944(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2200(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	.loc	2 287 0                 # kiss_fft.c:287:0
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2240(%rsp), %rcx        # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1936(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1936(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1936(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2256(%rsp), %rcx        # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1928(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2072(%rsp), %rcx        # 8-byte Reload
	movq	2272(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2032(%rsp), %rsi        # 8-byte Reload
	movq	1928(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1928(%rsp), %rax        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	cmpq	%rcx, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2296(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1927(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2064(%rsp), %rdx        # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %r8         # 8-byte Reload
	movl	2052(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2056(%rsp), %rdi        # 8-byte Reload
	movq	2080(%rsp), %rsi        # 8-byte Reload
	movq	2080(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	2080(%rsp), %rsi        # 8-byte Reload
	movq	2080(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1927(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2296(%rsp), %rdi        # 8-byte Reload
	movq	2296(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	2080(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1927(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB9_5
	jmp	.LBB9_3
.Ltmp322:
.LBB9_4:                                # =>This Inner Loop Header: Depth=1
	movabsq	$6, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str117, %r8
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$5, %r9
	leaq	.L.str9120, %r10
	movabsq	$4, %r11
	movabsq	$32, %rbx
	leaq	.L.str120, %r14
	movabsq	$3, %r15
	leaq	.L.str24135, %r12
	movabsq	$2, %r13
	leaq	.L.str123, %rbp
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	movabsq	$7, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	kf_work, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	movabsq	$294, %rax              # imm = 0x126
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	leaq	.L.str131, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1848(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1844(%rsp)        # 4-byte Spill
	movl	$1, %esi
	.loc	2 294 0                 # kiss_fft.c:294:0
.Ltmp323:
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	movq	1872(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1824(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1880(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1820(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1864(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1808(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1856(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1800(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1832(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1792(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1844(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1784(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 1776(%rsp)        # 8-byte Spill
	movq	%r15, 1768(%rsp)        # 8-byte Spill
	movq	%r14, 1760(%rsp)        # 8-byte Spill
	movq	%r12, 1752(%rsp)        # 8-byte Spill
	movq	%r13, 1744(%rsp)        # 8-byte Spill
	movq	%rbx, 1736(%rsp)        # 8-byte Spill
	movq	%r10, 1728(%rsp)        # 8-byte Spill
	movq	%r11, 1720(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1896(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	1888(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1880(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1904(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1744(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1768(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2512(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1752(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3180(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1736(%rsp), %rsi        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2776(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1792(%rsp), %r8         # 8-byte Reload
	movq	1808(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2912(%rsp), %rsi        # 8-byte Reload
	movq	2512(%rsp), %rdx        # 8-byte Reload
	movl	3180(%rsp), %ecx        # 4-byte Reload
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2880(%rsp), %r9         # 8-byte Reload
	callq	kf_work
	movabsq	$1, %rdx
	leaq	.L.str64175, %rsi
	movabsq	$0, %rdi
	leaq	.L.str4115, %r8
	movabsq	$2, %r9
	leaq	.L.str131, %r10
	movabsq	$3, %r11
	leaq	.L.str141, %rbx
	movabsq	$296, %r14              # imm = 0x128
	leaq	.L.str119, %r15
	leaq	.L.str147, %rcx
	movl	$0, %eax
	movl	$1, %ebp
	movabsq	$19134, %r12            # imm = 0x4ABE
	movabsq	$64, %r13
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str145, %rcx
	movq	%rcx, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str104215, %rcx
	movq	%rcx, 1696(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rcx
	movq	%rcx, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str146, %rcx
	movq	%rcx, 1672(%rsp)        # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str61172, %rcx
	movq	%rcx, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str28139, %rcx
	movq	%rcx, 1648(%rsp)        # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 1640(%rsp)        # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str143, %rcx
	movq	%rcx, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str123, %rcx
	movq	%rcx, 1616(%rsp)        # 8-byte Spill
	movabsq	$295, %rcx              # imm = 0x127
	movq	%rcx, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str144, %rcx
	movq	%rcx, 1600(%rsp)        # 8-byte Spill
	leaq	.L.str58169, %rcx
	movq	%rcx, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str107218, %rcx
	.loc	2 295 0                 # kiss_fft.c:295:0
	movq	%rcx, 1584(%rsp)        # 8-byte Spill
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1576(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1568(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 1560(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1552(%rsp)         # 8-byte Spill
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1544(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 1540(%rsp)        # 4-byte Spill
	movq	%r12, 1528(%rsp)        # 8-byte Spill
	movq	%r13, 1520(%rsp)        # 8-byte Spill
	movl	%eax, 1516(%rsp)        # 4-byte Spill
	movq	%r15, 1504(%rsp)        # 8-byte Spill
	movq	%r10, 1496(%rsp)        # 8-byte Spill
	movq	%r11, 1488(%rsp)        # 8-byte Spill
	movq	%rbx, 1480(%rsp)        # 8-byte Spill
	movq	%r14, 1472(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1616(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1464(%rsp)        # 8-byte Spill
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1592(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1464(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1592(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2496(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1464(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1456(%rsp)        # 8-byte Spill
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1624(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1616(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1456(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1624(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %rdx        # 8-byte Reload
	movq	%rdx, (%rcx)
	.loc	2 296 0                 # kiss_fft.c:296:0
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1448(%rsp)        # 8-byte Spill
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1448(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1440(%rsp)        # 8-byte Spill
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1440(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %rdx        # 8-byte Reload
	movq	%rdx, (%rcx)
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1440(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	cmpq	%rdx, %rcx
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1560(%rsp), %rsi        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1439(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movl	1516(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1576(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1576(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1439(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1560(%rsp), %rsi        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1552(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1439(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB9_5
	jmp	.LBB9_4
.Ltmp324:
.LBB9_5:                                # %.loopexit
	.loc	2 299 0                 # kiss_fft.c:299:0
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str119, %ecx
	movl	%ecx, %eax
	movl	$.L.str141, %ecx
	movl	%ecx, %edx
	movl	$.L.str148, %ecx
                                        # kill: RCX<def> ECX<kill>
	movl	$299, %esi              # imm = 0x12B
	movl	%esi, %edi
	movl	$28, %esi
	movl	%esi, %r8d
	xorl	%esi, %esi
	movl	%esi, 1432(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 1424(%rsp)        # 8-byte Spill
	movq	%r8, 1416(%rsp)         # 8-byte Spill
	movl	1432(%rsp), %r9d        # 4-byte Reload
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str122, %r9d
	movl	%r9d, %r8d
	movl	$2, %r9d
	movl	%r9d, %eax
	movl	$64, %r9d
	movl	%r9d, %ecx
	movl	$1, %r9d
	movl	%r9d, %edx
	movl	1432(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movq	%rax, %rdi
	movq	%rsi, 1400(%rsp)        # 8-byte Spill
	movq	%rcx, %rsi
	movq	2920(%rsp), %r10        # 8-byte Reload
	movq	%rdx, 1392(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1392(%rsp), %r11        # 8-byte Reload
	movq	%rcx, 1384(%rsp)        # 8-byte Spill
	movq	%r11, %rcx
	movq	1400(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str2113, %ebx
	movl	%ebx, %r8d
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	.loc	2 300 0                 # kiss_fft.c:300:0
	movq	%rsp, %rdx
	movl	$1, (%rdx)
	movl	$.L.str149, %ebx
	movl	%ebx, %ecx
	movl	$300, %ebx              # imm = 0x12C
	movl	%ebx, %edi
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1424(%rsp), %rdx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movl	1432(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str123, %r9d
	movl	%r9d, %r8d
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str6117, %ebx
	movl	%ebx, %r8d
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	2800(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	2800(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	.loc	2 303 0                 # kiss_fft.c:303:0
	movq	%rsp, %rdx
	movl	$1, (%rdx)
	movl	$.L.str150, %ebx
	movl	%ebx, %ecx
	movl	$303, %ebx              # imm = 0x12F
	movl	%ebx, %edi
	movl	$3, %ebx
	movl	%ebx, %edx
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movq	%rdx, 1368(%rsp)        # 8-byte Spill
	movq	%r8, %rdx
	movq	1368(%rsp), %r8         # 8-byte Reload
	movl	1432(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str151, %r9d
	movl	%r9d, %r8d
	movl	$10, %r9d
	movl	%r9d, %edi
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str3114, %ebx
	movl	%ebx, %eax
	movl	$9, %ebx
	movl	%ebx, %edi
	movl	$32, %ebx
	movl	%ebx, %ecx
	movl	$5, %ebx
	movl	%ebx, %edx
	movq	%rcx, %rsi
	movq	%rdx, 1360(%rsp)        # 8-byte Spill
	movq	1400(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1352(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	%rax, %r8
	movq	1400(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str152, %ebx
	movl	%ebx, %r8d
	movl	$8, %ebx
	movl	%ebx, %edi
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$7, %ebx
	movl	%ebx, %edi
	movl	$4, %ebx
	movl	%ebx, %eax
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str153, %ebx
	movl	%ebx, %r8d
	movl	$6, %ebx
	movl	%ebx, %edi
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str154, %ebx
	movl	%ebx, %r8d
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movq	1368(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1400(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str155, %ebx
	movl	%ebx, %r8d
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movl	2788(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	%rsp, %rax
	movq	$.L.str4115, (%rax)
	movl	$.L.str8119, %ebp
	movl	%ebp, %r8d
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movl	2788(%rsp), %ebx        # 4-byte Reload
	addl	$-2, %ebx
	movl	%ebx, %eax
	subl	$3, %ebx
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movl	%ebx, 1324(%rsp)        # 4-byte Spill
	ja	.LBB9_10
# BB#12:                                # %.loopexit
	movq	1328(%rsp), %rax        # 8-byte Reload
	movq	.LJTI9_0(,%rax,8), %rcx
	jmpq	*%rcx
.LBB9_6:
	movabsq	$4, %rdi
	movabsq	$32, %rsi
	movabsq	$1, %rax
	leaq	.L.str125, %r8
	movabsq	$0, %rcx
	leaq	.L.str4115, %rdx
	movabsq	$3, %r9
	movabsq	$64, %r10
	leaq	.L.str117, %r11
	movabsq	$2, %rbx
	leaq	.L.str129, %r14
	leaq	.L.str67178, %r15
	movabsq	$5, %r12
	leaq	kf_bfly2, %r13
	leaq	.L.str157, %rbp
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	movabsq	$304, %rax              # imm = 0x130
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str154, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str156, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1272(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1268(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	.loc	2 304 0                 # kiss_fft.c:304:0
.Ltmp325:
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	movq	1304(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1224(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1296(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1220(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1288(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1208(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 1200(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	1232(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1192(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1268(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1184(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 1176(%rsp)        # 8-byte Spill
	movq	%r13, 1168(%rsp)        # 8-byte Spill
	movq	%r14, 1160(%rsp)        # 8-byte Spill
	movq	%r15, 1152(%rsp)        # 8-byte Spill
	movq	%r12, 1144(%rsp)        # 8-byte Spill
	movq	%rbx, 1136(%rsp)        # 8-byte Spill
	movq	%r10, 1128(%rsp)        # 8-byte Spill
	movq	%r11, 1120(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1112(%rsp)        # 8-byte Spill
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1288(%rsp), %rdx        # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1268(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1144(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1168(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1112(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1184(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2772(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1200(%rsp), %r9         # 8-byte Reload
	movq	1208(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1112(%rsp), %rdi        # 8-byte Reload
	movq	2904(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movl	2772(%rsp), %ecx        # 4-byte Reload
	callq	kf_bfly2
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str159, %r8
	leaq	.L.str4115, %rdi
	movabsq	$304, %r9               # imm = 0x130
	leaq	.L.str119, %r10
	leaq	.L.str154, %r11
	leaq	.L.str158, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 1104(%rsp)        # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 1096(%rsp)        # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 1088(%rsp)        # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 1080(%rsp)         # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 1076(%rsp)        # 4-byte Spill
	callq	trace_logger_log0
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1096(%rsp), %rdx        # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1080(%rsp), %r8         # 8-byte Reload
	movq	1096(%rsp), %r9         # 8-byte Reload
	movq	1104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_7:
	movabsq	$4, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str72183, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %r8
	movabsq	$3, %r9
	leaq	.L.str117, %r10
	movabsq	$2, %r11
	leaq	.L.str129, %rbx
	leaq	.L.str71182, %r14
	movabsq	$5, %r15
	leaq	kf_bfly3, %r12
	leaq	.L.str161, %r13
	movabsq	$305, %rbp              # imm = 0x131
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str153, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str160, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1032(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1028(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	.loc	2 305 0                 # kiss_fft.c:305:0
	movq	%rdi, 968(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	%rax, 960(%rsp)         # 8-byte Spill
	movq	1056(%rsp), %rax        # 8-byte Reload
	movl	%esi, 956(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	1048(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 944(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	movq	%r14, %rcx
	movq	960(%rsp), %rax         # 8-byte Reload
	movq	%r8, 928(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	1028(%rsp), %eax        # 4-byte Reload
	movq	%r9, 920(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 912(%rsp)         # 8-byte Spill
	movq	%r15, 904(%rsp)         # 8-byte Spill
	movq	%r12, 896(%rsp)         # 8-byte Spill
	movq	%r13, 888(%rsp)         # 8-byte Spill
	movq	%r14, 880(%rsp)         # 8-byte Spill
	movq	%rbx, 872(%rsp)         # 8-byte Spill
	movq	%r10, 864(%rsp)         # 8-byte Spill
	movq	%r11, 856(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 848(%rsp)         # 8-byte Spill
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	912(%rsp), %rdi         # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1048(%rsp), %rdx        # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1028(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2772(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %eax        # 4-byte Reload
	movslq	%eax, %rcx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 840(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	912(%rsp), %rdi         # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1048(%rsp), %rdx        # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movl	1028(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1064(%rsp), %rsi        # 8-byte Reload
	movq	840(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movq	928(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2904(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	callq	kf_bfly3
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str159, %r8
	leaq	.L.str4115, %rsi
	movabsq	$305, %rdi              # imm = 0x131
	leaq	.L.str119, %r9
	leaq	.L.str153, %r10
	leaq	.L.str162, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rsi, 832(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 824(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 816(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 808(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 804(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	824(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	824(%rsp), %r9          # 8-byte Reload
	movq	832(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_8:
	movabsq	$4, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str164, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %r8
	movabsq	$3, %r9
	leaq	.L.str117, %r10
	movabsq	$2, %r11
	leaq	.L.str129, %rbx
	leaq	.L.str163, %r14
	movabsq	$5, %r15
	leaq	kf_bfly4, %r12
	leaq	.L.str166, %r13
	movabsq	$306, %rbp              # imm = 0x132
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str152, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	leaq	.L.str165, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 760(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 756(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 744(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 736(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 720(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	.loc	2 306 0                 # kiss_fft.c:306:0
	movq	%rdi, 696(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	%rax, 688(%rsp)         # 8-byte Spill
	movq	784(%rsp), %rax         # 8-byte Reload
	movl	%esi, 684(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	776(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 672(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	movq	%r14, %rcx
	movq	688(%rsp), %rax         # 8-byte Reload
	movq	%r8, 656(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	756(%rsp), %eax         # 4-byte Reload
	movq	%r9, 648(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 640(%rsp)         # 8-byte Spill
	movq	%r15, 632(%rsp)         # 8-byte Spill
	movq	%r12, 624(%rsp)         # 8-byte Spill
	movq	%r13, 616(%rsp)         # 8-byte Spill
	movq	%r14, 608(%rsp)         # 8-byte Spill
	movq	%rbx, 600(%rsp)         # 8-byte Spill
	movq	%r10, 592(%rsp)         # 8-byte Spill
	movq	%r11, 584(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	%rdx, 576(%rsp)         # 8-byte Spill
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	640(%rsp), %rdi         # 8-byte Reload
	movq	784(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	756(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2772(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2772(%rsp), %eax        # 4-byte Reload
	movslq	%eax, %rcx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 568(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	640(%rsp), %rdi         # 8-byte Reload
	movq	784(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movl	756(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	576(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	592(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	568(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	656(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	576(%rsp), %rdi         # 8-byte Reload
	movq	2904(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	callq	kf_bfly4
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str159, %r8
	leaq	.L.str4115, %rsi
	movabsq	$306, %rdi              # imm = 0x132
	leaq	.L.str119, %r9
	leaq	.L.str152, %r10
	leaq	.L.str167, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rsi, 560(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 552(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 544(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 536(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 532(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	544(%rsp), %rdi         # 8-byte Reload
	movq	552(%rsp), %rsi         # 8-byte Reload
	movq	552(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	552(%rsp), %r9          # 8-byte Reload
	movq	560(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_9:
	movabsq	$4, %rdi
	movabsq	$32, %rsi
	movabsq	$1, %rax
	leaq	.L.str125, %r8
	movabsq	$0, %rcx
	leaq	.L.str4115, %rdx
	movabsq	$3, %r9
	movabsq	$64, %r10
	leaq	.L.str117, %r11
	movabsq	$2, %rbx
	leaq	.L.str129, %r14
	leaq	.L.str168, %r15
	movabsq	$5, %r12
	leaq	kf_bfly5, %r13
	leaq	.L.str170, %rbp
	movq	%rax, 520(%rsp)         # 8-byte Spill
	movabsq	$307, %rax              # imm = 0x133
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str151, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str169, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 480(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 476(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 464(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	.loc	2 307 0                 # kiss_fft.c:307:0
	movq	%rax, 440(%rsp)         # 8-byte Spill
	movq	512(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 432(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	504(%rsp), %rax         # 8-byte Reload
	movl	%esi, 428(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	496(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 416(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 408(%rsp)         # 8-byte Spill
	movq	%r15, %rcx
	movq	440(%rsp), %rax         # 8-byte Reload
	movq	%r8, 400(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	476(%rsp), %eax         # 4-byte Reload
	movq	%r9, 392(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 384(%rsp)         # 8-byte Spill
	movq	%r13, 376(%rsp)         # 8-byte Spill
	movq	%r14, 368(%rsp)         # 8-byte Spill
	movq	%r15, 360(%rsp)         # 8-byte Spill
	movq	%r12, 352(%rsp)         # 8-byte Spill
	movq	%rbx, 344(%rsp)         # 8-byte Spill
	movq	%r10, 336(%rsp)         # 8-byte Spill
	movq	%r11, 328(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	520(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	456(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	%rdx, 320(%rsp)         # 8-byte Spill
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	360(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	476(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	352(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	520(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	360(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	368(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2772(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	480(%rsp), %rsi         # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	400(%rsp), %r8          # 8-byte Reload
	movq	408(%rsp), %r9          # 8-byte Reload
	movq	416(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	2904(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movl	2772(%rsp), %ecx        # 4-byte Reload
	callq	kf_bfly5
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str159, %r8
	leaq	.L.str4115, %rdi
	movabsq	$307, %r9               # imm = 0x133
	leaq	.L.str119, %r10
	leaq	.L.str151, %r11
	leaq	.L.str171, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 312(%rsp)         # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 304(%rsp)         # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 296(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 288(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 284(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	296(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	304(%rsp), %rdx         # 8-byte Reload
	movq	296(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movq	304(%rsp), %r9          # 8-byte Reload
	movq	312(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_10:
	movabsq	$5, %rdi
	movabsq	$32, %rax
	movabsq	$1, %rcx
	leaq	.L.str8119, %r8
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$4, %r9
	leaq	.L.str125, %r10
	movabsq	$3, %r11
	movabsq	$64, %rbx
	leaq	.L.str117, %r14
	movabsq	$2, %r15
	leaq	.L.str129, %r12
	leaq	.L.str172, %r13
	movabsq	$6, %rbp
	movq	%rax, 272(%rsp)         # 8-byte Spill
	leaq	kf_bfly_generic, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str174, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	movabsq	$308, %rax              # imm = 0x134
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	leaq	.L.str155, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	leaq	.L.str173, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 216(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 212(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 192(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	.loc	2 308 0                 # kiss_fft.c:308:0
	movq	%rax, 176(%rsp)         # 8-byte Spill
	movq	248(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 168(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	240(%rsp), %rax         # 8-byte Reload
	movl	%esi, 164(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	232(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 152(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	%r13, %rcx
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%r8, 136(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	212(%rsp), %eax         # 4-byte Reload
	movq	%r9, 128(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 120(%rsp)         # 8-byte Spill
	movq	%r15, 112(%rsp)         # 8-byte Spill
	movq	%r14, 104(%rsp)         # 8-byte Spill
	movq	%r12, 96(%rsp)          # 8-byte Spill
	movq	%r13, 88(%rsp)          # 8-byte Spill
	movq	%rbx, 80(%rsp)          # 8-byte Spill
	movq	%r10, 72(%rsp)          # 8-byte Spill
	movq	%r11, 64(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	144(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
	movq	192(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	%rdx, 56(%rsp)          # 8-byte Spill
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	88(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	232(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movl	212(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	144(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	88(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	96(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2772(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2788(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	168(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	216(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	2904(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movl	2772(%rsp), %ecx        # 4-byte Reload
	movl	2788(%rsp), %r8d        # 4-byte Reload
	callq	kf_bfly_generic
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str159, %r8
	leaq	.L.str4115, %rdi
	movabsq	$308, %r9               # imm = 0x134
	leaq	.L.str119, %r10
	leaq	.L.str155, %r11
	leaq	.L.str175, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 48(%rsp)          # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 40(%rsp)          # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 32(%rsp)          # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 24(%rsp)           # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	40(%rsp), %rsi          # 8-byte Reload
	movq	40(%rsp), %rdx          # 8-byte Reload
	movq	32(%rsp), %rcx          # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movq	48(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp326:
.LBB9_11:
	movabsq	$310, %rdi              # imm = 0x136
	leaq	.L.str119, %rsi
	leaq	.L.str159, %rdx
	leaq	.L.str176, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 310 0                 # kiss_fft.c:310:0
	movl	$1, (%rsp)
	movl	%eax, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$3208, %rsp             # imm = 0xC88
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp327:
.Ltmp328:
	.size	kf_work, .Ltmp328-kf_work
.Lfunc_end9:
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI9_0:
	.quad	.LBB9_6
	.quad	.LBB9_7
	.quad	.LBB9_8
	.quad	.LBB9_9

	.text
	.align	16, 0x90
	.type	kf_bfly_generic,@function
kf_bfly_generic:                        # @kf_bfly_generic
	.cfi_startproc
.Lfunc_begin10:
	.loc	2 211 0                 # kiss_fft.c:211:0
# BB#0:
	pushq	%rbp
.Ltmp336:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp337:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp338:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp339:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp340:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp341:
	.cfi_def_cfa_offset 56
	subq	$3512, %rsp             # imm = 0xDB8
.Ltmp342:
	.cfi_def_cfa_offset 3568
.Ltmp343:
	.cfi_offset %rbx, -56
.Ltmp344:
	.cfi_offset %r12, -48
.Ltmp345:
	.cfi_offset %r13, -40
.Ltmp346:
	.cfi_offset %r14, -32
.Ltmp347:
	.cfi_offset %r15, -24
.Ltmp348:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$64, %r9
	leaq	.L.str8119, %r10
	movabsq	$0, %r11
	leaq	.L.str4115, %rbx
	movabsq	$2, %r14
	leaq	malloc, %r15
	leaq	.L.str15126, %r12
	movabsq	$217, %r13
	leaq	.L.str174, %rbp
	movq	%rax, 3504(%rsp)        # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 3496(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 3488(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movl	%ecx, 3484(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 3480(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 3472(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3464(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 3456(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 3448(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 3440(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3432(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3424(%rsp)        # 8-byte Spill
	leaq	.L.str397, %rax
	movq	%rax, 3416(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3408(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 3400(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 3392(%rsp)        # 8-byte Spill
	movabsq	$215, %rax
	movq	%rax, 3384(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 3376(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 3368(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3360(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3352(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 3344(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 3336(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	.loc	2 205 0 prologue_end    # kiss_fft.c:205:0
.Ltmp349:
	movq	%rax, 3328(%rsp)        # 8-byte Spill
	movq	3352(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3320(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 3312(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	3320(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3304(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3504(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 3300(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	3328(%rsp), %rax        # 8-byte Reload
	movl	%r8d, 3296(%rsp)        # 4-byte Spill
	movq	%rax, %r8
	movq	%r9, 3288(%rsp)         # 8-byte Spill
	movq	%r11, %r9
	movq	%rbx, (%rsp)
	movq	%r13, 3280(%rsp)        # 8-byte Spill
	movq	%r14, 3272(%rsp)        # 8-byte Spill
	movq	%r15, 3264(%rsp)        # 8-byte Spill
	movq	%r12, 3256(%rsp)        # 8-byte Spill
	movq	%rbp, 3248(%rsp)        # 8-byte Spill
	movq	%rbx, 3240(%rsp)        # 8-byte Spill
	movq	%r10, 3232(%rsp)        # 8-byte Spill
	movq	%r11, 3224(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3336(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3368(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3484(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3344(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3416(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly_generic:Fout <- [RSP+3320]
	#DEBUG_VALUE: kf_bfly_generic:fstride <- [RSP+3312]
	#DEBUG_VALUE: kf_bfly_generic:st <- [RSP+3304]
	#DEBUG_VALUE: kf_bfly_generic:m <- [RSP+3484]
	#DEBUG_VALUE: kf_bfly_generic:p <- [RSP+3296]
	.loc	2 215 0                 # kiss_fft.c:215:0
	movq	3384(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3392(%rsp), %rcx        # 8-byte Reload
	movq	3360(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3448(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3224(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3224(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3368(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3384(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3400(%rsp), %rcx        # 8-byte Reload
	movq	3376(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 3220(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3400(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp350:
	#DEBUG_VALUE: kf_bfly_generic:Norig <- [RSP+3220]
	.loc	2 217 0                 # kiss_fft.c:217:0
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3456(%rsp), %rcx        # 8-byte Reload
	movq	3408(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3416(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3208(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3232(%rsp), %rcx        # 8-byte Reload
	movq	3432(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3448(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3208(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3208(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3232(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3488(%rsp), %rcx        # 8-byte Reload
	movq	3472(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3264(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3256(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3232(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	callq	malloc
.Ltmp351:
	movabsq	$1, %rcx
	leaq	.L.str14125, %rdx
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r8
	leaq	.L.str399, %r9
	movabsq	$3, %r10
	leaq	.L.str398, %r11
	movabsq	$219, %rbx
	leaq	.L.str174, %r14
	leaq	.L.str1112, %r15
	leaq	.L.str121, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 3192(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3176(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	movabsq	$217, %rax
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	movq	3184(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3104(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	3144(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3096(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3192(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3088(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 3080(%rsp)        # 8-byte Spill
	movq	3128(%rsp), %rax        # 8-byte Reload
	movq	%r8, 3072(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	3096(%rsp), %rax        # 8-byte Reload
	movq	%r9, 3064(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, 3056(%rsp)        # 8-byte Spill
	movq	%r12, 3048(%rsp)        # 8-byte Spill
	movl	%ebp, 3044(%rsp)        # 4-byte Spill
	movl	%r13d, 3040(%rsp)       # 4-byte Spill
	movq	%r14, 3032(%rsp)        # 8-byte Spill
	movq	%rbx, 3024(%rsp)        # 8-byte Spill
	movq	%r10, 3016(%rsp)        # 8-byte Spill
	movq	%r11, 3008(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3120(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3136(%rsp), %rcx        # 8-byte Reload
	movq	3112(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3144(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rax        # 8-byte Reload
	movq	3184(%rsp), %rdi        # 8-byte Reload
	movq	3144(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3000(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp352:
	#DEBUG_VALUE: kf_bfly_generic:scratch <- [RSP+3000]
	#DEBUG_VALUE: kf_bfly_generic:u <- 0
	.loc	2 219 0                 # kiss_fft.c:219:0
	movq	3024(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3088(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3072(%rsp), %rdi        # 8-byte Reload
	movq	3176(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3176(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3168(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	3184(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2999(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	3024(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3048(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3016(%rsp), %rdi        # 8-byte Reload
	movq	3096(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3072(%rsp), %rdi        # 8-byte Reload
	movq	3096(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2999(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2999(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB10_1
	jmp	.LBB10_11
.Ltmp353:
.LBB10_1:                               # %.preheader.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str401, %r8
	leaq	.L.str4115, %rdx
	movabsq	$219, %rdi
	leaq	.L.str174, %rsi
	leaq	.L.str398, %r9
	leaq	.L.str400, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str25136, %r12
	movabsq	$32, %r13
	movq	%rax, 2984(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 2976(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2968(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 2952(%rsp)        # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 2944(%rsp)        # 8-byte Spill
	leaq	.L.str397, %rax
	movq	%rax, 2936(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2928(%rsp)        # 8-byte Spill
	movabsq	$231, %rax
	movq	%rax, 2920(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2912(%rsp)        # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 2904(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 2896(%rsp)        # 8-byte Spill
	movabsq	$230, %rax
	movq	%rax, 2888(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 2872(%rsp)        # 8-byte Spill
	movabsq	$228, %rax
	movq	%rax, 2864(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 2856(%rsp)        # 8-byte Spill
	movabsq	$221, %rax
	.loc	2 221 0                 # kiss_fft.c:221:0
.Ltmp354:
	movq	%rdi, 2848(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2840(%rsp)        # 8-byte Spill
	movq	%rdx, 2832(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2856(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2824(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2816(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2808(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r13, 2800(%rsp)        # 8-byte Spill
	movl	%ebp, 2796(%rsp)        # 4-byte Spill
	movq	%r14, 2784(%rsp)        # 8-byte Spill
	movq	%r12, 2776(%rsp)        # 8-byte Spill
	movq	%r15, 2768(%rsp)        # 8-byte Spill
	movl	%ebx, 2764(%rsp)        # 4-byte Spill
	movq	%r10, 2752(%rsp)        # 8-byte Spill
	movq	%r11, 2744(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
.Ltmp355:
	.loc	2 228 0                 # kiss_fft.c:228:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2743(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2864(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
	.loc	2 230 0                 # kiss_fft.c:230:0
.Ltmp356:
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2742(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2888(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	movq	2880(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2896(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rcx        # 8-byte Reload
	.loc	2 231 0                 # kiss_fft.c:231:0
.Ltmp357:
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2728(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2904(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2944(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$1, %ebx
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2944(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2727(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2952(%rsp), %rcx        # 8-byte Reload
	movq	2960(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rcx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2712(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2952(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2776(%rsp), %rcx        # 8-byte Reload
	movq	2960(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rcx
.Ltmp358:
	.loc	2 219 0                 # kiss_fft.c:219:0
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2704(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2848(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2984(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2816(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2696(%rsp)        # 8-byte Spill
.LBB10_2:                               # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_3 Depth 2
                                        #     Child Loop BB10_6 Depth 2
                                        #       Child Loop BB10_8 Depth 3
	movq	2696(%rsp), %rax        # 8-byte Reload
	movabsq	$0, %rcx
	movabsq	$1, %rdx
	leaq	.L.str16127, %r8
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str187, %r9
	movabsq	$3, %r10
	leaq	.L.str94205, %r11
	movabsq	$221, %rbx
	leaq	.L.str174, %r14
	leaq	.L.str401, %r15
	leaq	.L.str405, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	leaq	.L.str402, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	leaq	.L.str398, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	leaq	.L.str403, %rax
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	leaq	.L.str404, %rax
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 221 0                 # kiss_fft.c:221:0
.Ltmp359:
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	movq	2624(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2608(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2600(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 2592(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2584(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2576(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2560(%rsp)        # 8-byte Spill
	movq	%r12, 2552(%rsp)        # 8-byte Spill
	movq	%r14, 2544(%rsp)        # 8-byte Spill
	movl	%ebp, 2540(%rsp)        # 4-byte Spill
	movl	%r13d, 2536(%rsp)       # 4-byte Spill
	movq	%rbx, 2528(%rsp)        # 8-byte Spill
	movq	%r10, 2520(%rsp)        # 8-byte Spill
	movq	%r11, 2512(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2608(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2640(%rsp), %r8         # 8-byte Reload
	movq	2592(%rsp), %r9         # 8-byte Reload
	movq	2632(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	2592(%rsp), %r9         # 8-byte Reload
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2680(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2544(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rdx        # 8-byte Reload
	movq	2552(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movl	2540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2584(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2608(%rsp), %rdi        # 8-byte Reload
	movq	2584(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2568(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2743(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2592(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2743(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2504(%rsp)        # 8-byte Spill
	movq	%rdx, 2496(%rsp)        # 8-byte Spill
	jne	.LBB10_3
	jmp	.LBB10_4
.LBB10_3:                               # %.lr.ph
                                        #   Parent Loop BB10_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	2496(%rsp), %rax        # 8-byte Reload
	movq	2504(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str75186, %rsi
	movabsq	$0, %rdi
	leaq	.L.str4115, %r8
	movabsq	$2, %r9
	leaq	.L.str94205, %r10
	movabsq	$3, %r11
	leaq	.L.str187, %rbx
	movabsq	$221, %r14
	leaq	.L.str174, %r15
	leaq	.L.str189, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2488(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2480(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2472(%rsp)        # 8-byte Spill
	leaq	.L.str74185, %rax
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	leaq	.L.str397, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	leaq	.L.str407, %rax
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 2424(%rsp)        # 8-byte Spill
	leaq	.L.str409, %rax
	movq	%rax, 2416(%rsp)        # 8-byte Spill
	leaq	.L.str408, %rax
	movq	%rax, 2408(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 2400(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	leaq	.L.str406, %rax
	movq	%rax, 2384(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	leaq	.L.str34145, %rax
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 2360(%rsp)        # 8-byte Spill
	movabsq	$222, %rax
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	leaq	.L.str98209, %rax
	movq	%rax, 2344(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2336(%rsp)        # 8-byte Spill
	leaq	.L.str110221, %rax
	movq	%rax, 2328(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2320(%rsp)        # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	leaq	.L.str402, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	leaq	.L.str401, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 222 0                 # kiss_fft.c:222:0
.Ltmp360:
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	movq	2248(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2232(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2224(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 2216(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	2384(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2208(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2240(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2200(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2192(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2184(%rsp)        # 8-byte Spill
	movq	%r12, 2176(%rsp)        # 8-byte Spill
	movl	%ebp, 2172(%rsp)        # 4-byte Spill
	movl	%r13d, 2168(%rsp)       # 4-byte Spill
	movq	%r14, 2160(%rsp)        # 8-byte Spill
	movq	%rbx, 2152(%rsp)        # 8-byte Spill
	movq	%r10, 2144(%rsp)        # 8-byte Spill
	movq	%r11, 2136(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2248(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2408(%rsp), %rcx        # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2272(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2208(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3000(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2128(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3320(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2120(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2328(%rsp), %rcx        # 8-byte Reload
	movq	2304(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2120(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2328(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2304(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2128(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2128(%rsp), %rax        # 8-byte Reload
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2368(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2112(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2328(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3320(%rsp), %rax        # 8-byte Reload
	movq	2488(%rsp), %rcx        # 8-byte Reload
	movq	(%rax,%rcx,8), %rdx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 2096(%rsp)        # 8-byte Spill
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2368(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2104(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2096(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2368(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3000(%rsp), %rax        # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %rdx        # 8-byte Reload
	movq	%rdx, (%rax,%rcx,8)
.Ltmp361:
	.loc	2 221 0                 # kiss_fft.c:221:0
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2432(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2208(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2416(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2488(%rsp), %rax        # 8-byte Reload
	movq	2712(%rsp), %rcx        # 8-byte Reload
	addq	%rcx, %rax
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	2424(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2088(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2088(%rsp), %rax        # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 2076(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	2448(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2076(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2076(%rsp), %ebp        # 4-byte Reload
	movl	3296(%rsp), %r13d       # 4-byte Reload
	cmpl	%r13d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2075(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2136(%rsp), %rdi        # 8-byte Reload
	movq	2232(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2232(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2144(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2075(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2075(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2088(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2504(%rsp)        # 8-byte Spill
	movq	%rdx, 2496(%rsp)        # 8-byte Spill
	jne	.LBB10_4
	jmp	.LBB10_3
.Ltmp362:
.LBB10_4:                               # %.loopexit
                                        #   in Loop: Header=BB10_2 Depth=1
	movabsq	$1, %rax
	leaq	.L.str104215, %r8
	movabsq	$0, %rcx
	leaq	.L.str4115, %rdx
	movabsq	$2, %rsi
	leaq	.L.str404, %rdi
	movabsq	$3, %r9
	leaq	.L.str410, %r10
	movabsq	$228, %r11
	leaq	.L.str174, %rbx
	leaq	.L.str187, %r14
	leaq	.L.str191, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	.loc	2 228 0                 # kiss_fft.c:228:0
.Ltmp363:
	movq	%rdi, 2064(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2056(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2048(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 2040(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	2056(%rsp), %r11        # 8-byte Reload
	movq	%r8, 2032(%rsp)         # 8-byte Spill
	movq	%r11, %r8
	movq	%r9, 2024(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	movq	%r10, 2008(%rsp)        # 8-byte Spill
	movl	%r12d, 2004(%rsp)       # 4-byte Spill
	callq	trace_logger_log0
	movq	2024(%rsp), %rdi        # 8-byte Reload
	movq	2040(%rsp), %rsi        # 8-byte Reload
	movq	2040(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2056(%rsp), %rdi        # 8-byte Reload
	movq	2040(%rsp), %rsi        # 8-byte Reload
	movq	2040(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2742(%rsp), %r13b       # 1-byte Reload
	andb	$1, %r13b
	movzbl	%r13b, %ebp
	movl	%ebp, %edx
	movq	2016(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2742(%rsp), %r13b       # 1-byte Reload
	testb	$1, %r13b
	jne	.LBB10_5
	jmp	.LBB10_10
.LBB10_5:                               # %.lr.ph8
                                        #   in Loop: Header=BB10_2 Depth=1
	movl	$0, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str412, %r8
	leaq	.L.str4115, %rsi
	movabsq	$228, %rdi
	leaq	.L.str174, %r9
	leaq	.L.str410, %r10
	leaq	.L.str411, %r11
	movabsq	$2, %rbx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str135, %r12
	leaq	.L.str19130, %r13
	movq	%rcx, 1992(%rsp)        # 8-byte Spill
	movabsq	$230, %rcx
	movq	%rcx, 1984(%rsp)        # 8-byte Spill
	movabsq	$27, %rcx
	.loc	2 230 0                 # kiss_fft.c:230:0
.Ltmp364:
	movq	%rcx, 1976(%rsp)        # 8-byte Spill
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1968(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1960(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 1952(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	%r12, %rcx
	movq	%r8, 1944(%rsp)         # 8-byte Spill
	movq	1976(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1936(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1932(%rsp)        # 4-byte Spill
	movq	%r14, 1920(%rsp)        # 8-byte Spill
	movq	%r15, 1912(%rsp)        # 8-byte Spill
	movl	%ebp, 1908(%rsp)        # 4-byte Spill
	movq	%r12, 1896(%rsp)        # 8-byte Spill
	movq	%r13, 1888(%rsp)        # 8-byte Spill
	movq	%rbx, 1880(%rsp)        # 8-byte Spill
	movq	%r10, 1872(%rsp)        # 8-byte Spill
	movq	%r11, 1864(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1992(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1888(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
.Ltmp365:
	.loc	2 228 0                 # kiss_fft.c:228:0
	movq	1920(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1856(%rsp)        # 8-byte Spill
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1896(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	1936(%rsp), %rsi        # 8-byte Reload
	movq	1872(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1880(%rsp), %r8         # 8-byte Reload
	movl	1932(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1992(%rsp), %rdi        # 8-byte Reload
	movq	1952(%rsp), %rsi        # 8-byte Reload
	movq	1952(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1944(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2688(%rsp), %rcx        # 8-byte Reload
	movl	1932(%rsp), %eax        # 4-byte Reload
	movq	%rcx, 1848(%rsp)        # 8-byte Spill
	movl	%eax, 1844(%rsp)        # 4-byte Spill
.LBB10_6:                               #   Parent Loop BB10_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB10_8 Depth 3
	movl	1844(%rsp), %eax        # 4-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str105216, %r8
	movabsq	$0, %rsi
	leaq	.L.str4115, %rdi
	movabsq	$2, %r9
	leaq	.L.str415, %r10
	movabsq	$3, %r11
	leaq	.L.str419, %rbx
	movabsq	$231, %r14
	leaq	.L.str174, %r15
	leaq	.L.str412, %r12
	leaq	.L.str418, %r13
	movl	$0, %ebp
	movl	%eax, 1840(%rsp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, 1832(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str135, %rcx
	movq	%rcx, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str43154, %rcx
	movq	%rcx, 1808(%rsp)        # 8-byte Spill
	movabsq	$230, %rcx
	movq	%rcx, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str417, %rcx
	movq	%rcx, 1792(%rsp)        # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 1784(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rcx
	movq	%rcx, 1768(%rsp)        # 8-byte Spill
	movabsq	$44, %rcx
	movq	%rcx, 1760(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rcx
	movq	%rcx, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str413, %rcx
	movq	%rcx, 1744(%rsp)        # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 1736(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str416, %rcx
	movq	%rcx, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str410, %rcx
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str229, %rcx
	movq	%rcx, 1696(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1688(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str402, %rcx
	movq	%rcx, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str414, %rcx
	.loc	2 229 0                 # kiss_fft.c:229:0
.Ltmp366:
	movq	%rcx, 1664(%rsp)        # 8-byte Spill
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1656(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1648(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 1640(%rsp)        # 8-byte Spill
	movq	%r12, %rdx
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1632(%rsp)         # 8-byte Spill
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1624(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1620(%rsp)        # 4-byte Spill
	movq	%r15, 1608(%rsp)        # 8-byte Spill
	movq	%r12, 1600(%rsp)        # 8-byte Spill
	movq	%r14, 1592(%rsp)        # 8-byte Spill
	movq	%r13, 1584(%rsp)        # 8-byte Spill
	movl	%ebp, 1580(%rsp)        # 4-byte Spill
	movq	%rbx, 1568(%rsp)        # 8-byte Spill
	movq	%r10, 1560(%rsp)        # 8-byte Spill
	movq	%r11, 1552(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1744(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1688(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp367:
	#DEBUG_VALUE: twidx <- 0
	.loc	2 230 0                 # kiss_fft.c:230:0
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	1736(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1744(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1752(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1832(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3320(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1544(%rsp)        # 8-byte Spill
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1856(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1856(%rsp), %rsi        # 8-byte Reload
	movq	%rsi, (%rcx,%rdx,8)
.Ltmp368:
	#DEBUG_VALUE: kf_bfly_generic:q <- 1
	.loc	2 231 0                 # kiss_fft.c:231:0
	movq	1592(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1624(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2727(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1640(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2727(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB10_7
	jmp	.LBB10_9
.LBB10_7:                               # %.lr.ph5
                                        #   in Loop: Header=BB10_6 Depth=2
	movabsq	$1, %rax
	movl	$0, %ecx
	movabsq	$0, %rdx
	leaq	.L.str421, %r8
	leaq	.L.str4115, %rsi
	movabsq	$231, %rdi
	leaq	.L.str174, %r9
	leaq	.L.str419, %r10
	leaq	.L.str420, %r11
	movabsq	$2, %rbx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str53164, %r12
	leaq	.L.str122, %r13
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str413, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	movabsq	$235, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	movabsq	$232, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	.loc	2 232 0                 # kiss_fft.c:232:0
.Ltmp369:
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	movq	1440(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1424(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1416(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 1408(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1456(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 1404(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	1432(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1392(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1404(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1384(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r14, 1376(%rsp)        # 8-byte Spill
	movq	%r15, 1368(%rsp)        # 8-byte Spill
	movl	%ebp, 1364(%rsp)        # 4-byte Spill
	movq	%r12, 1352(%rsp)        # 8-byte Spill
	movq	%r13, 1344(%rsp)        # 8-byte Spill
	movq	%rbx, 1336(%rsp)        # 8-byte Spill
	movq	%r10, 1328(%rsp)        # 8-byte Spill
	movq	%r11, 1320(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	.loc	2 235 0                 # kiss_fft.c:235:0
.Ltmp370:
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1528(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1312(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1832(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3320(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
.Ltmp371:
	.loc	2 231 0                 # kiss_fft.c:231:0
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1304(%rsp)        # 8-byte Spill
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movl	1404(%rsp), %eax        # 4-byte Reload
	movq	%rcx, 1296(%rsp)        # 8-byte Spill
	movl	%eax, 1292(%rsp)        # 4-byte Spill
.LBB10_8:                               #   Parent Loop BB10_2 Depth=1
                                        #     Parent Loop BB10_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movl	1292(%rsp), %eax        # 4-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str429, %rsi
	movabsq	$0, %rdi
	leaq	.L.str4115, %r8
	movabsq	$2, %r9
	leaq	.L.str421, %r10
	movabsq	$3, %r11
	leaq	.L.str415, %rbx
	movabsq	$231, %r14
	leaq	.L.str174, %r15
	leaq	.L.str430, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1280(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1272(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str428, %rcx
	movq	%rcx, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str397, %rcx
	movq	%rcx, 1248(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1240(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str423, %rcx
	movq	%rcx, 1224(%rsp)        # 8-byte Spill
	movabsq	$33, %rcx
	movq	%rcx, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str422, %rcx
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rcx
	movq	%rcx, 1200(%rsp)        # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rcx
	movq	%rcx, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str53164, %rcx
	movq	%rcx, 1176(%rsp)        # 8-byte Spill
	movabsq	$235, %rcx
	movq	%rcx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str427, %rcx
	movq	%rcx, 1160(%rsp)        # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rcx
	movq	%rcx, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str172, %rcx
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movabsq	$9, %rcx
	movq	%rcx, 1128(%rsp)        # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str225, %rcx
	movq	%rcx, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str137, %rcx
	movq	%rcx, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str426, %rcx
	movq	%rcx, 1096(%rsp)        # 8-byte Spill
	leaq	.L.str224, %rcx
	movq	%rcx, 1088(%rsp)        # 8-byte Spill
	leaq	.L.str222, %rcx
	movq	%rcx, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str223, %rcx
	movq	%rcx, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str168, %rcx
	movq	%rcx, 1064(%rsp)        # 8-byte Spill
	movabsq	$234, %rcx
	movq	%rcx, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str67178, %rcx
	movq	%rcx, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str72183, %rcx
	movq	%rcx, 1040(%rsp)        # 8-byte Spill
	movabsq	$13, %rcx
	movq	%rcx, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str145, %rcx
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str163, %rcx
	movq	%rcx, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str69180, %rcx
	movq	%rcx, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str164, %rcx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	movabsq	$11, %rcx
	movq	%rcx, 992(%rsp)         # 8-byte Spill
	leaq	.L.str77188, %rcx
	movq	%rcx, 984(%rsp)         # 8-byte Spill
	leaq	.L.str117, %rcx
	movq	%rcx, 976(%rsp)         # 8-byte Spill
	movabsq	$4, %rcx
	movq	%rcx, 968(%rsp)         # 8-byte Spill
	leaq	.L.str64175, %rcx
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	leaq	.L.str71182, %rcx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	leaq	.L.str125, %rcx
	movq	%rcx, 928(%rsp)         # 8-byte Spill
	leaq	.L.str66177, %rcx
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	leaq	.L.str425, %rcx
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movabsq	$35, %rcx
	movq	%rcx, 904(%rsp)         # 8-byte Spill
	leaq	.L.str61172, %rcx
	movq	%rcx, 896(%rsp)         # 8-byte Spill
	leaq	.L.str57168, %rcx
	movq	%rcx, 888(%rsp)         # 8-byte Spill
	leaq	.L.str143, %rcx
	movq	%rcx, 880(%rsp)         # 8-byte Spill
	movabsq	$233, %rcx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movabsq	$10, %rcx
	movq	%rcx, 864(%rsp)         # 8-byte Spill
	leaq	.L.str58169, %rcx
	movq	%rcx, 856(%rsp)         # 8-byte Spill
	leaq	.L.str6117, %rcx
	movq	%rcx, 848(%rsp)         # 8-byte Spill
	movabsq	$50, %rcx
	movq	%rcx, 840(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rcx
	movq	%rcx, 832(%rsp)         # 8-byte Spill
	movabsq	$232, %rcx
	movq	%rcx, 824(%rsp)         # 8-byte Spill
	leaq	.L.str55166, %rcx
	movq	%rcx, 816(%rsp)         # 8-byte Spill
	leaq	.L.str47158, %rcx
	movq	%rcx, 808(%rsp)         # 8-byte Spill
	leaq	.L.str424, %rcx
	movq	%rcx, 800(%rsp)         # 8-byte Spill
	movabsq	$34, %rcx
	movq	%rcx, 792(%rsp)         # 8-byte Spill
	leaq	.L.str419, %rcx
	movq	%rcx, 784(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 232 0                 # kiss_fft.c:232:0
.Ltmp372:
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 760(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 752(%rsp)         # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 744(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 736(%rsp)          # 8-byte Spill
	movq	768(%rsp), %r8          # 8-byte Reload
	movq	%r9, 728(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 724(%rsp)         # 4-byte Spill
	movq	%r15, 712(%rsp)         # 8-byte Spill
	movq	%r12, 704(%rsp)         # 8-byte Spill
	movl	%ebp, 700(%rsp)         # 4-byte Spill
	movl	%r13d, 696(%rsp)        # 4-byte Spill
	movq	%r14, 688(%rsp)         # 8-byte Spill
	movq	%rbx, 680(%rsp)         # 8-byte Spill
	movq	%r10, 672(%rsp)         # 8-byte Spill
	movq	%r11, 664(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	768(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %ecx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1312(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	656(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	1312(%rsp), %rdx        # 8-byte Reload
	addq	%rdx, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	648(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 644(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp373:
	#DEBUG_VALUE: twidx <- [RSP+644]
	.loc	2 233 0                 # kiss_fft.c:233:0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3220(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	3220(%rsp), %ebp        # 4-byte Reload
	cmpl	%ebp, %eax
	setl	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 643(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3220(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	643(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	643(%rsp), %al          # 1-byte Reload
	testb	%al, %al
	movl	700(%rsp), %ebp         # 4-byte Reload
	movl	3220(%rsp), %r13d       # 4-byte Reload
	cmovel	%r13d, %ebp
	movl	%ebp, %eax
	movl	%eax, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 636(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	636(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	636(%rsp), %ebp         # 4-byte Reload
	subl	%ebp, %eax
.Ltmp374:
	.loc	2 234 0                 # kiss_fft.c:234:0
	movl	%eax, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 632(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1280(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3000(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 624(%rsp)         # 8-byte Spill
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3000(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 620(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	632(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	632(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	664(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	608(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 600(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 596(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	vmovss	596(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 592(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1280(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3000(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 584(%rsp)         # 8-byte Spill
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3000(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 580(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	984(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	664(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	608(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 568(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	568(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 564(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	vmovss	564(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 560(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	560(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	592(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	592(%rsp), %xmm0        # 4-byte Reload
	vmovss	560(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 556(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	vmovss	564(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 552(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	vmovss	580(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 548(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	552(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	vmovss	552(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp375:
	.loc	2 235 0                 # kiss_fft.c:235:0
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 544(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 540(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	556(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	540(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	540(%rsp), %xmm0        # 4-byte Reload
	vmovss	556(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 536(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	536(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1544(%rsp), %rcx        # 8-byte Reload
	vmovss	536(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 532(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	544(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	vmovss	544(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 528(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	528(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1304(%rsp), %rcx        # 8-byte Reload
	vmovss	528(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
.Ltmp376:
	.loc	2 231 0                 # kiss_fft.c:231:0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rcx        # 8-byte Reload
	addq	$1, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 520(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	520(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	520(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 516(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	516(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	516(%rsp), %eax         # 4-byte Reload
	movl	3296(%rsp), %ebp        # 4-byte Reload
	cmpl	%ebp, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 515(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	515(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	515(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	520(%rsp), %rcx         # 8-byte Reload
	movl	632(%rsp), %ebp         # 4-byte Reload
	movq	%rcx, 1296(%rsp)        # 8-byte Spill
	movl	%ebp, 1292(%rsp)        # 4-byte Spill
	jne	.LBB10_9
	jmp	.LBB10_8
.Ltmp377:
.LBB10_9:                               # %._crit_edge
                                        #   in Loop: Header=BB10_6 Depth=2
	movabsq	$1, %rax
	leaq	.L.str431, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str412, %r8
	movabsq	$3, %r9
	leaq	.L.str404, %r10
	movabsq	$228, %r11
	leaq	.L.str174, %rbx
	leaq	.L.str415, %r14
	leaq	.L.str432, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 504(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str397, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str414, %rax
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str413, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str25136, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	leaq	.L.str416, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	.loc	2 228 0                 # kiss_fft.c:228:0
	movq	%rdi, 416(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 408(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 400(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 392(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%r8, 376(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 368(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 360(%rsp)         # 8-byte Spill
	movl	%ebp, 356(%rsp)         # 4-byte Spill
	movl	%r12d, 352(%rsp)        # 4-byte Spill
	movq	%r13, 344(%rsp)         # 8-byte Spill
	movq	%r14, 336(%rsp)         # 8-byte Spill
	movq	%rbx, 328(%rsp)         # 8-byte Spill
	movq	%r10, 320(%rsp)         # 8-byte Spill
	movq	%r11, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %ebp        # 4-byte Reload
	addl	$1, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 308(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp378:
	#DEBUG_VALUE: kf_bfly_generic:q1 <- [RSP+308]
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	2704(%rsp), %rdx        # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1832(%rsp), %rax        # 8-byte Reload
	movq	2704(%rsp), %rcx        # 8-byte Reload
	addq	%rcx, %rax
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 296(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	3296(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 295(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	416(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	368(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	295(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	295(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	296(%rsp), %rcx         # 8-byte Reload
	movl	308(%rsp), %ebp         # 4-byte Reload
	movq	%rcx, 1848(%rsp)        # 8-byte Spill
	movl	%ebp, 1844(%rsp)        # 4-byte Spill
	jne	.LBB10_10
	jmp	.LBB10_6
.Ltmp379:
.LBB10_10:                              # %._crit_edge9
                                        #   in Loop: Header=BB10_2 Depth=1
	movabsq	$1, %rax
	leaq	.L.str434, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str401, %r8
	movabsq	$3, %r9
	leaq	.L.str399, %r10
	movabsq	$219, %r11
	leaq	.L.str174, %rbx
	leaq	.L.str404, %r14
	leaq	.L.str435, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 280(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	leaq	.L.str433, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	leaq	.L.str403, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str402, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	2 219 0                 # kiss_fft.c:219:0
	movq	%rdi, 200(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 184(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 176(%rsp)         # 8-byte Spill
	movq	232(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%r8, 160(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 152(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 144(%rsp)         # 8-byte Spill
	movl	%ebp, 140(%rsp)         # 4-byte Spill
	movl	%r12d, 136(%rsp)        # 4-byte Spill
	movq	%r13, 128(%rsp)         # 8-byte Spill
	movq	%r14, 120(%rsp)         # 8-byte Spill
	movq	%rbx, 112(%rsp)         # 8-byte Spill
	movq	%r10, 104(%rsp)         # 8-byte Spill
	movq	%r11, 96(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rdx         # 8-byte Reload
	movq	184(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2688(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 88(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	88(%rsp), %rax          # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 84(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	84(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	84(%rsp), %ebp          # 4-byte Reload
	movl	3484(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 83(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	184(%rsp), %rdx         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	184(%rsp), %rdx         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	83(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	83(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 2696(%rsp)        # 8-byte Spill
	jne	.LBB10_11
	jmp	.LBB10_2
.Ltmp380:
.LBB10_11:                              # %._crit_edge11
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str9120, %r8
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	free, %r9
	leaq	.L.str437, %r10
	movabsq	$240, %r11
	leaq	.L.str174, %rbx
	leaq	.L.str399, %r14
	leaq	.L.str436, %r15
	movabsq	$49, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	.loc	2 240 0                 # kiss_fft.c:240:0
	movq	%rdi, 72(%rsp)          # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 64(%rsp)          # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 56(%rsp)          # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r15, %rcx
	movq	%r8, 40(%rsp)           # 8-byte Spill
	movq	%r12, %r8
	movq	%r9, 32(%rsp)           # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movq	%r10, 16(%rsp)          # 8-byte Spill
	movl	%r13d, 12(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rdi        # 8-byte Reload
	callq	free
	movabsq	$241, %rdi
	leaq	.L.str174, %rsi
	leaq	.L.str399, %rdx
	leaq	.L.str438, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %ebp
	.loc	2 241 0                 # kiss_fft.c:241:0
	movl	$1, (%rsp)
	movl	%ebp, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$3512, %rsp             # imm = 0xDB8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp381:
.Ltmp382:
	.size	kf_bfly_generic, .Ltmp382-kf_bfly_generic
.Lfunc_end10:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI11_0:
	.quad	-9223372036854775808    # double -0
	.text
	.align	16, 0x90
	.type	kf_bfly5,@function
kf_bfly5:                               # @kf_bfly5
	.cfi_startproc
.Lfunc_begin11:
	.loc	2 142 0                 # kiss_fft.c:142:0
# BB#0:
	pushq	%rbp
.Ltmp390:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp391:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp392:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp393:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp394:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp395:
	.cfi_def_cfa_offset 56
	subq	$3640, %rsp             # imm = 0xE38
.Ltmp396:
	.cfi_def_cfa_offset 3696
.Ltmp397:
	.cfi_offset %rbx, -56
.Ltmp398:
	.cfi_offset %r12, -48
.Ltmp399:
	.cfi_offset %r13, -40
.Ltmp400:
	.cfi_offset %r14, -32
.Ltmp401:
	.cfi_offset %r15, -24
.Ltmp402:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str25136, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %r10
	movabsq	$2, %r11
	leaq	.L.str46157, %rbx
	movabsq	$3, %r14
	leaq	.L.str45156, %r15
	movabsq	$161, %r12
	leaq	.L.str170, %r13
	leaq	.L.str1112, %rbp
	movq	%rax, 3632(%rsp)        # 8-byte Spill
	leaq	.L.str126, %rax
	movl	%ecx, 3628(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 3624(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 3616(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3608(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3600(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 3592(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 3584(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3576(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 3568(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3560(%rsp)        # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 3552(%rsp)        # 8-byte Spill
	movabsq	$152, %rax
	movq	%rax, 3544(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 3536(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 3528(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 3520(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 3512(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 3504(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3496(%rsp)        # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 3488(%rsp)        # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 3480(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 3472(%rsp)        # 8-byte Spill
	leaq	.L.str14125, %rax
	movq	%rax, 3464(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 3456(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 3448(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3440(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 3432(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 3424(%rsp)        # 8-byte Spill
	movabsq	$150, %rax
	movq	%rax, 3416(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 3408(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 3400(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 3392(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3384(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3376(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	.loc	2 137 0 prologue_end    # kiss_fft.c:137:0
.Ltmp403:
	movq	%rax, 3368(%rsp)        # 8-byte Spill
	movq	3376(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3360(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	3560(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3352(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3360(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3344(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3632(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 3340(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	3368(%rsp), %rax        # 8-byte Reload
	movq	%r8, 3328(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 3320(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r13, 3312(%rsp)        # 8-byte Spill
	movq	%r15, 3304(%rsp)        # 8-byte Spill
	movq	%r12, 3296(%rsp)        # 8-byte Spill
	movq	%rbp, 3288(%rsp)        # 8-byte Spill
	movq	%r14, 3280(%rsp)        # 8-byte Spill
	movq	%rbx, 3272(%rsp)        # 8-byte Spill
	movq	%r10, 3264(%rsp)        # 8-byte Spill
	movq	%r11, 3256(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3376(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3448(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3376(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3528(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3628(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3376(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3592(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly5:Fout <- [RSP+3360]
	#DEBUG_VALUE: kf_bfly5:fstride <- [RSP+3352]
	#DEBUG_VALUE: kf_bfly5:st <- [RSP+3344]
	#DEBUG_VALUE: kf_bfly5:m <- [RSP+3628]
	.loc	2 150 0                 # kiss_fft.c:150:0
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3472(%rsp), %rcx        # 8-byte Reload
	movq	3384(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3628(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3592(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3472(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3248(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3408(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3448(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3248(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3472(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3248(%rsp), %rax        # 8-byte Reload
	movq	3352(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3408(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3240(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3392(%rsp), %rcx        # 8-byte Reload
	movq	3496(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3520(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3240(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3408(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3280(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3528(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	3240(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3232(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3400(%rsp), %rcx        # 8-byte Reload
	movq	3536(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3232(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	movq	3240(%rsp), %rcx        # 8-byte Reload
	vmovss	264(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 3228(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3400(%rsp), %rcx        # 8-byte Reload
	movq	3320(%rsp), %r8         # 8-byte Reload
	movq	3264(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3424(%rsp), %rcx        # 8-byte Reload
	movq	3496(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3520(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3240(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3408(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3280(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3528(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	3240(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3424(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3216(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3416(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3432(%rsp), %rcx        # 8-byte Reload
	movq	3536(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3216(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3424(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	movq	3240(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 152 0                 # kiss_fft.c:152:0
	cvtss2sd	%xmm0, %xmm1
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 3212(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3432(%rsp), %rcx        # 8-byte Reload
	movq	3320(%rsp), %r8         # 8-byte Reload
	movq	3264(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3464(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3448(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3352(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3464(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3512(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3464(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3248(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3472(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3248(%rsp), %rax        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3512(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3192(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3480(%rsp), %rcx        # 8-byte Reload
	movq	3496(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3520(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3512(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3280(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3528(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	3192(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3480(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3488(%rsp), %rcx        # 8-byte Reload
	movq	3536(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3184(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3480(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	movq	3192(%rsp), %rcx        # 8-byte Reload
	vmovss	264(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 3180(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3488(%rsp), %rcx        # 8-byte Reload
	movq	3320(%rsp), %r8         # 8-byte Reload
	movq	3264(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3552(%rsp), %rcx        # 8-byte Reload
	movq	3496(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3520(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3512(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3280(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3528(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	3192(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3552(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3544(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3568(%rsp), %rcx        # 8-byte Reload
	movq	3536(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3560(%rsp), %rsi        # 8-byte Reload
	movq	3168(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3552(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rax        # 8-byte Reload
	movq	3192(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 154 0                 # kiss_fft.c:154:0
	cvtss2sd	%xmm0, %xmm1
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 3164(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3632(%rsp), %rdx        # 8-byte Reload
	movq	3568(%rsp), %rcx        # 8-byte Reload
	movq	3320(%rsp), %r8         # 8-byte Reload
	movq	3264(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
.Ltmp404:
	#DEBUG_VALUE: kf_bfly5:Fout0 <- [RSP+3360]
	#DEBUG_VALUE: kf_bfly5:Fout1 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout2 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout3 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout4 <- undef
	#DEBUG_VALUE: kf_bfly5:u <- 0
	.loc	2 161 0                 # kiss_fft.c:161:0
	movq	3296(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3328(%rsp), %rcx        # 8-byte Reload
	movq	3576(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	3584(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3600(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3592(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %esi        # 4-byte Reload
	cmpl	$0, %esi
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	3608(%rsp), %rdi        # 8-byte Reload
	movq	3632(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3328(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 3163(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	3296(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3288(%rsp), %rdx        # 8-byte Reload
	movq	3616(%rsp), %rcx        # 8-byte Reload
	movq	3256(%rsp), %r8         # 8-byte Reload
	movl	3624(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3320(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3304(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3320(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3272(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	3163(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	3632(%rsp), %rdi        # 8-byte Reload
	movq	3632(%rsp), %rsi        # 8-byte Reload
	movq	3632(%rsp), %rcx        # 8-byte Reload
	movq	3328(%rsp), %r8         # 8-byte Reload
	movq	3320(%rsp), %r9         # 8-byte Reload
	movq	3264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	3163(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB11_1
	jmp	.LBB11_3
.Ltmp405:
.LBB11_1:                               # %.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str299, %r8
	leaq	.L.str4115, %rdx
	movabsq	$161, %rdi
	leaq	.L.str170, %rsi
	leaq	.L.str45156, %r9
	leaq	.L.str48159, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str137, %r12
	leaq	.L.str122, %r13
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	movabsq	$167, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	movabsq	$42, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	movabsq	$155, %rax
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3104(%rsp)        # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 3096(%rsp)        # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 3088(%rsp)        # 8-byte Spill
	movabsq	$156, %rax
	movq	%rax, 3080(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 3072(%rsp)        # 8-byte Spill
	leaq	.L.str34145, %rax
	movq	%rax, 3064(%rsp)        # 8-byte Spill
	movabsq	$157, %rax
	movq	%rax, 3056(%rsp)        # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 3048(%rsp)        # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 3040(%rsp)        # 8-byte Spill
	movabsq	$158, %rax
	movq	%rax, 3032(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3024(%rsp)        # 8-byte Spill
	leaq	.L.str110221, %rax
	movq	%rax, 3016(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3008(%rsp)        # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 3000(%rsp)        # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 2992(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 2984(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2976(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 2968(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	.loc	2 158 0                 # kiss_fft.c:158:0
	movq	%rax, 2952(%rsp)        # 8-byte Spill
	movq	3032(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2944(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2936(%rsp)        # 8-byte Spill
	movq	%rdx, 2928(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2992(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2920(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2968(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2912(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2904(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2896(%rsp)        # 8-byte Spill
	movl	%ebp, 2892(%rsp)        # 4-byte Spill
	movq	%r15, 2880(%rsp)        # 8-byte Spill
	movq	%r13, 2872(%rsp)        # 8-byte Spill
	movq	%r12, 2864(%rsp)        # 8-byte Spill
	movl	%ebx, 2860(%rsp)        # 4-byte Spill
	movq	%r10, 2848(%rsp)        # 8-byte Spill
	movq	%r11, 2840(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2840(%rsp), %rdx        # 8-byte Reload
	movq	3152(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	shll	$2, %ebx
	.loc	2 157 0                 # kiss_fft.c:157:0
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2992(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 2836(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	3056(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3000(%rsp), %rcx        # 8-byte Reload
	movq	2952(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	3152(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	imull	$3, %ebx, %ebp
	.loc	2 156 0                 # kiss_fft.c:156:0
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3000(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 2832(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3016(%rsp), %rcx        # 8-byte Reload
	movq	2968(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rdx        # 8-byte Reload
	movq	3152(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3628(%rsp), %ebx        # 4-byte Reload
	shll	$1, %ebx
	.loc	2 158 0                 # kiss_fft.c:158:0
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 2828(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	3032(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3040(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2836(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2992(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2836(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 157 0                 # kiss_fft.c:157:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2816(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3056(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3064(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2832(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3000(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2832(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 156 0                 # kiss_fft.c:156:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2808(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3088(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2828(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2828(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 158 0                 # kiss_fft.c:158:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2800(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3032(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3048(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	2816(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2816(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3360(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 157 0                 # kiss_fft.c:157:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2792(%rsp)        # 8-byte Spill
.Ltmp406:
	#DEBUG_VALUE: kf_bfly5:Fout4 <- [RSP+2792]
	movq	%rax, %rcx
	movq	3048(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3072(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2808(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3360(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 156 0                 # kiss_fft.c:156:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2784(%rsp)        # 8-byte Spill
.Ltmp407:
	#DEBUG_VALUE: kf_bfly5:Fout3 <- [RSP+2784]
	movq	%rax, %rcx
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	2800(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2800(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3360(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 155 0                 # kiss_fft.c:155:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2776(%rsp)        # 8-byte Spill
.Ltmp408:
	#DEBUG_VALUE: kf_bfly5:Fout2 <- [RSP+2776]
	movq	%rax, %rcx
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3128(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2840(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3248(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	3120(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3248(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3360(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 167 0                 # kiss_fft.c:167:0
.Ltmp409:
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2768(%rsp)        # 8-byte Spill
.Ltmp410:
	#DEBUG_VALUE: kf_bfly5:Fout1 <- [RSP+2768]
	movq	%rax, %rcx
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3144(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	2864(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp411:
	.loc	2 161 0                 # kiss_fft.c:161:0
	movq	2896(%rsp), %rdi        # 8-byte Reload
	movq	2880(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2864(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2944(%rsp), %rdi        # 8-byte Reload
	movq	2936(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	2848(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2860(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	3152(%rsp), %rsi        # 8-byte Reload
	movq	3152(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movq	3152(%rsp), %r9         # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3152(%rsp), %rax        # 8-byte Reload
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	2768(%rsp), %rdx        # 8-byte Reload
	movq	2776(%rsp), %rsi        # 8-byte Reload
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2792(%rsp), %r8         # 8-byte Reload
	movq	%rax, 2760(%rsp)        # 8-byte Spill
	movq	%rcx, 2752(%rsp)        # 8-byte Spill
	movq	%rdx, 2744(%rsp)        # 8-byte Spill
	movq	%rsi, 2736(%rsp)        # 8-byte Spill
	movq	%rdi, 2728(%rsp)        # 8-byte Spill
	movq	%r8, 2720(%rsp)         # 8-byte Spill
.LBB11_2:                               # =>This Inner Loop Header: Depth=1
	movq	2720(%rsp), %rax        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %rdx        # 8-byte Reload
	movq	2744(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %r8         # 8-byte Reload
	movabsq	$1, %r9
	leaq	.L.str75186, %r10
	movabsq	$0, %r11
	leaq	.L.str4115, %rbx
	movabsq	$2, %r14
	leaq	.L.str299, %r15
	movabsq	$3, %r12
	leaq	.L.str46157, %r13
	movabsq	$161, %rbp
	movq	%rax, 2712(%rsp)        # 8-byte Spill
	leaq	.L.str170, %rax
	movq	%rax, 2704(%rsp)        # 8-byte Spill
	leaq	.L.str396, %rax
	movq	%rsi, 2696(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 2692(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	leaq	.L.str74185, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	leaq	.L.str51162, %rax
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	leaq	.L.str50161, %rax
	movq	%rax, 2608(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 2592(%rsp)        # 8-byte Spill
	leaq	.L.str309, %rax
	movq	%rax, 2584(%rsp)        # 8-byte Spill
	leaq	.L.str308, %rax
	movq	%rax, 2576(%rsp)        # 8-byte Spill
	movabsq	$199, %rax
	movq	%rax, 2568(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2560(%rsp)        # 8-byte Spill
	leaq	.L.str307, %rax
	movq	%rax, 2552(%rsp)        # 8-byte Spill
	leaq	.L.str306, %rax
	movq	%rax, 2544(%rsp)        # 8-byte Spill
	leaq	.L.str305, %rax
	movq	%rax, 2536(%rsp)        # 8-byte Spill
	leaq	.L.str304, %rax
	movq	%rax, 2528(%rsp)        # 8-byte Spill
	leaq	.L.str303, %rax
	movq	%rax, 2520(%rsp)        # 8-byte Spill
	leaq	.L.str302, %rax
	movq	%rax, 2512(%rsp)        # 8-byte Spill
	leaq	.L.str301, %rax
	movq	%rax, 2504(%rsp)        # 8-byte Spill
	leaq	.L.str300, %rax
	movq	%rax, 2496(%rsp)        # 8-byte Spill
	leaq	.L.str394, %rax
	movq	%rax, 2488(%rsp)        # 8-byte Spill
	leaq	.L.str285, %rax
	movq	%rax, 2480(%rsp)        # 8-byte Spill
	movabsq	$197, %rax
	movq	%rax, 2472(%rsp)        # 8-byte Spill
	leaq	.L.str395, %rax
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	leaq	.L.str381, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	leaq	.L.str387, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	leaq	.L.str392, %rax
	movq	%rax, 2424(%rsp)        # 8-byte Spill
	leaq	.L.str272, %rax
	movq	%rax, 2416(%rsp)        # 8-byte Spill
	leaq	.L.str393, %rax
	movq	%rax, 2408(%rsp)        # 8-byte Spill
	leaq	.L.str377, %rax
	movq	%rax, 2400(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	leaq	.L.str390, %rax
	movq	%rax, 2384(%rsp)        # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	movabsq	$196, %rax
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	leaq	.L.str391, %rax
	movq	%rax, 2360(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	leaq	.L.str388, %rax
	movq	%rax, 2344(%rsp)        # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 2336(%rsp)        # 8-byte Spill
	leaq	.L.str389, %rax
	movq	%rax, 2328(%rsp)        # 8-byte Spill
	leaq	.L.str385, %rax
	movq	%rax, 2320(%rsp)        # 8-byte Spill
	leaq	.L.str386, %rax
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	movabsq	$194, %rax
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str342, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	leaq	.L.str338, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	leaq	.L.str383, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	leaq	.L.str382, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$193, %rax
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	leaq	.L.str343, %rax
	movq	%rax, 2232(%rsp)        # 8-byte Spill
	leaq	.L.str339, %rax
	movq	%rax, 2224(%rsp)        # 8-byte Spill
	leaq	.L.str380, %rax
	movq	%rax, 2216(%rsp)        # 8-byte Spill
	leaq	.L.str379, %rax
	movq	%rax, 2208(%rsp)        # 8-byte Spill
	movabsq	$192, %rax
	movq	%rax, 2200(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 2192(%rsp)        # 8-byte Spill
	leaq	.L.str341, %rax
	movq	%rax, 2184(%rsp)        # 8-byte Spill
	leaq	.L.str61172, %rax
	movq	%rax, 2176(%rsp)        # 8-byte Spill
	leaq	.L.str378, %rax
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	leaq	.L.str337, %rax
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str376, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	leaq	.L.str375, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	movabsq	$191, %rax
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str340, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str58169, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str374, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	leaq	.L.str336, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	leaq	.L.str372, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	leaq	.L.str327, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	movabsq	$189, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	leaq	.L.str373, %rax
	movq	%rax, 2064(%rsp)        # 8-byte Spill
	leaq	.L.str358, %rax
	movq	%rax, 2056(%rsp)        # 8-byte Spill
	leaq	.L.str365, %rax
	movq	%rax, 2048(%rsp)        # 8-byte Spill
	leaq	.L.str370, %rax
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	leaq	.L.str318, %rax
	movq	%rax, 2032(%rsp)        # 8-byte Spill
	leaq	.L.str371, %rax
	movq	%rax, 2024(%rsp)        # 8-byte Spill
	leaq	.L.str361, %rax
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	leaq	.L.str354, %rax
	movq	%rax, 2008(%rsp)        # 8-byte Spill
	leaq	.L.str368, %rax
	movq	%rax, 2000(%rsp)        # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 1992(%rsp)        # 8-byte Spill
	movabsq	$188, %rax
	movq	%rax, 1984(%rsp)        # 8-byte Spill
	leaq	.L.str369, %rax
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	leaq	.L.str366, %rax
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	leaq	.L.str67178, %rax
	movq	%rax, 1960(%rsp)        # 8-byte Spill
	leaq	.L.str367, %rax
	movq	%rax, 1952(%rsp)        # 8-byte Spill
	leaq	.L.str363, %rax
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	leaq	.L.str364, %rax
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	movabsq	$186, %rax
	vmovsd	.LCPI11_0, %xmm0
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str362, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str360, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	leaq	.L.str359, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	movabsq	$185, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str357, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	leaq	.L.str356, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	movabsq	$183, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	leaq	.L.str355, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str353, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	leaq	.L.str352, %rax
	movq	%rax, 1848(%rsp)        # 8-byte Spill
	movabsq	$182, %rax
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	leaq	.L.str351, %rax
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	leaq	.L.str349, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str143, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	movabsq	$180, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str350, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str348, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	leaq	.L.str347, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str345, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	leaq	.L.str57168, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movabsq	$179, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str346, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	leaq	.L.str344, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str314, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	movabsq	$177, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str264, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	movabsq	$176, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str335, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	movabsq	$175, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str332, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	movabsq	$174, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str334, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str333, %rax
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	movabsq	$172, %rax
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	leaq	.L.str325, %rax
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str328, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	leaq	.L.str319, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str330, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str326, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	leaq	.L.str331, %rax
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str329, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str323, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	leaq	.L.str317, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str324, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str322, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str321, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str320, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str316, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	movabsq	$22, %rax
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	leaq	.L.str315, %rax
	movq	%rax, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	movabsq	$10, %rax
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$42, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str295, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str263, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	movabsq	$171, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	leaq	.L.str287, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	leaq	.L.str310, %rax
	movq	%rax, 1352(%rsp)        # 8-byte Spill
	leaq	.L.str291, %rax
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	leaq	.L.str312, %rax
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	leaq	.L.str313, %rax
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	leaq	.L.str289, %rax
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	leaq	.L.str279, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	leaq	.L.str271, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str281, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str277, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str311, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$12884901888, %rax      # imm = 0x300000000
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str269, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str255, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str253, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movabsq	$170, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str241, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str233, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str250, %rax
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str247, %rax
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str238, %rax
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1136(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1128(%rsp)        # 8-byte Spill
	leaq	.L.str230, %rax
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str225, %rax
	movq	%rax, 1096(%rsp)        # 8-byte Spill
	movabsq	$169, %rax
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	leaq	.L.str77188, %rax
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str69180, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str163, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str172, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	leaq	.L.str168, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str66177, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str72183, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str64175, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str145, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$167, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 960(%rsp)         # 8-byte Spill
	leaq	.L.str45156, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	leaq	.L.str47158, %rax
	.loc	2 167 0                 # kiss_fft.c:167:0
.Ltmp412:
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movq	936(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 896(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	2704(%rsp), %rax        # 8-byte Reload
	movl	%esi, 892(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	2608(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	928(%rsp), %rax         # 8-byte Reload
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	2692(%rsp), %eax        # 4-byte Reload
	movq	%r9, 856(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r12, 848(%rsp)         # 8-byte Spill
	movq	%r13, 840(%rsp)         # 8-byte Spill
	movq	%rbp, 832(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 824(%rsp)        # 8-byte Spill
	movq	%r15, 816(%rsp)         # 8-byte Spill
	movq	%r14, 808(%rsp)         # 8-byte Spill
	movq	%r10, 800(%rsp)         # 8-byte Spill
	movq	%r11, 792(%rsp)         # 8-byte Spill
	movq	%rbx, 784(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2624(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2496(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2504(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2512(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2520(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2528(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2536(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2544(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2544(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2576(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2584(%rsp), %r8         # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	816(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	856(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	952(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	776(%rsp), %rcx         # 8-byte Reload
	sarq	$3, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 760(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 756(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 744(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	.loc	2 169 0                 # kiss_fft.c:169:0
.Ltmp413:
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 740(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2696(%rsp), %rcx        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rcx         # 8-byte Reload
	sarq	$3, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	720(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 712(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 708(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	696(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	688(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 684(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	684(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	708(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	708(%rsp), %xmm0        # 4-byte Reload
	vmovss	684(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 680(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	720(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 672(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1992(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1992(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 668(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	696(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1032(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	656(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 652(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	652(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	668(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	668(%rsp), %xmm0        # 4-byte Reload
	vmovss	652(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 648(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	648(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	680(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	680(%rsp), %xmm0        # 4-byte Reload
	vmovss	648(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 644(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	652(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	708(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	708(%rsp), %xmm0        # 4-byte Reload
	vmovss	652(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 640(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	668(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	684(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	684(%rsp), %xmm0        # 4-byte Reload
	vmovss	668(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 636(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	vmovss	640(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp414:
	.loc	2 170 0                 # kiss_fft.c:170:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 632(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 624(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1120(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	624(%rsp), %rcx         # 8-byte Reload
	sarq	$3, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 616(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2336(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	616(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 608(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 604(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	864(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 600(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	600(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	600(%rsp), %eax         # 4-byte Reload
	shll	$1, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 596(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	596(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	596(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 576(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	576(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	576(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 568(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	568(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	576(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 564(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	vmovss	564(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 560(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2376(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	616(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 552(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1216(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	552(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 548(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1216(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	576(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	576(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 536(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	576(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 532(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1216(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	vmovss	532(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 528(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	528(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	560(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	560(%rsp), %xmm0        # 4-byte Reload
	vmovss	528(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 524(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	vmovss	532(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 520(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1216(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	vmovss	548(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 516(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	520(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	516(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	516(%rsp), %xmm0        # 4-byte Reload
	vmovss	520(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp415:
	.loc	2 171 0                 # kiss_fft.c:171:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 512(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2544(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 504(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	504(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	504(%rsp), %rcx         # 8-byte Reload
	sarq	$3, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 496(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2416(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	496(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 488(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 484(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movabsq	$12884901888, %rcx      # imm = 0x300000000
	movq	864(%rsp), %rdx         # 8-byte Reload
	imulq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 472(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1288(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2664(%rsp), %rdx        # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	472(%rsp), %rcx         # 8-byte Reload
	sarq	$32, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 464(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	464(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rcx         # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 456(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	456(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 448(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 444(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	444(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	vmovss	444(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 440(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	496(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 432(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2480(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	432(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2480(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 428(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	456(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 416(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1320(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	416(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 412(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	412(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	vmovss	412(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 408(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	408(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	440(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	440(%rsp), %xmm0        # 4-byte Reload
	vmovss	408(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 404(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	412(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	vmovss	412(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 400(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	444(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	444(%rsp), %xmm0        # 4-byte Reload
	vmovss	428(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 396(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	400(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	396(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	396(%rsp), %xmm0        # 4-byte Reload
	vmovss	400(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp416:
	.loc	2 172 0                 # kiss_fft.c:172:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 392(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1424(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2712(%rsp), %rcx        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rcx         # 8-byte Reload
	sarq	$3, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 376(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	376(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 368(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 364(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	864(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 360(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	360(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	360(%rsp), %eax         # 4-byte Reload
	shll	$2, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 356(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	356(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	356(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 344(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1488(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	3352(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 336(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1536(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1536(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	336(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 328(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 324(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	324(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 320(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3360(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	376(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	3360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 312(%rsp)         # 8-byte Spill
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 308(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1536(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	336(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 296(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	296(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 292(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	vmovss	292(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 288(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	320(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	320(%rsp), %xmm0        # 4-byte Reload
	vmovss	288(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 284(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	292(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 280(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	vmovss	308(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 276(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1616(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	280(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	276(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	276(%rsp), %xmm0        # 4-byte Reload
	vmovss	280(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp417:
	.loc	2 174 0                 # kiss_fft.c:174:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 272(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	284(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 268(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	272(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	vmovss	272(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp418:
	.loc	2 175 0                 # kiss_fft.c:175:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 264(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	284(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 260(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	272(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	vmovss	272(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp419:
	.loc	2 176 0                 # kiss_fft.c:176:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 256(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1688(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	404(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	vmovss	404(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 252(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1688(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	392(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	512(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	512(%rsp), %xmm0        # 4-byte Reload
	vmovss	392(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp420:
	.loc	2 177 0                 # kiss_fft.c:177:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 248(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	404(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	vmovss	404(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 244(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	392(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	512(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	512(%rsp), %xmm0        # 4-byte Reload
	vmovss	392(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp421:
	.loc	2 179 0                 # kiss_fft.c:179:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 240(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1752(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 236(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1752(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	vmovss	236(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 232(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1752(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 180 0                 # kiss_fft.c:180:0
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	264(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	vmovss	264(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 228(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 224(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	vmovss	228(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 220(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	220(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	vmovss	220(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 182 0                 # kiss_fft.c:182:0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 216(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	216(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	vmovss	216(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 212(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 208(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	212(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	208(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	208(%rsp), %xmm0        # 4-byte Reload
	vmovss	212(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 183 0                 # kiss_fft.c:183:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 204(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1872(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	264(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	vmovss	264(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 200(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1872(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	200(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	740(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	740(%rsp), %xmm0        # 4-byte Reload
	vmovss	200(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 196(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1872(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 192(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1872(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	192(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	192(%rsp), %xmm0        # 4-byte Reload
	vmovss	196(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 185 0                 # kiss_fft.c:185:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 188(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1896(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	vmovss	256(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 184(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1896(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2272(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	vmovss	240(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 180(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1896(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	184(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	180(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	180(%rsp), %xmm0        # 4-byte Reload
	vmovss	184(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 186 0                 # kiss_fft.c:186:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 176(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1928(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	vmovss	260(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 172(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1928(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	172(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	vmovsd	824(%rsp), %xmm0        # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	2600(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	172(%rsp), %xmm0        # 4-byte Reload
	vmovd	%xmm0, %eax
	xorl	$2147483648, %eax       # imm = 0x80000000
	vmovd	%eax, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 168(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1928(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2272(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 164(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1928(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	164(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	168(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	168(%rsp), %xmm0        # 4-byte Reload
	vmovss	164(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 188 0                 # kiss_fft.c:188:0
.Ltmp422:
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 160(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1984(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	176(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	204(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	204(%rsp), %xmm0        # 4-byte Reload
	vmovss	176(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 156(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1984(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	1984(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	160(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	vmovss	160(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 152(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1984(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	1976(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1992(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp423:
	.loc	2 189 0                 # kiss_fft.c:189:0
	movq	2072(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	204(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	176(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	176(%rsp), %xmm0        # 4-byte Reload
	vmovss	204(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 148(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2072(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	2072(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2088(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	160(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	vmovss	160(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2088(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 144(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2072(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2064(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	144(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2088(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	vmovss	144(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp424:
	.loc	2 191 0                 # kiss_fft.c:191:0
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2104(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2104(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 140(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2104(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	756(%rsp), %xmm0        # 4-byte Reload
	vmovss	140(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 136(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 132(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	136(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	vmovss	136(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 192 0                 # kiss_fft.c:192:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 128(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2168(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	264(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3180(%rsp), %xmm0       # 4-byte Reload
	vmovss	264(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2168(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 124(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	124(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2168(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	740(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	740(%rsp), %xmm0        # 4-byte Reload
	vmovss	124(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 120(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3228(%rsp), %xmm0       # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 116(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	120(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	vmovss	120(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 193 0                 # kiss_fft.c:193:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 112(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2272(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	vmovss	256(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 108(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2256(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	vmovss	240(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2256(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 104(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2392(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2256(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	vmovss	108(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 194 0                 # kiss_fft.c:194:0
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2392(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2320(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2272(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3164(%rsp), %xmm0       # 4-byte Reload
	vmovss	260(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2320(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	3212(%rsp), %xmm0       # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 92(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2440(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2320(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	92(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 196 0                 # kiss_fft.c:196:0
.Ltmp425:
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2440(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 88(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	128(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2392(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	vmovss	128(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 84(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2328(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2440(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	vmovss	112(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 80(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	552(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp426:
	.loc	2 197 0                 # kiss_fft.c:197:0
	movq	2472(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2424(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2392(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	128(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	128(%rsp), %xmm0        # 4-byte Reload
	vmovss	100(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2424(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 76(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2472(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2408(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2424(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	2472(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2488(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2440(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	vmovss	88(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2488(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 72(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2472(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	432(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2480(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	72(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	2488(%rsp), %rcx        # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	784(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	3360(%rsp), %rcx        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	vmovss	72(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp427:
	.loc	2 199 0                 # kiss_fft.c:199:0
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2504(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	896(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 64(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2504(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp428:
	#DEBUG_VALUE: kf_bfly5:Fout0 <- [RSP+64]
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2520(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2696(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 56(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2520(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp429:
	#DEBUG_VALUE: kf_bfly5:Fout1 <- [RSP+56]
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	880(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2536(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp430:
	#DEBUG_VALUE: kf_bfly5:Fout2 <- [RSP+48]
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2552(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2544(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	872(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp431:
	#DEBUG_VALUE: kf_bfly5:Fout3 <- [RSP+40]
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2560(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2712(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2584(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp432:
	#DEBUG_VALUE: kf_bfly5:Fout4 <- [RSP+32]
	.loc	2 161 0                 # kiss_fft.c:161:0
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	864(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	864(%rsp), %rcx         # 8-byte Reload
	addq	$1, %rcx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2624(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2632(%rsp), %rsi        # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2624(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	24(%rsp), %rcx          # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2656(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	2640(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3628(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	20(%rsp), %eax          # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	2664(%rsp), %rsi        # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2656(%rsp), %r8         # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	20(%rsp), %eax          # 4-byte Reload
	movl	3628(%rsp), %esi        # 4-byte Reload
	cmpl	%esi, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	2672(%rsp), %rdi        # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 19(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	2704(%rsp), %rsi        # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	2680(%rsp), %rcx        # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	792(%rsp), %rsi         # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	19(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	856(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	792(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	19(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	64(%rsp), %rdx          # 8-byte Reload
	movq	56(%rsp), %rsi          # 8-byte Reload
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	%rcx, 2760(%rsp)        # 8-byte Spill
	movq	%rdx, 2752(%rsp)        # 8-byte Spill
	movq	%rsi, 2744(%rsp)        # 8-byte Spill
	movq	%rdi, 2736(%rsp)        # 8-byte Spill
	movq	%r8, 2728(%rsp)         # 8-byte Spill
	movq	%r9, 2720(%rsp)         # 8-byte Spill
	jne	.LBB11_3
	jmp	.LBB11_2
.Ltmp433:
.LBB11_3:                               # %._crit_edge
	movabsq	$201, %rdi
	leaq	.L.str170, %rsi
	leaq	.L.str46157, %rdx
	leaq	.L.str78189, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 201 0                 # kiss_fft.c:201:0
	movl	$1, (%rsp)
	movl	%eax, 12(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$3640, %rsp             # imm = 0xE38
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp434:
.Ltmp435:
	.size	kf_bfly5, .Ltmp435-kf_bfly5
.Lfunc_end11:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_bfly4,@function
kf_bfly4:                               # @kf_bfly4
	.cfi_startproc
.Lfunc_begin12:
	.loc	2 50 0                  # kiss_fft.c:50:0
# BB#0:
	pushq	%rbp
.Ltmp443:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp444:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp445:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp446:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp447:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp448:
	.cfi_def_cfa_offset 56
	subq	$2760, %rsp             # imm = 0xAC8
.Ltmp449:
	.cfi_def_cfa_offset 2816
.Ltmp450:
	.cfi_offset %rbx, -56
.Ltmp451:
	.cfi_offset %r12, -48
.Ltmp452:
	.cfi_offset %r13, -40
.Ltmp453:
	.cfi_offset %r14, -32
.Ltmp454:
	.cfi_offset %r15, -24
.Ltmp455:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str260, %r9
	leaq	.L.str4115, %r10
	movabsq	$60, %r11
	leaq	.L.str166, %rbx
	leaq	.L.str1112, %r14
	leaq	.L.str259, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2752(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 2736(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2728(%rsp)        # 8-byte Spill
	leaq	.L.str14125, %rax
	movq	%rax, 2720(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 2712(%rsp)        # 8-byte Spill
	movabsq	$77, %rax
	movq	%rax, 2704(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2696(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	movabsq	$74, %rax
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 2608(%rsp)        # 8-byte Spill
	movabsq	$73, %rax
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 2592(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 2584(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 2576(%rsp)        # 8-byte Spill
	movabsq	$58, %rax
	movq	%rax, 2568(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 2560(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 2552(%rsp)        # 8-byte Spill
	movabsq	$55, %rax
	movq	%rax, 2544(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 2536(%rsp)        # 8-byte Spill
	movabsq	$54, %rax
	movq	%rax, 2528(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 2520(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	.loc	2 45 0 prologue_end     # kiss_fft.c:45:0
.Ltmp456:
	movq	%rax, 2512(%rsp)        # 8-byte Spill
	movq	2520(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2504(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	2688(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2496(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	2504(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2488(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2480(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2512(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2472(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	2472(%rsp), %rax        # 8-byte Reload
	movq	%r9, 2464(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 2460(%rsp)        # 4-byte Spill
	movq	%r15, 2448(%rsp)        # 8-byte Spill
	movq	%r12, 2440(%rsp)        # 8-byte Spill
	movl	%r13d, 2436(%rsp)       # 4-byte Spill
	movq	%r14, 2424(%rsp)        # 8-byte Spill
	movq	%rbx, 2416(%rsp)        # 8-byte Spill
	movq	%r10, 2408(%rsp)        # 8-byte Spill
	movq	%r11, 2400(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly4:Fout <- [RSP+2504]
	#DEBUG_VALUE: kf_bfly4:fstride <- [RSP+2496]
	#DEBUG_VALUE: kf_bfly4:st <- [RSP+2488]
	#DEBUG_VALUE: kf_bfly4:m <- [RSP+2480]
.Ltmp457:
	#DEBUG_VALUE: kf_bfly4:k <- [RSP+2480]
	.loc	2 54 0                  # kiss_fft.c:54:0
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2536(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp458:
	#DEBUG_VALUE: kf_bfly4:m2 <- [RSP+2392]
	.loc	2 55 0                  # kiss_fft.c:55:0
	movq	2544(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rax        # 8-byte Reload
	imulq	$3, %rax, %rcx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2384(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2560(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp459:
	#DEBUG_VALUE: kf_bfly4:m3 <- [RSP+2384]
	.loc	2 58 0                  # kiss_fft.c:58:0
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2584(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp460:
	#DEBUG_VALUE: kf_bfly4:tw1 <- [RSP+2376]
	#DEBUG_VALUE: kf_bfly4:tw2 <- [RSP+2376]
	#DEBUG_VALUE: kf_bfly4:tw3 <- [RSP+2376]
	.loc	2 73 0                  # kiss_fft.c:73:0
	movq	2600(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2608(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2496(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	.loc	2 74 0                  # kiss_fft.c:74:0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2624(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2640(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2496(%rsp), %rax        # 8-byte Reload
	imulq	$3, %rax, %rcx
	.loc	2 77 0                  # kiss_fft.c:77:0
.Ltmp461:
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2360(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2640(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2680(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2680(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2720(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2352(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2680(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	movl	4(%rax), %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 2348(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2696(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2348(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2348(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	sete	%al
.Ltmp462:
	.loc	2 60 0                  # kiss_fft.c:60:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2752(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2347(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2400(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	2440(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2376(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rsi        # 8-byte Reload
	movq	2376(%rsp), %rdi        # 8-byte Reload
	movq	2504(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2336(%rsp)        # 8-byte Spill
	movq	%rdx, 2328(%rsp)        # 8-byte Spill
	movq	%rsi, 2320(%rsp)        # 8-byte Spill
	movq	%rdi, 2312(%rsp)        # 8-byte Spill
	movq	%r8, 2304(%rsp)         # 8-byte Spill
.Ltmp463:
.LBB12_1:                               # =>This Inner Loop Header: Depth=1
	movq	2304(%rsp), %rax        # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %rdx        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdi        # 8-byte Reload
	movabsq	$1, %r8
	leaq	.L.str16127, %r9
	movabsq	$0, %r10
	leaq	.L.str4115, %r11
	movabsq	$2, %rbx
	leaq	.L.str276, %r14
	movabsq	$3, %r15
	leaq	.L.str275, %r12
	movabsq	$77, %r13
	leaq	.L.str166, %rbp
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str260, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	leaq	.L.str274, %rax
	movq	%rsi, 2280(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 2276(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	leaq	.L.str272, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	leaq	.L.str233, %rax
	movq	%rax, 2232(%rsp)        # 8-byte Spill
	movabsq	$75, %rax
	movq	%rax, 2224(%rsp)        # 8-byte Spill
	leaq	.L.str273, %rax
	movq	%rax, 2216(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2208(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2200(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 2192(%rsp)        # 8-byte Spill
	leaq	.L.str271, %rax
	movq	%rax, 2184(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 2176(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	leaq	.L.str269, %rax
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	leaq	.L.str230, %rax
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str270, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	leaq	.L.str241, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	leaq	.L.str255, %rax
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str261, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	movabsq	$74, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	leaq	.L.str218, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 2064(%rsp)        # 8-byte Spill
	movabsq	$73, %rax
	movq	%rax, 2056(%rsp)        # 8-byte Spill
	leaq	.L.str253, %rax
	movq	%rax, 2048(%rsp)        # 8-byte Spill
	leaq	.L.str207, %rax
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2032(%rsp)        # 8-byte Spill
	movabsq	$72, %rax
	movq	%rax, 2024(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	leaq	.L.str57168, %rax
	movq	%rax, 2008(%rsp)        # 8-byte Spill
	movabsq	$71, %rax
	movq	%rax, 2000(%rsp)        # 8-byte Spill
	leaq	.L.str268, %rax
	movq	%rax, 1992(%rsp)        # 8-byte Spill
	leaq	.L.str250, %rax
	movq	%rax, 1984(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 1960(%rsp)        # 8-byte Spill
	leaq	.L.str267, %rax
	movq	%rax, 1952(%rsp)        # 8-byte Spill
	leaq	.L.str247, %rax
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	movabsq	$70, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str225, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	movabsq	$69, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	movabsq	$68, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str266, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	leaq	.L.str69180, %rax
	movq	%rax, 1848(%rsp)        # 8-byte Spill
	leaq	.L.str238, %rax
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	leaq	.L.str265, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str64175, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	movabsq	$67, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	movabsq	$65, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	leaq	.L.str163, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str168, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str72183, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str172, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str77188, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str67178, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str66177, %rax
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	leaq	.L.str58169, %rax
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str53164, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	leaq	.L.str61172, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str145, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	leaq	.L.str143, %rax
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	movabsq	$63, %rax
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str25136, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	leaq	.L.str110221, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str34145, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str264, %rax
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	leaq	.L.str262, %rax
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str263, %rax
	.loc	2 63 0                  # kiss_fft.c:63:0
.Ltmp464:
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	movq	1400(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1360(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1356(%rsp)        # 4-byte Spill
	movq	%rbp, %rsi
	movq	2288(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1344(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1336(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1392(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1328(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	2276(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1320(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1312(%rsp)        # 8-byte Spill
	movq	%r12, 1304(%rsp)        # 8-byte Spill
	movq	%r13, 1296(%rsp)        # 8-byte Spill
	movq	%rbp, 1288(%rsp)        # 8-byte Spill
	movq	%r14, 1280(%rsp)        # 8-byte Spill
	movq	%rbx, 1272(%rsp)        # 8-byte Spill
	movq	%r10, 1264(%rsp)        # 8-byte Spill
	movq	%r11, 1256(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2072(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1376(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2048(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2504(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2480(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1248(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1244(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1448(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1240(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	vmovss	1240(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1236(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2480(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1224(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1220(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1204(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1204(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	vmovss	1204(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1200(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1200(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1236(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1236(%rsp), %xmm0       # 4-byte Reload
	vmovss	1200(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1196(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1204(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	vmovss	1204(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1192(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	vmovss	1220(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1188(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1192(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1188(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1188(%rsp), %xmm0       # 4-byte Reload
	vmovss	1192(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp465:
	.loc	2 64 0                  # kiss_fft.c:64:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1184(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2392(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1176(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1172(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1552(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1168(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	vmovss	1168(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1164(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2392(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1152(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1148(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1132(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1132(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	vmovss	1132(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1128(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1128(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1164(%rsp), %xmm0       # 4-byte Reload
	vmovss	1128(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1124(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1132(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	vmovss	1132(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1120(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	vmovss	1148(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1116(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1120(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1116(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1116(%rsp), %xmm0       # 4-byte Reload
	vmovss	1120(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp466:
	.loc	2 65 0                  # kiss_fft.c:65:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1112(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2384(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1104(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1100(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1096(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	vmovss	1096(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1092(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2384(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1080(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1076(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1064(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1060(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1060(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	vmovss	1060(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1056(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1056(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1092(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1092(%rsp), %xmm0       # 4-byte Reload
	vmovss	1056(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1052(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1060(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	vmovss	1060(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1048(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	vmovss	1076(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1044(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1048(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1044(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1044(%rsp), %xmm0       # 4-byte Reload
	vmovss	1048(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp467:
	.loc	2 67 0                  # kiss_fft.c:67:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1040(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1036(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	vmovss	1124(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1032(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1020(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1020(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1020(%rsp), %xmm0       # 4-byte Reload
	vmovss	1112(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp468:
	.loc	2 68 0                  # kiss_fft.c:68:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1016(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	vmovss	1036(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1012(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	1012(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	1012(%rsp), %xmm0       # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1008(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1008(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	vmovss	1008(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1004(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	1004(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	1004(%rsp), %xmm0       # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp469:
	.loc	2 69 0                  # kiss_fft.c:69:0
	movq	1880(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1052(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	vmovss	1052(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1000(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1880(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1040(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	vmovss	1040(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp470:
	.loc	2 70 0                  # kiss_fft.c:70:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 996(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1912(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1052(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	vmovss	1052(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 992(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1912(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1040(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	vmovss	1040(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp471:
	.loc	2 71 0                  # kiss_fft.c:71:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 988(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 984(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	984(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	984(%rsp), %xmm0        # 4-byte Reload
	vmovss	1000(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 980(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	980(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	980(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 976(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	976(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	976(%rsp), %xmm0        # 4-byte Reload
	vmovss	996(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 972(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	972(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	972(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp472:
	.loc	2 72 0                  # kiss_fft.c:72:0
	movq	2024(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2496(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1336(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 960(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2048(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp473:
	#DEBUG_VALUE: kf_bfly4:tw1 <- [RSP+960]
	.loc	2 73 0                  # kiss_fft.c:73:0
	movq	2056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2368(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2368(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2280(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 952(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp474:
	#DEBUG_VALUE: kf_bfly4:tw2 <- [RSP+952]
	.loc	2 74 0                  # kiss_fft.c:74:0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2360(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 944(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp475:
	#DEBUG_VALUE: kf_bfly4:tw3 <- [RSP+944]
	.loc	2 75 0                  # kiss_fft.c:75:0
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 940(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	940(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	vmovss	940(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 936(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	936(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	936(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 932(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	932(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	vmovss	932(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 928(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	928(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	928(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp476:
	.loc	2 77 0                  # kiss_fft.c:77:0
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2347(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1328(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2347(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB12_3
.Ltmp477:
# BB#2:                                 #   in Loop: Header=BB12_1 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str262, %r8
	leaq	.L.str4115, %rdx
	movabsq	$82, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str276, %r9
	leaq	.L.str284, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str283, %r12
	leaq	.L.str236, %r13
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$81, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str281, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	movabsq	$80, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str282, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	leaq	.L.str279, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	movabsq	$79, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	leaq	.L.str280, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str277, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$78, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	leaq	.L.str278, %rax
	.loc	2 78 0                  # kiss_fft.c:78:0
.Ltmp478:
	movq	%rax, 760(%rsp)         # 8-byte Spill
	movq	768(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 752(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 744(%rsp)         # 8-byte Spill
	movq	%rdx, 736(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	784(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	896(%rsp), %rax         # 8-byte Reload
	movq	%r8, 720(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 712(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 704(%rsp)         # 8-byte Spill
	movl	%ebp, 700(%rsp)         # 4-byte Spill
	movq	%r15, 688(%rsp)         # 8-byte Spill
	movq	%r13, 680(%rsp)         # 8-byte Spill
	movq	%r12, 672(%rsp)         # 8-byte Spill
	movl	%ebx, 668(%rsp)         # 4-byte Spill
	movq	%r10, 656(%rsp)         # 8-byte Spill
	movq	%r11, 648(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 644(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	776(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1248(%rsp), %rax        # 8-byte Reload
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 79 0                  # kiss_fft.c:79:0
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 640(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rax        # 8-byte Reload
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 80 0                  # kiss_fft.c:80:0
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 636(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1104(%rsp), %rax        # 8-byte Reload
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 81 0                  # kiss_fft.c:81:0
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 82 0                  # kiss_fft.c:82:0
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 632(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	752(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 628(%rsp)        # 4-byte Spill
	jmp	.LBB12_4
.Ltmp479:
.LBB12_3:                               #   in Loop: Header=BB12_1 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str262, %r8
	leaq	.L.str4115, %rdx
	movabsq	$-1, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str275, %r9
	leaq	.L.str292, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str291, %r12
	leaq	.L.str236, %r13
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$86, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	.L.str289, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	movabsq	$85, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str290, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	leaq	.L.str287, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	movabsq	$84, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str288, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str285, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movabsq	$83, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str286, %rax
	.loc	2 83 0                  # kiss_fft.c:83:0
.Ltmp480:
	movq	%rax, 456(%rsp)         # 8-byte Spill
	movq	464(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 448(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 440(%rsp)         # 8-byte Spill
	movq	%rdx, 432(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	480(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 424(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%r8, 416(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 408(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 400(%rsp)         # 8-byte Spill
	movl	%ebp, 396(%rsp)         # 4-byte Spill
	movq	%r15, 384(%rsp)         # 8-byte Spill
	movq	%r13, 376(%rsp)         # 8-byte Spill
	movq	%r12, 368(%rsp)         # 8-byte Spill
	movl	%ebx, 364(%rsp)         # 4-byte Spill
	movq	%r10, 352(%rsp)         # 8-byte Spill
	movq	%r11, 344(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 340(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1248(%rsp), %rax        # 8-byte Reload
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 84 0                  # kiss_fft.c:84:0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 336(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	336(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rax        # 8-byte Reload
	vmovss	336(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 85 0                  # kiss_fft.c:85:0
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 332(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	568(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1104(%rsp), %rax        # 8-byte Reload
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 86 0                  # kiss_fft.c:86:0
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	592(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 328(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	448(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	344(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	424(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	416(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	328(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 628(%rsp)        # 4-byte Spill
.Ltmp481:
.LBB12_4:                               #   in Loop: Header=BB12_1 Depth=1
	vmovss	628(%rsp), %xmm0        # 4-byte Reload
	movabsq	$1, %rax
	leaq	.L.str295, %rcx
	movabsq	$0, %rdx
	leaq	.L.str4115, %rsi
	movabsq	$2, %rdi
	leaq	.L.str260, %r8
	movabsq	$3, %r9
	leaq	.L.str297, %r10
	movabsq	$89, %r11
	leaq	.L.str166, %rbx
	leaq	.L.str262, %r14
	leaq	.L.str296, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 320(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 312(%rsp)         # 8-byte Spill
	leaq	.L.str263, %rax
	movq	%rax, 304(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 296(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 280(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str264, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str185, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	movabsq	$88, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str293, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movabsq	$81, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	.L.str294, %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	.L.str275, %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	.L.str291, %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 160(%rsp)         # 8-byte Spill
	leaq	.L.str276, %rax
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 81 0                  # kiss_fft.c:81:0
.Ltmp482:
	movq	%rax, 144(%rsp)         # 8-byte Spill
	movq	272(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	216(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 112(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	144(%rsp), %rax         # 8-byte Reload
	movq	%r8, 104(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 96(%rsp)           # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	vmovss	%xmm0, 92(%rsp)         # 4-byte Spill
	movq	%r15, 80(%rsp)          # 8-byte Spill
	movl	%ebp, 76(%rsp)          # 4-byte Spill
	movl	%r12d, 72(%rsp)         # 4-byte Spill
	movq	%r13, 64(%rsp)          # 8-byte Spill
	movq	%r14, 56(%rsp)          # 8-byte Spill
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	movq	%r10, 40(%rsp)          # 8-byte Spill
	movq	%r11, 32(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movq	320(%rsp), %r9          # 8-byte Reload
	movq	152(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	320(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	216(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	216(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rax        # 8-byte Reload
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rax)
.Ltmp483:
	.loc	2 88 0                  # kiss_fft.c:88:0
	movq	240(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	256(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp484:
	#DEBUG_VALUE: kf_bfly4:Fout <- [RSP+24]
	.loc	2 89 0                  # kiss_fft.c:89:0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1344(%rsp), %rax        # 8-byte Reload
	addq	$-1, %rax
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 16(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp485:
	#DEBUG_VALUE: kf_bfly4:k <- [RSP+16]
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	16(%rsp), %rdx          # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 15(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	120(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	120(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	16(%rsp), %rsi          # 8-byte Reload
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	%rcx, 2336(%rsp)        # 8-byte Spill
	movq	%rdx, 2328(%rsp)        # 8-byte Spill
	movq	%rsi, 2320(%rsp)        # 8-byte Spill
	movq	%rdi, 2312(%rsp)        # 8-byte Spill
	movq	%r8, 2304(%rsp)         # 8-byte Spill
	jne	.LBB12_5
	jmp	.LBB12_1
.Ltmp486:
.LBB12_5:
	movabsq	$90, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str297, %rdx
	leaq	.L.str298, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 90 0                  # kiss_fft.c:90:0
	movl	$1, (%rsp)
	movl	%eax, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$2760, %rsp             # imm = 0xAC8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp487:
.Ltmp488:
	.size	kf_bfly4, .Ltmp488-kf_bfly4
.Lfunc_end12:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI13_0:
	.quad	4602678819172646912     # double 0.5
	.text
	.align	16, 0x90
	.type	kf_bfly3,@function
kf_bfly3:                               # @kf_bfly3
	.cfi_startproc
.Lfunc_begin13:
	.loc	2 98 0                  # kiss_fft.c:98:0
# BB#0:
	pushq	%rbp
.Ltmp496:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp497:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp498:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp499:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp500:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp501:
	.cfi_def_cfa_offset 56
	subq	$1848, %rsp             # imm = 0x738
.Ltmp502:
	.cfi_def_cfa_offset 1904
.Ltmp503:
	.cfi_offset %rbx, -56
.Ltmp504:
	.cfi_offset %r12, -48
.Ltmp505:
	.cfi_offset %r13, -40
.Ltmp506:
	.cfi_offset %r14, -32
.Ltmp507:
	.cfi_offset %r15, -24
.Ltmp508:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str217, %r9
	leaq	.L.str4115, %r10
	movabsq	$108, %r11
	leaq	.L.str161, %rbx
	leaq	.L.str1112, %r14
	leaq	.L.str216, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	movabsq	$117, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	movabsq	$106, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	movabsq	$104, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	movabsq	$100, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	.loc	2 93 0 prologue_end     # kiss_fft.c:93:0
.Ltmp509:
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1624(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1824(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1616(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	1624(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1608(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1840(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1600(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1632(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1592(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1592(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1584(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 1580(%rsp)        # 4-byte Spill
	movq	%r15, 1568(%rsp)        # 8-byte Spill
	movq	%r12, 1560(%rsp)        # 8-byte Spill
	movl	%r13d, 1556(%rsp)       # 4-byte Spill
	movq	%r14, 1544(%rsp)        # 8-byte Spill
	movq	%rbx, 1536(%rsp)        # 8-byte Spill
	movq	%r10, 1528(%rsp)        # 8-byte Spill
	movq	%r11, 1520(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly3:Fout <- [RSP+1624]
	#DEBUG_VALUE: kf_bfly3:fstride <- [RSP+1616]
	#DEBUG_VALUE: kf_bfly3:st <- [RSP+1608]
	#DEBUG_VALUE: kf_bfly3:m <- [RSP+1600]
.Ltmp510:
	#DEBUG_VALUE: kf_bfly3:k <- [RSP+1600]
	.loc	2 100 0                 # kiss_fft.c:100:0
	movq	1648(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1600(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp511:
	#DEBUG_VALUE: kf_bfly3:m2 <- [RSP+1512]
	.loc	2 104 0                 # kiss_fft.c:104:0
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1680(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1744(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1760(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1504(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 106 0                 # kiss_fft.c:106:0
	cvtss2sd	%xmm0, %xmm1
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1492(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1592(%rsp), %r8         # 8-byte Reload
	movq	1528(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1744(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1760(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp512:
	#DEBUG_VALUE: kf_bfly3:tw2 <- [RSP+1480]
	#DEBUG_VALUE: kf_bfly3:tw1 <- [RSP+1480]
	.loc	2 117 0                 # kiss_fft.c:117:0
	movq	1792(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
.Ltmp513:
	.loc	2 108 0                 # kiss_fft.c:108:0
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1480(%rsp), %rax        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rsi        # 8-byte Reload
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	movq	%rcx, 1456(%rsp)        # 8-byte Spill
	movq	%rdx, 1448(%rsp)        # 8-byte Spill
	movq	%rsi, 1440(%rsp)        # 8-byte Spill
.Ltmp514:
.LBB13_1:                               # =>This Inner Loop Header: Depth=1
	movq	1440(%rsp), %rax        # 8-byte Reload
	movq	1448(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rsi        # 8-byte Reload
	movabsq	$1, %rdi
	leaq	.L.str255, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %r10
	movabsq	$2, %r11
	leaq	.L.str217, %rbx
	movabsq	$3, %r14
	leaq	.L.str257, %r15
	movabsq	$133, %r12
	leaq	.L.str161, %r13
	leaq	.L.str256, %rbp
	movq	%rsi, 1432(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1428(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 1352(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rax
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	movabsq	$132, %rax
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	leaq	.L.str253, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str25136, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	movabsq	$130, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str254, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str250, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$129, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str251, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str247, %rax
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	movabsq	$127, %rax
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str248, %rax
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 1136(%rsp)        # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 1128(%rsp)        # 8-byte Spill
	movabsq	$126, %rax
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str241, %rax
	movq	%rax, 1096(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	movabsq	$124, %rax
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str242, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str69180, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str238, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	leaq	.L.str239, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str67178, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str8119, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str72183, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	movabsq	$122, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str71182, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str233, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	movabsq	$120, %rax
	movq	%rax, 960(%rsp)         # 8-byte Spill
	leaq	.L.str234, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str231, %rax
	vmovsd	.LCPI13_0, %xmm0
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str230, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$41, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str225, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$119, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str226, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str168, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	leaq	.L.str172, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	leaq	.L.str163, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	leaq	.L.str218, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	movabsq	$117, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	leaq	.L.str77188, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str207, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$116, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str66177, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	movabsq	$115, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	leaq	.L.str34145, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	leaq	.L.str61172, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	movabsq	$114, %rax
	movq	%rax, 720(%rsp)         # 8-byte Spill
	leaq	.L.str64175, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	leaq	.L.str145, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	movabsq	$112, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str53164, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	leaq	.L.str58169, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	leaq	.L.str143, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str57168, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$111, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str110221, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str9120, %rax
	.loc	2 111 0                 # kiss_fft.c:111:0
.Ltmp515:
	movq	%rax, 496(%rsp)         # 8-byte Spill
	movq	1360(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 488(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 484(%rsp)         # 4-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 472(%rsp)         # 8-byte Spill
	movq	%rbx, %rdx
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 464(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	504(%rsp), %rax         # 8-byte Reload
	movq	%r8, 456(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	1428(%rsp), %eax        # 4-byte Reload
	movq	%r9, 448(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r12, 440(%rsp)         # 8-byte Spill
	movq	%r13, 432(%rsp)         # 8-byte Spill
	movq	%rbp, 424(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 416(%rsp)        # 8-byte Spill
	movq	%r15, 408(%rsp)         # 8-byte Spill
	movq	%r14, 400(%rsp)         # 8-byte Spill
	movq	%r10, 392(%rsp)         # 8-byte Spill
	movq	%r11, 384(%rsp)         # 8-byte Spill
	movq	%rbx, 376(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	464(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1624(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 368(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 364(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 360(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	360(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 356(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 344(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 340(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 328(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 324(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	vmovss	324(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 320(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	320(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	356(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	356(%rsp), %xmm0        # 4-byte Reload
	vmovss	320(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 316(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	324(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 312(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	vmovss	340(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 308(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	312(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	vmovss	312(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp516:
	.loc	2 112 0                 # kiss_fft.c:112:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 304(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1512(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 296(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	296(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 292(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 288(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	vmovss	288(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 284(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1512(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 272(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 268(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 252(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 248(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 244(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 240(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 236(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	vmovss	240(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp517:
	.loc	2 114 0                 # kiss_fft.c:114:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 232(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 228(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	vmovss	232(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp518:
	.loc	2 115 0                 # kiss_fft.c:115:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 224(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 220(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	vmovss	232(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp519:
	.loc	2 116 0                 # kiss_fft.c:116:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 216(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	776(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	472(%rsp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 208(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp520:
	#DEBUG_VALUE: kf_bfly3:tw1 <- [RSP+208]
	.loc	2 117 0                 # kiss_fft.c:117:0
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	824(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1472(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1432(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 200(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp521:
	#DEBUG_VALUE: kf_bfly3:tw2 <- [RSP+200]
	.loc	2 119 0                 # kiss_fft.c:119:0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 196(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 184(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 176(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	176(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	176(%rsp), %xmm0        # 8-byte Reload
	vmovsd	416(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 168(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	168(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	184(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	184(%rsp), %xmm0        # 8-byte Reload
	vmovsd	168(%rsp), %xmm1        # 8-byte Reload
	vsubsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 160(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	160(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	160(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 156(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 120 0                 # kiss_fft.c:120:0
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 140(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 128(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 120(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	120(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	120(%rsp), %xmm0        # 8-byte Reload
	vmovsd	416(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	112(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	128(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	128(%rsp), %xmm0        # 8-byte Reload
	vmovsd	112(%rsp), %xmm1        # 8-byte Reload
	vsubsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 104(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	104(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	104(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 122 0                 # kiss_fft.c:122:0
.Ltmp522:
	movq	992(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	220(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	vmovss	220(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	992(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	216(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	vmovss	216(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
.Ltmp523:
	.loc	2 124 0                 # kiss_fft.c:124:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 92(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 88(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	vmovss	228(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 84(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 80(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	vmovss	80(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 76(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp524:
	.loc	2 126 0                 # kiss_fft.c:126:0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 72(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	72(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	vmovss	72(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 68(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	296(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 127 0                 # kiss_fft.c:127:0
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 64(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	vmovss	96(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 60(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 129 0                 # kiss_fft.c:129:0
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 56(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	vmovss	92(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 52(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 130 0                 # kiss_fft.c:130:0
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 48(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	48(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 44(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	44(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	44(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 132 0                 # kiss_fft.c:132:0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp525:
	#DEBUG_VALUE: kf_bfly3:Fout <- [RSP+32]
	.loc	2 133 0                 # kiss_fft.c:133:0
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	464(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rcx         # 8-byte Reload
	addq	$-1, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp526:
	#DEBUG_VALUE: kf_bfly3:k <- [RSP+24]
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	24(%rsp), %rcx          # 8-byte Reload
	cmpq	$0, %rcx
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	488(%rsp), %rsi         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 23(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	424(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	408(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	23(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	488(%rsp), %rsi         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	23(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	200(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	%rcx, 1464(%rsp)        # 8-byte Spill
	movq	%rdx, 1456(%rsp)        # 8-byte Spill
	movq	%rsi, 1448(%rsp)        # 8-byte Spill
	movq	%rdi, 1440(%rsp)        # 8-byte Spill
	jne	.LBB13_2
	jmp	.LBB13_1
.Ltmp527:
.LBB13_2:
	movabsq	$134, %rdi
	leaq	.L.str161, %rsi
	leaq	.L.str257, %rdx
	leaq	.L.str258, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 134 0                 # kiss_fft.c:134:0
	movl	$1, (%rsp)
	movl	%eax, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$1848, %rsp             # imm = 0x738
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp528:
.Ltmp529:
	.size	kf_bfly3, .Ltmp529-kf_bfly3
.Lfunc_end13:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_bfly2,@function
kf_bfly2:                               # @kf_bfly2
	.cfi_startproc
.Lfunc_begin14:
	.loc	2 27 0                  # kiss_fft.c:27:0
# BB#0:
	pushq	%rbp
.Ltmp537:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp538:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp539:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp540:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp541:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp542:
	.cfi_def_cfa_offset 56
	subq	$1096, %rsp             # imm = 0x448
.Ltmp543:
	.cfi_def_cfa_offset 1152
.Ltmp544:
	.cfi_offset %rbx, -56
.Ltmp545:
	.cfi_offset %r12, -48
.Ltmp546:
	.cfi_offset %r13, -40
.Ltmp547:
	.cfi_offset %r14, -32
.Ltmp548:
	.cfi_offset %r15, -24
.Ltmp549:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str205, %r9
	leaq	.L.str4115, %r10
	movabsq	$32, %r11
	leaq	.L.str157, %rbx
	leaq	.L.str1112, %r14
	leaq	.L.str204, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str7118, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str6117, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	movabsq	$31, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 968(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 22 0 prologue_end     # kiss_fft.c:22:0
.Ltmp550:
	movq	%rax, 960(%rsp)         # 8-byte Spill
	movq	968(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 952(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	1072(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 944(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	952(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 936(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	1088(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 932(%rsp)         # 4-byte Spill
	movq	%rax, %rcx
	movq	1056(%rsp), %rax        # 8-byte Reload
	movq	%r8, 920(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	920(%rsp), %rax         # 8-byte Reload
	movq	%r9, 912(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 908(%rsp)         # 4-byte Spill
	movq	%r15, 896(%rsp)         # 8-byte Spill
	movq	%r12, 888(%rsp)         # 8-byte Spill
	movl	%r13d, 884(%rsp)        # 4-byte Spill
	movq	%r14, 872(%rsp)         # 8-byte Spill
	movq	%rbx, 864(%rsp)         # 8-byte Spill
	movq	%r10, 856(%rsp)         # 8-byte Spill
	movq	%r11, 848(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	936(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	932(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly2:Fout <- [RSP+952]
	#DEBUG_VALUE: kf_bfly2:fstride <- [RSP+944]
	#DEBUG_VALUE: kf_bfly2:st <- [RSP+936]
	#DEBUG_VALUE: kf_bfly2:m <- [RSP+932]
	.loc	2 29 0                  # kiss_fft.c:29:0
	movq	1032(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	936(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rax         # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 840(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp551:
	#DEBUG_VALUE: kf_bfly2:tw1 <- [RSP+840]
	.loc	2 31 0                  # kiss_fft.c:31:0
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	932(%rsp), %r9d         # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	932(%rsp), %ebp         # 4-byte Reload
	movslq	%ebp, %rax
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 832(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	832(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	832(%rsp), %rax         # 8-byte Reload
	shlq	$3, %rax
	movq	952(%rsp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1088(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 824(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	1064(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp552:
	#DEBUG_VALUE: kf_bfly2:Fout2 <- [RSP+824]
	.loc	2 32 0                  # kiss_fft.c:32:0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	920(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movl	932(%rsp), %ebp         # 4-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	%rax, 816(%rsp)         # 8-byte Spill
	movq	%rcx, 808(%rsp)         # 8-byte Spill
	movl	%ebp, 804(%rsp)         # 4-byte Spill
	movq	%rdx, 792(%rsp)         # 8-byte Spill
.Ltmp553:
.LBB14_1:                               # =>This Inner Loop Header: Depth=1
	movq	792(%rsp), %rax         # 8-byte Reload
	movl	804(%rsp), %ecx         # 4-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rsi         # 8-byte Reload
	movabsq	$1, %rdi
	leaq	.L.str145, %r8
	movabsq	$0, %r9
	leaq	.L.str4115, %r10
	movabsq	$2, %r11
	leaq	.L.str205, %rbx
	movabsq	$3, %r14
	leaq	.L.str214, %r15
	movabsq	$41, %r12
	leaq	.L.str157, %r13
	leaq	.L.str213, %rbp
	movl	%ecx, 788(%rsp)         # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 784(%rsp)         # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str61172, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	leaq	.L.str3114, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	leaq	.L.str208, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 720(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	leaq	.L.str143, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str185, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	leaq	.L.str58169, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str206, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	movabsq	$39, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str57168, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	leaq	.L.str47158, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	movabsq	$38, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	leaq	.L.str212, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	leaq	.L.str34145, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str56167, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str55166, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str38149, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str211, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str28139, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str54165, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str53164, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str19130, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	movabsq	$37, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str210, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str137, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str43154, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	leaq	.L.str9120, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	leaq	.L.str209, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str40151, %rax
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str207, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	movabsq	$36, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 416(%rsp)         # 8-byte Spill
	leaq	.L.str110221, %rax
	movq	%rax, 408(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 400(%rsp)         # 8-byte Spill
	leaq	.L.str16127, %rax
	movq	%rax, 392(%rsp)         # 8-byte Spill
	leaq	.L.str105216, %rax
	movq	%rax, 384(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 376(%rsp)         # 8-byte Spill
	leaq	.L.str125, %rax
	movq	%rax, 368(%rsp)         # 8-byte Spill
	leaq	.L.str25136, %rax
	movq	%rax, 360(%rsp)         # 8-byte Spill
	leaq	.L.str104215, %rax
	movq	%rax, 352(%rsp)         # 8-byte Spill
	leaq	.L.str107218, %rax
	movq	%rax, 344(%rsp)         # 8-byte Spill
	leaq	.L.str24135, %rax
	movq	%rax, 336(%rsp)         # 8-byte Spill
	leaq	.L.str14125, %rax
	movq	%rax, 328(%rsp)         # 8-byte Spill
	leaq	.L.str1112, %rax
	movq	%rax, 320(%rsp)         # 8-byte Spill
	leaq	.L.str122, %rax
	movq	%rax, 312(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 304(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 296(%rsp)         # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	leaq	.L.str2113, %rax
	movq	%rax, 280(%rsp)         # 8-byte Spill
	leaq	.L.str7118, %rax
	.loc	2 35 0                  # kiss_fft.c:35:0
.Ltmp554:
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movq	304(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 264(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 256(%rsp)         # 8-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 248(%rsp)         # 8-byte Spill
	movq	%rbx, %rdx
	movq	656(%rsp), %rax         # 8-byte Reload
	movl	%ecx, 244(%rsp)         # 4-byte Spill
	movq	%rax, %rcx
	movq	296(%rsp), %rax         # 8-byte Reload
	movq	%r8, 232(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	784(%rsp), %eax         # 4-byte Reload
	movq	%r9, 224(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 216(%rsp)         # 8-byte Spill
	movq	%r12, 208(%rsp)         # 8-byte Spill
	movq	%r13, 200(%rsp)         # 8-byte Spill
	movq	%rbp, 192(%rsp)         # 8-byte Spill
	movq	%r14, 184(%rsp)         # 8-byte Spill
	movq	%rbx, 176(%rsp)         # 8-byte Spill
	movq	%r10, 168(%rsp)         # 8-byte Spill
	movq	%r11, 160(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	272(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	440(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	932(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 156(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	328(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 152(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	152(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 148(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 136(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 132(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 120(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 116(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	vmovss	116(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 112(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	vmovss	112(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 108(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	116(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 104(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	vmovss	132(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	vmovss	104(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp555:
	.loc	2 36 0                  # kiss_fft.c:36:0
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	944(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	248(%rsp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rdx, 88(%rsp)          # 8-byte Spill
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp556:
	#DEBUG_VALUE: kf_bfly2:tw1 <- [RSP+88]
	.loc	2 37 0                  # kiss_fft.c:37:0
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 84(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	108(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 80(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	464(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 68(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	vmovss	96(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 64(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp557:
	.loc	2 38 0                  # kiss_fft.c:38:0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 60(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	vmovss	60(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 56(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 52(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	52(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 48(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp558:
	.loc	2 39 0                  # kiss_fft.c:39:0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp559:
	#DEBUG_VALUE: kf_bfly2:Fout2 <- [RSP+40]
	.loc	2 40 0                  # kiss_fft.c:40:0
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	696(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp560:
	#DEBUG_VALUE: kf_bfly2:Fout <- [RSP+32]
	.loc	2 41 0                  # kiss_fft.c:41:0
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, %esi
	movl	%esi, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 28(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp561:
	#DEBUG_VALUE: kf_bfly2:m <- [RSP+28]
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	232(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 27(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movl	28(%rsp), %eax          # 4-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movl	%eax, 804(%rsp)         # 4-byte Spill
	movq	%rcx, 816(%rsp)         # 8-byte Spill
	movq	%rdx, 808(%rsp)         # 8-byte Spill
	movq	%rsi, 792(%rsp)         # 8-byte Spill
	jne	.LBB14_2
	jmp	.LBB14_1
.Ltmp562:
.LBB14_2:
	movabsq	$42, %rdi
	leaq	.L.str157, %rsi
	leaq	.L.str214, %rdx
	leaq	.L.str215, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 42 0                  # kiss_fft.c:42:0
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$1096, %rsp             # imm = 0x448
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp563:
.Ltmp564:
	.size	kf_bfly2, .Ltmp564-kf_bfly2
.Lfunc_end14:
	.cfi_endproc

	.globl	trace_logger_write_labelmap
	.align	16, 0x90
	.type	trace_logger_write_labelmap,@function
trace_logger_write_labelmap:            # @trace_logger_write_labelmap
	.cfi_startproc
# BB#0:
	subq	$24, %rsp
.Ltmp566:
	.cfi_def_cfa_offset 32
	cmpb	$0, initp
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movq	%rsi, 8(%rsp)           # 8-byte Spill
	jne	.LBB15_2
# BB#1:
	callq	trace_logger_init
.LBB15_2:
	movq	full_trace_file(%rip), %rdi
	movl	$.L.str439, %eax
	movl	%eax, %esi
	movl	$26, %edx
	callq	gzwrite
	movq	full_trace_file(%rip), %rdi
	movq	8(%rsp), %rsi           # 8-byte Reload
	movl	%esi, %edx
	movq	16(%rsp), %rsi          # 8-byte Reload
	movl	%eax, 4(%rsp)           # 4-byte Spill
	callq	gzwrite
	movq	full_trace_file(%rip), %rdi
	movl	$.L.str1440, %edx
	movl	%edx, %esi
	movl	$25, %edx
	movl	%eax, (%rsp)            # 4-byte Spill
	addq	$24, %rsp
	jmp	gzwrite                 # TAILCALL
.Ltmp567:
	.size	trace_logger_write_labelmap, .Ltmp567-trace_logger_write_labelmap
	.cfi_endproc

	.globl	trace_logger_init
	.align	16, 0x90
	.type	trace_logger_init,@function
trace_logger_init:                      # @trace_logger_init
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp569:
	.cfi_def_cfa_offset 16
	movl	$.L.str2441, %eax
	movl	%eax, %edi
	movl	$.L.str3442, %eax
	movl	%eax, %esi
	callq	gzopen
	movq	%rax, full_trace_file
	cmpq	$0, %rax
	jne	.LBB16_2
# BB#1:
	movl	$.L.str4443, %eax
	movl	%eax, %edi
	callq	perror
	movl	$-1, %edi
	callq	exit
.LBB16_2:
	movl	$512, %eax              # imm = 0x200
	movl	%eax, %edi
	movl	$1, %eax
	movl	%eax, %esi
	callq	calloc
	movq	%rax, current_toplevel_function
	movl	$2, current_logging_status
	movl	$trace_logger_fin, %ecx
	movl	%ecx, %edi
	callq	atexit
	movb	$1, initp
	movl	%eax, 4(%rsp)           # 4-byte Spill
	popq	%rax
	ret
.Ltmp570:
	.size	trace_logger_init, .Ltmp570-trace_logger_init
	.cfi_endproc

	.globl	trace_logger_fin
	.align	16, 0x90
	.type	trace_logger_fin,@function
trace_logger_fin:                       # @trace_logger_fin
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp572:
	.cfi_def_cfa_offset 16
	movq	current_toplevel_function(%rip), %rdi
	callq	free
	movq	full_trace_file(%rip), %rdi
	popq	%rax
	jmp	gzclose                 # TAILCALL
.Ltmp573:
	.size	trace_logger_fin, .Ltmp573-trace_logger_fin
	.cfi_endproc

	.globl	log_or_not
	.align	16, 0x90
	.type	log_or_not,@function
log_or_not:                             # @log_or_not
	.cfi_startproc
# BB#0:
	subq	$40, %rsp
.Ltmp575:
	.cfi_def_cfa_offset 48
	movb	%sil, %al
	movb	%dil, %r8b
	testb	$1, %r8b
	movl	%edx, 36(%rsp)          # 4-byte Spill
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movb	%al, 23(%rsp)           # 1-byte Spill
	jne	.LBB18_2
	jmp	.LBB18_1
.LBB18_1:
	movl	$1, %eax
	movl	$2, %ecx
	movb	23(%rsp), %dl           # 1-byte Reload
	testb	%dl, %dl
	cmovel	%ecx, %eax
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jmp	.LBB18_9
.LBB18_2:
	movb	23(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	jne	.LBB18_4
	jmp	.LBB18_3
.LBB18_3:
	movl	current_logging_status, %eax
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jmp	.LBB18_9
.LBB18_4:
	movl	$1, %eax
	movl	36(%rsp), %ecx          # 4-byte Reload
	cmpl	$1, %ecx
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jne	.LBB18_9
# BB#5:
	movq	current_toplevel_function, %rax
	cmpb	$0, (%rax)
	movq	%rax, 8(%rsp)           # 8-byte Spill
	jne	.LBB18_7
# BB#6:
	movl	$.L.str5444, %eax
	movl	%eax, %edi
	movl	$.L.str6445, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.log_or_not, %eax
	movl	%eax, %ecx
	movl	$118, %edx
	callq	__assert_fail
.LBB18_7:
	movl	$0, %eax
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	8(%rsp), %rsi           # 8-byte Reload
	movl	%eax, 4(%rsp)           # 4-byte Spill
	callq	strcmp
	cmpl	$0, %eax
	movl	4(%rsp), %eax           # 4-byte Reload
	movl	%eax, 16(%rsp)          # 4-byte Spill
	je	.LBB18_9
# BB#8:
	movl	$.L.str7446, %eax
	movl	%eax, %edi
	movl	$.L.str6445, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.log_or_not, %eax
	movl	%eax, %ecx
	movl	$123, %edx
	callq	__assert_fail
.LBB18_9:
	movl	16(%rsp), %eax          # 4-byte Reload
	addq	$40, %rsp
	ret
.Ltmp576:
	.size	log_or_not, .Ltmp576-log_or_not
	.cfi_endproc

	.globl	convert_bytes_to_hex
	.align	16, 0x90
	.type	convert_bytes_to_hex,@function
convert_bytes_to_hex:                   # @convert_bytes_to_hex
	.cfi_startproc
# BB#0:
	subq	$56, %rsp
.Ltmp578:
	.cfi_def_cfa_offset 64
	movabsq	$0, %rax
	movw	.L.str8447, %cx
	movw	%cx, (%rdi)
	movb	.L.str8447+2, %r8b
	movb	%r8b, 2(%rdi)
	addq	$2, %rdi
	cmpl	$0, %edx
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%rax, 40(%rsp)          # 8-byte Spill
	movl	%edx, 36(%rsp)          # 4-byte Spill
	movq	%rdi, 24(%rsp)          # 8-byte Spill
	jle	.LBB19_2
.LBB19_1:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	48(%rsp), %rdx          # 8-byte Reload
	movzbl	(%rdx,%rcx), %edx
	movl	$.L.str9448, %esi
                                        # kill: RSI<def> ESI<kill>
	xorl	%edi, %edi
	movb	%dil, %r8b
	movq	%rax, %rdi
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movb	%r8b, %al
	movq	%rcx, 8(%rsp)           # 8-byte Spill
	callq	sprintf
	movslq	%eax, %rcx
	movq	16(%rsp), %rsi          # 8-byte Reload
	addq	%rcx, %rsi
	movq	8(%rsp), %rcx           # 8-byte Reload
	addq	$1, %rcx
	movl	%ecx, %eax
	movl	36(%rsp), %edx          # 4-byte Reload
	cmpl	%edx, %eax
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%rsi, 24(%rsp)          # 8-byte Spill
	jne	.LBB19_1
.LBB19_2:                               # %._crit_edge
	movq	24(%rsp), %rax          # 8-byte Reload
	movb	$0, (%rax)
	addq	$56, %rsp
	ret
.Ltmp579:
	.size	convert_bytes_to_hex, .Ltmp579-convert_bytes_to_hex
	.cfi_endproc

	.globl	update_logging_status
	.align	16, 0x90
	.type	update_logging_status,@function
update_logging_status:                  # @update_logging_status
	.cfi_startproc
# BB#0:
	subq	$56, %rsp
.Ltmp581:
	.cfi_def_cfa_offset 64
	movb	%cl, %al
	movb	%dl, %r8b
	movl	current_logging_status, %ecx
	cmpl	$0, %ecx
	movl	%esi, 52(%rsp)          # 4-byte Spill
	movb	%al, 51(%rsp)           # 1-byte Spill
	movb	%r8b, 50(%rsp)          # 1-byte Spill
	movq	%rdi, 40(%rsp)          # 8-byte Spill
	movl	%ecx, 36(%rsp)          # 4-byte Spill
	jne	.LBB20_2
# BB#1:
	movl	inst_count, %esi
	movl	$.L.str10449, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movb	%al, %cl
	movb	%cl, %al
	callq	printf
	movl	$2, current_logging_status
	movl	%eax, 32(%rsp)          # 4-byte Spill
	jmp	.LBB20_8
.LBB20_2:
	movb	51(%rsp), %al           # 1-byte Reload
	movzbl	%al, %ecx
	andl	$1, %ecx
	movb	50(%rsp), %dl           # 1-byte Reload
	movzbl	%dl, %esi
	andl	$1, %esi
	movl	%ecx, %edi
	movl	52(%rsp), %edx          # 4-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	callq	log_or_not
	movl	%eax, current_logging_status
	movl	36(%rsp), %edx          # 4-byte Reload
	cmpl	$2, %edx
	setne	%r8b
	cmpl	%edx, %eax
	sete	%r9b
	orb	%r9b, %r8b
	testb	$1, %r8b
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jne	.LBB20_4
# BB#3:
	movl	inst_count, %esi
	movl	$.L.str11450, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movb	%al, %cl
	movb	%cl, %al
	callq	printf
	movl	current_logging_status, %esi
	movl	%eax, 24(%rsp)          # 4-byte Spill
	movl	%esi, 28(%rsp)          # 4-byte Spill
.LBB20_4:
	movl	28(%rsp), %eax          # 4-byte Reload
	movq	current_toplevel_function, %rcx
	cmpb	$0, (%rcx)
	sete	%dl
	cmpl	$1, %eax
	sete	%sil
	andb	%sil, %dl
	testb	$1, %dl
	movl	%eax, 20(%rsp)          # 4-byte Spill
	movq	%rcx, 8(%rsp)           # 8-byte Spill
	jne	.LBB20_5
	jmp	.LBB20_6
.LBB20_5:
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	40(%rsp), %rsi          # 8-byte Reload
	callq	strcpy
	movq	%rax, (%rsp)            # 8-byte Spill
	jmp	.LBB20_8
.LBB20_6:
	movl	20(%rsp), %eax          # 4-byte Reload
	cmpl	$0, %eax
	jne	.LBB20_8
# BB#7:
	movl	$0, %esi
	movabsq	$512, %rdx              # imm = 0x200
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	memset
.LBB20_8:
	addq	$56, %rsp
	ret
.Ltmp582:
	.size	update_logging_status, .Ltmp582-update_logging_status
	.cfi_endproc

	.globl	do_not_log
	.align	16, 0x90
	.type	do_not_log,@function
do_not_log:                             # @do_not_log
	.cfi_startproc
# BB#0:
	cmpl	$2, current_logging_status
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	ret
.Ltmp583:
	.size	do_not_log, .Ltmp583-do_not_log
	.cfi_endproc

	.globl	trace_logger_log_entry
	.align	16, 0x90
	.type	trace_logger_log_entry,@function
trace_logger_log_entry:                 # @trace_logger_log_entry
	.cfi_startproc
# BB#0:
	subq	$24, %rsp
.Ltmp585:
	.cfi_def_cfa_offset 32
	cmpb	$0, initp
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movl	%esi, 12(%rsp)          # 4-byte Spill
	jne	.LBB22_2
# BB#1:
	callq	trace_logger_init
.LBB22_2:
	xorl	%esi, %esi
	movl	$1, %eax
	movq	16(%rsp), %rdi          # 8-byte Reload
	movl	%eax, %edx
	movl	%eax, %ecx
	callq	update_logging_status
	cmpl	$2, current_logging_status
	je	.LBB22_4
# BB#3:
	movq	full_trace_file, %rdi
	movl	$.L.str12451, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdx          # 8-byte Reload
	movl	12(%rsp), %eax          # 4-byte Reload
	movb	%cl, 11(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movb	11(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 4(%rsp)           # 4-byte Spill
.LBB22_4:
	addq	$24, %rsp
	ret
.Ltmp586:
	.size	trace_logger_log_entry, .Ltmp586-trace_logger_log_entry
	.cfi_endproc

	.globl	trace_logger_log0
	.align	16, 0x90
	.type	trace_logger_log0,@function
trace_logger_log0:                      # @trace_logger_log0
	.cfi_startproc
# BB#0:
	subq	$72, %rsp
.Ltmp588:
	.cfi_def_cfa_offset 80
	movb	%r9b, %al
	movb	80(%rsp), %r10b
	cmpb	$0, initp
	movq	%rsi, 64(%rsp)          # 8-byte Spill
	movb	%r10b, 63(%rsp)         # 1-byte Spill
	movl	%r8d, 56(%rsp)          # 4-byte Spill
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%rdx, 40(%rsp)          # 8-byte Spill
	movb	%al, 39(%rsp)           # 1-byte Spill
	movl	%edi, 32(%rsp)          # 4-byte Spill
	jne	.LBB23_2
# BB#1:
	callq	trace_logger_init
.LBB23_2:
	movb	39(%rsp), %al           # 1-byte Reload
	movzbl	%al, %ecx
	andl	$1, %ecx
	movb	63(%rsp), %dl           # 1-byte Reload
	movzbl	%dl, %esi
	andl	$1, %esi
	movq	64(%rsp), %rdi          # 8-byte Reload
	movl	56(%rsp), %r8d          # 4-byte Reload
	movl	%esi, 28(%rsp)          # 4-byte Spill
	movl	%r8d, %esi
	movl	%ecx, %edx
	movl	28(%rsp), %ecx          # 4-byte Reload
	callq	update_logging_status
	cmpl	$2, current_logging_status
	je	.LBB23_4
# BB#3:
	movq	full_trace_file, %rdi
	movl	inst_count, %eax
	movq	%rsp, %rcx
	movl	%eax, 8(%rcx)
	movl	56(%rsp), %eax          # 4-byte Reload
	movl	%eax, (%rcx)
	movl	$.L.str13452, %edx
	movl	%edx, %esi
	xorl	%edx, %edx
	movb	%dl, %r8b
	movl	32(%rsp), %edx          # 4-byte Reload
	movq	64(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movb	%r8b, 27(%rsp)          # 1-byte Spill
	movq	%r9, %r8
	movq	48(%rsp), %r9           # 8-byte Reload
	movb	27(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	inst_count, %edx
	addl	$1, %edx
	movl	%edx, inst_count
	movl	%eax, 20(%rsp)          # 4-byte Spill
.LBB23_4:
	addq	$72, %rsp
	ret
.Ltmp589:
	.size	trace_logger_log0, .Ltmp589-trace_logger_log0
	.cfi_endproc

	.globl	trace_logger_log_int
	.align	16, 0x90
	.type	trace_logger_log_int,@function
trace_logger_log_int:                   # @trace_logger_log_int
	.cfi_startproc
# BB#0:
	subq	$120, %rsp
.Ltmp591:
	.cfi_def_cfa_offset 128
	movq	128(%rsp), %rax
	cmpb	$0, initp
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	%r9d, 108(%rsp)         # 4-byte Spill
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movl	%ecx, 92(%rsp)          # 4-byte Spill
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movl	%esi, 76(%rsp)          # 4-byte Spill
	movl	%edi, 72(%rsp)          # 4-byte Spill
	jne	.LBB24_2
# BB#1:
	movl	$.L.str14453, %eax
	movl	%eax, %edi
	movl	$.L.str6445, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_int, %eax
	movl	%eax, %ecx
	movl	$204, %edx
	callq	__assert_fail
.LBB24_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB24_14
# BB#3:
	movl	72(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB24_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str15454, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 71(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	71(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 64(%rsp)          # 4-byte Spill
	jmp	.LBB24_8
.LBB24_5:
	movq	full_trace_file, %rax
	movl	72(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 56(%rsp)          # 8-byte Spill
	jne	.LBB24_7
# BB#6:
	movl	$.L.str16455, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 55(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	55(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB24_8
.LBB24_7:
	movl	$.L.str17456, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	72(%rsp), %edx          # 4-byte Reload
	movl	76(%rsp), %eax          # 4-byte Reload
	movb	%cl, 47(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movq	80(%rsp), %r8           # 8-byte Reload
	movl	92(%rsp), %r9d          # 4-byte Reload
	movb	47(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 40(%rsp)          # 4-byte Spill
.LBB24_8:
	movq	full_trace_file, %rax
	movl	92(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 32(%rsp)          # 8-byte Spill
	je	.LBB24_10
# BB#9:
	movl	$.L.str18457, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jmp	.LBB24_11
.LBB24_10:
	movl	$.L.str19458, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 24(%rsp)          # 4-byte Spill
.LBB24_11:
	movq	full_trace_file, %rax
	movl	108(%rsp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 16(%rsp)          # 8-byte Spill
	je	.LBB24_13
# BB#12:
	movl	$.L.str20459, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 12(%rsp)          # 4-byte Spill
	jmp	.LBB24_14
.LBB24_13:
	movl	$.L.str21460, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 8(%rsp)           # 4-byte Spill
.LBB24_14:
	addq	$120, %rsp
	ret
.Ltmp592:
	.size	trace_logger_log_int, .Ltmp592-trace_logger_log_int
	.cfi_endproc

	.globl	trace_logger_log_ptr
	.align	16, 0x90
	.type	trace_logger_log_ptr,@function
trace_logger_log_ptr:                   # @trace_logger_log_ptr
	.cfi_startproc
# BB#0:
	subq	$120, %rsp
.Ltmp594:
	.cfi_def_cfa_offset 128
	movq	128(%rsp), %rax
	cmpb	$0, initp
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	%r9d, 108(%rsp)         # 4-byte Spill
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movl	%ecx, 92(%rsp)          # 4-byte Spill
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movl	%esi, 76(%rsp)          # 4-byte Spill
	movl	%edi, 72(%rsp)          # 4-byte Spill
	jne	.LBB25_2
# BB#1:
	movl	$.L.str14453, %eax
	movl	%eax, %edi
	movl	$.L.str6445, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_ptr, %eax
	movl	%eax, %ecx
	movl	$225, %edx
	callq	__assert_fail
.LBB25_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB25_14
# BB#3:
	movl	72(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB25_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str22461, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 71(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	71(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 64(%rsp)          # 4-byte Spill
	jmp	.LBB25_8
.LBB25_5:
	movq	full_trace_file, %rax
	movl	72(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 56(%rsp)          # 8-byte Spill
	jne	.LBB25_7
# BB#6:
	movl	$.L.str23462, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 55(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	55(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB25_8
.LBB25_7:
	movl	$.L.str24463, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	72(%rsp), %edx          # 4-byte Reload
	movl	76(%rsp), %eax          # 4-byte Reload
	movb	%cl, 47(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movq	80(%rsp), %r8           # 8-byte Reload
	movl	92(%rsp), %r9d          # 4-byte Reload
	movb	47(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 40(%rsp)          # 4-byte Spill
.LBB25_8:
	movq	full_trace_file, %rax
	movl	92(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 32(%rsp)          # 8-byte Spill
	je	.LBB25_10
# BB#9:
	movl	$.L.str18457, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jmp	.LBB25_11
.LBB25_10:
	movl	$.L.str19458, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 24(%rsp)          # 4-byte Spill
.LBB25_11:
	movq	full_trace_file, %rax
	movl	108(%rsp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 16(%rsp)          # 8-byte Spill
	je	.LBB25_13
# BB#12:
	movl	$.L.str20459, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 12(%rsp)          # 4-byte Spill
	jmp	.LBB25_14
.LBB25_13:
	movl	$.L.str21460, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 8(%rsp)           # 4-byte Spill
.LBB25_14:
	addq	$120, %rsp
	ret
.Ltmp595:
	.size	trace_logger_log_ptr, .Ltmp595-trace_logger_log_ptr
	.cfi_endproc

	.globl	trace_logger_log_double
	.align	16, 0x90
	.type	trace_logger_log_double,@function
trace_logger_log_double:                # @trace_logger_log_double
	.cfi_startproc
# BB#0:
	subq	$104, %rsp
.Ltmp597:
	.cfi_def_cfa_offset 112
	cmpb	$0, initp
	movl	%esi, 100(%rsp)         # 4-byte Spill
	movq	%r9, 88(%rsp)           # 8-byte Spill
	movl	%r8d, 84(%rsp)          # 4-byte Spill
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movl	%edx, 68(%rsp)          # 4-byte Spill
	vmovsd	%xmm0, 56(%rsp)         # 8-byte Spill
	movl	%edi, 52(%rsp)          # 4-byte Spill
	jne	.LBB26_2
# BB#1:
	movl	$.L.str14453, %eax
	movl	%eax, %edi
	movl	$.L.str6445, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_double, %eax
	movl	%eax, %ecx
	movl	$246, %edx
	callq	__assert_fail
.LBB26_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB26_14
# BB#3:
	movl	52(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB26_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str25464, %eax
	movl	%eax, %esi
	movb	$1, %al
	movl	100(%rsp), %edx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %ecx          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB26_8
.LBB26_5:
	movq	full_trace_file, %rax
	movl	52(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 40(%rsp)          # 8-byte Spill
	jne	.LBB26_7
# BB#6:
	movl	$.L.str26465, %eax
	movl	%eax, %esi
	movb	$1, %al
	movq	40(%rsp), %rdi          # 8-byte Reload
	movl	100(%rsp), %edx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %ecx          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 36(%rsp)          # 4-byte Spill
	jmp	.LBB26_8
.LBB26_7:
	movl	$.L.str27466, %eax
	movl	%eax, %esi
	movb	$1, %al
	movq	40(%rsp), %rdi          # 8-byte Reload
	movl	52(%rsp), %edx          # 4-byte Reload
	movl	100(%rsp), %ecx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %r8d          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 32(%rsp)          # 4-byte Spill
.LBB26_8:
	movq	full_trace_file, %rax
	movl	68(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 24(%rsp)          # 8-byte Spill
	je	.LBB26_10
# BB#9:
	movl	$.L.str18457, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 20(%rsp)          # 4-byte Spill
	jmp	.LBB26_11
.LBB26_10:
	movl	$.L.str19458, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	24(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 16(%rsp)          # 4-byte Spill
.LBB26_11:
	movq	full_trace_file, %rax
	movl	84(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 8(%rsp)           # 8-byte Spill
	je	.LBB26_13
# BB#12:
	movl	$.L.str20459, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 4(%rsp)           # 4-byte Spill
	jmp	.LBB26_14
.LBB26_13:
	movl	$.L.str21460, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	8(%rsp), %rdi           # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, (%rsp)            # 4-byte Spill
.LBB26_14:
	addq	$104, %rsp
	ret
.Ltmp598:
	.size	trace_logger_log_double, .Ltmp598-trace_logger_log_double
	.cfi_endproc

	.globl	trace_logger_log_vector
	.align	16, 0x90
	.type	trace_logger_log_vector,@function
trace_logger_log_vector:                # @trace_logger_log_vector
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp601:
	.cfi_def_cfa_offset 16
.Ltmp602:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp603:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	16(%rbp), %rax
	cmpb	$0, initp
	movq	%rax, -8(%rbp)          # 8-byte Spill
	movl	%r9d, -12(%rbp)         # 4-byte Spill
	movq	%r8, -24(%rbp)          # 8-byte Spill
	movl	%ecx, -28(%rbp)         # 4-byte Spill
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	movl	%esi, -44(%rbp)         # 4-byte Spill
	movl	%edi, -48(%rbp)         # 4-byte Spill
	jne	.LBB27_2
# BB#1:
	leaq	.L.str14453, %rdi
	leaq	.L.str6445, %rsi
	movl	$267, %edx              # imm = 0x10B
	leaq	.L__PRETTY_FUNCTION__.trace_logger_log_vector, %rcx
	callq	__assert_fail
.LBB27_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB27_15
# BB#3:
	movl	$8, %eax
	movl	-44(%rbp), %ecx         # 4-byte Reload
	sarl	$31, %ecx
	shrl	$30, %ecx
	movl	-44(%rbp), %edx         # 4-byte Reload
	addl	%ecx, %edx
	sarl	$2, %edx
	addl	$3, %edx
	movl	%edx, %esi
	movq	%rsp, %rdi
	addq	$15, %rsi
	andq	$-16, %rsi
	movq	%rsp, %r8
	subq	%rsi, %r8
	movq	%r8, %rsp
	movl	-44(%rbp), %ecx         # 4-byte Reload
	movl	%eax, -52(%rbp)         # 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-52(%rbp), %r9d         # 4-byte Reload
	idivl	%r9d
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%r8, %rdi
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movl	%eax, %edx
	movq	%r8, -72(%rbp)          # 8-byte Spill
	callq	convert_bytes_to_hex
	movl	-48(%rbp), %eax         # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB27_5
# BB#4:
	leaq	.L.str28467, %rsi
	movq	full_trace_file, %rdi
	movl	-44(%rbp), %edx         # 4-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	-28(%rbp), %r8d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -76(%rbp)         # 4-byte Spill
	jmp	.LBB27_8
.LBB27_5:
	movq	full_trace_file, %rax
	movl	-48(%rbp), %ecx         # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB27_7
# BB#6:
	leaq	.L.str29468, %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movl	-44(%rbp), %edx         # 4-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	-28(%rbp), %r8d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -92(%rbp)         # 4-byte Spill
	jmp	.LBB27_8
.LBB27_7:
	leaq	.L.str30469, %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movl	-48(%rbp), %edx         # 4-byte Reload
	movl	-44(%rbp), %ecx         # 4-byte Reload
	movq	-72(%rbp), %r8          # 8-byte Reload
	movl	-28(%rbp), %r9d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -96(%rbp)         # 4-byte Spill
.LBB27_8:
	movq	full_trace_file, %rax
	movl	-28(%rbp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	je	.LBB27_10
# BB#9:
	leaq	.L.str18457, %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	-24(%rbp), %rdx         # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -108(%rbp)        # 4-byte Spill
	jmp	.LBB27_11
.LBB27_10:
	leaq	.L.str19458, %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -112(%rbp)        # 4-byte Spill
.LBB27_11:
	movq	full_trace_file, %rax
	movl	-12(%rbp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, -120(%rbp)        # 8-byte Spill
	je	.LBB27_13
# BB#12:
	leaq	.L.str20459, %rsi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-8(%rbp), %rdx          # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -124(%rbp)        # 4-byte Spill
	jmp	.LBB27_14
.LBB27_13:
	leaq	.L.str21460, %rsi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -128(%rbp)        # 4-byte Spill
.LBB27_14:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rsp
.LBB27_15:
	movq	%rbp, %rsp
	popq	%rbp
	ret
.Ltmp604:
	.size	trace_logger_log_vector, .Ltmp604-trace_logger_log_vector
	.cfi_endproc

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"store_loc[%d] = %d\n"
	.size	.L.str, 20

	.type	.L.str1,@object         # @.str1
.L.str1:
	.asciz	"\n"
	.size	.L.str1, 2

	.type	.L.str2,@object         # @.str2
.L.str2:
	.asciz	"Test failed with %d errors."
	.size	.L.str2, 28

	.type	.L.str3,@object         # @.str3
.L.str3:
	.asciz	"Test passed!\n"
	.size	.L.str3, 14

	.type	.L.str4,@object         # @.str4
	.section	.rodata,"a",@progbits
.L.str4:
	.asciz	"test_stores"
	.size	.L.str4, 12

	.type	.L.str5,@object         # @.str5
.L.str5:
	.asciz	"0:0"
	.size	.L.str5, 4

	.type	.L.str6,@object         # @.str6
.L.str6:
	.asciz	"1"
	.size	.L.str6, 2

	.type	.L.str7,@object         # @.str7
.L.str7:
	.zero	1
	.size	.L.str7, 1

	.type	.L.str8,@object         # @.str8
.L.str8:
	.asciz	"phi"
	.size	.L.str8, 4

	.type	.L.str9,@object         # @.str9
.L.str9:
	.asciz	"n_channels"
	.size	.L.str9, 11

	.type	.L.str10,@object        # @.str10
.L.str10:
	.asciz	"0:0-5"
	.size	.L.str10, 6

	.type	.L.str11,@object        # @.str11
	.align	16
.L.str11:
	.asciz	".preheader.lr.ph:0"
	.size	.L.str11, 19

	.type	.L.str12,@object        # @.str12
.L.str12:
	.asciz	"._crit_edge3:0"
	.size	.L.str12, 15

	.type	.L.str13,@object        # @.str13
.L.str13:
	.asciz	"2"
	.size	.L.str13, 2

	.type	.L.str14,@object        # @.str14
.L.str14:
	.asciz	"n_samples"
	.size	.L.str14, 10

	.type	.L.str15,@object        # @.str15
	.align	16
.L.str15:
	.asciz	".preheader.lr.ph:0-0"
	.size	.L.str15, 21

	.type	.L.str16,@object        # @.str16
.L.str16:
	.asciz	".preheader:1"
	.size	.L.str16, 13

	.type	.L.str17,@object        # @.str17
.L.str17:
	.asciz	"indvars.iv5"
	.size	.L.str17, 12

	.type	.L.str18,@object        # @.str18
	.align	16
.L.str18:
	.asciz	"indvars.iv.next6"
	.size	.L.str18, 17

	.type	.L.str19,@object        # @.str19
.L.str19:
	.asciz	"._crit_edge:1"
	.size	.L.str19, 14

	.type	.L.str20,@object        # @.str20
.L.str20:
	.asciz	"3"
	.size	.L.str20, 2

	.type	.L.str21,@object        # @.str21
.L.str21:
	.asciz	"stdout"
	.size	.L.str21, 7

	.type	.L.str22,@object        # @.str22
.L.str22:
	.asciz	".preheader:1-0"
	.size	.L.str22, 15

	.type	.L.str23,@object        # @.str23
.L.str23:
	.asciz	".lr.ph:1"
	.size	.L.str23, 9

	.type	.L.str24,@object        # @.str24
.L.str24:
	.asciz	"4"
	.size	.L.str24, 2

	.type	.L.str25,@object        # @.str25
.L.str25:
	.asciz	"5"
	.size	.L.str25, 2

	.type	.L.str26,@object        # @.str26
.L.str26:
	.asciz	"6"
	.size	.L.str26, 2

	.type	.L.str27,@object        # @.str27
.L.str27:
	.asciz	".lr.ph:1-0"
	.size	.L.str27, 11

	.type	.L.str28,@object        # @.str28
.L.str28:
	.asciz	"7:2"
	.size	.L.str28, 4

	.type	.L.str29,@object        # @.str29
.L.str29:
	.asciz	"indvars.iv"
	.size	.L.str29, 11

	.type	.L.str30,@object        # @.str30
.L.str30:
	.asciz	"indvars.iv.next"
	.size	.L.str30, 16

	.type	.L.str31,@object        # @.str31
.L.str31:
	.asciz	"8"
	.size	.L.str31, 2

	.type	.L.str32,@object        # @.str32
.L.str32:
	.asciz	"14"
	.size	.L.str32, 3

	.type	.L.str33,@object        # @.str33
.L.str33:
	.asciz	"9"
	.size	.L.str33, 2

	.type	.L.str34,@object        # @.str34
.L.str34:
	.asciz	"10"
	.size	.L.str34, 3

	.type	.L.str35,@object        # @.str35
.L.str35:
	.asciz	"freq_data"
	.size	.L.str35, 10

	.type	.L.str36,@object        # @.str36
.L.str36:
	.asciz	"11"
	.size	.L.str36, 3

	.type	.L.str37,@object        # @.str37
.L.str37:
	.asciz	"12"
	.size	.L.str37, 3

	.type	.L.str38,@object        # @.str38
.L.str38:
	.asciz	"13"
	.size	.L.str38, 3

	.type	.L.str39,@object        # @.str39
.L.str39:
	.asciz	"fprintf"
	.size	.L.str39, 8

	.type	.L.str40,@object        # @.str40
.L.str40:
	.asciz	"lftr.wideiv"
	.size	.L.str40, 12

	.type	.L.str41,@object        # @.str41
.L.str41:
	.asciz	"exitcond"
	.size	.L.str41, 9

	.type	.L.str42,@object        # @.str42
.L.str42:
	.asciz	"7:2-0"
	.size	.L.str42, 6

	.type	.L.str43,@object        # @.str43
.L.str43:
	.asciz	".lcssa"
	.size	.L.str43, 7

	.type	.L.str44,@object        # @.str44
.L.str44:
	.asciz	"15"
	.size	.L.str44, 3

	.type	.L.str45,@object        # @.str45
.L.str45:
	.asciz	"lftr.wideiv7"
	.size	.L.str45, 13

	.type	.L.str46,@object        # @.str46
.L.str46:
	.asciz	"exitcond8"
	.size	.L.str46, 10

	.type	.L.str47,@object        # @.str47
.L.str47:
	.asciz	"._crit_edge:1-0"
	.size	.L.str47, 16

	.type	.L.str48,@object        # @.str48
	.align	16
.L.str48:
	.asciz	"._crit_edge3:0-0"
	.size	.L.str48, 17

	.type	.L.str49,@object        # @.str49
.L.str49:
	.asciz	"time_data"
	.size	.L.str49, 10

	.type	.L.str50,@object        # @.str50
.L.str50:
	.asciz	"process_data"
	.size	.L.str50, 13

	.type	.L.str51,@object        # @.str51
.L.str51:
	.asciz	"0:0-8"
	.size	.L.str51, 6

	.type	.L.str52,@object        # @.str52
.L.str52:
	.asciz	"._crit_edge8:0"
	.size	.L.str52, 15

	.type	.L.str53,@object        # @.str53
.L.str53:
	.asciz	"7"
	.size	.L.str53, 2

	.type	.L.str54,@object        # @.str54
.L.str54:
	.asciz	"indvars.iv13"
	.size	.L.str54, 13

	.type	.L.str55,@object        # @.str55
	.align	16
.L.str55:
	.asciz	"indvars.iv.next14"
	.size	.L.str55, 18

	.type	.L.str56,@object        # @.str56
.L.str56:
	.asciz	"._crit_edge6:1"
	.size	.L.str56, 15

	.type	.L.str57,@object        # @.str57
.L.str57:
	.asciz	"11:2"
	.size	.L.str57, 5

	.type	.L.str58,@object        # @.str58
.L.str58:
	.asciz	"16"
	.size	.L.str58, 3

	.type	.L.str59,@object        # @.str59
.L.str59:
	.asciz	"in"
	.size	.L.str59, 3

	.type	.L.str60,@object        # @.str60
.L.str60:
	.asciz	"11:2-0"
	.size	.L.str60, 7

	.type	.L.str61,@object        # @.str61
.L.str61:
	.asciz	"17"
	.size	.L.str61, 3

	.type	.L.str62,@object        # @.str62
.L.str62:
	.asciz	"11:2-1"
	.size	.L.str62, 7

	.type	.L.str63,@object        # @.str63
.L.str63:
	.asciz	"18"
	.size	.L.str63, 3

	.type	.L.str64,@object        # @.str64
.L.str64:
	.asciz	"out"
	.size	.L.str64, 4

	.type	.L.str65,@object        # @.str65
.L.str65:
	.asciz	"11:2-2"
	.size	.L.str65, 7

	.type	.L.str66,@object        # @.str66
.L.str66:
	.asciz	"19"
	.size	.L.str66, 3

	.type	.L.str67,@object        # @.str67
.L.str67:
	.asciz	"11:2-3"
	.size	.L.str67, 7

	.type	.L.str68,@object        # @.str68
.L.str68:
	.asciz	"11:2-4"
	.size	.L.str68, 7

	.type	.L.str69,@object        # @.str69
.L.str69:
	.asciz	"20"
	.size	.L.str69, 3

	.type	.L.str70,@object        # @.str70
.L.str70:
	.asciz	"21"
	.size	.L.str70, 3

	.type	.L.str71,@object        # @.str71
.L.str71:
	.asciz	"22"
	.size	.L.str71, 3

	.type	.L.str72,@object        # @.str72
.L.str72:
	.asciz	"kiss_fft"
	.size	.L.str72, 9

	.type	.L.str73,@object        # @.str73
.L.str73:
	.asciz	"cfg"
	.size	.L.str73, 4

	.type	.L.str74,@object        # @.str74
.L.str74:
	.asciz	"._crit_edge:1-2"
	.size	.L.str74, 16

	.type	.L.str75,@object        # @.str75
.L.str75:
	.asciz	".lr.ph5:1"
	.size	.L.str75, 10

	.type	.L.str76,@object        # @.str76
.L.str76:
	.asciz	"23"
	.size	.L.str76, 3

	.type	.L.str77,@object        # @.str77
.L.str77:
	.asciz	".lr.ph5:1-0"
	.size	.L.str77, 12

	.type	.L.str78,@object        # @.str78
.L.str78:
	.asciz	"24:2"
	.size	.L.str78, 5

	.type	.L.str79,@object        # @.str79
.L.str79:
	.asciz	"indvars.iv9"
	.size	.L.str79, 12

	.type	.L.str80,@object        # @.str80
	.align	16
.L.str80:
	.asciz	"indvars.iv.next10"
	.size	.L.str80, 18

	.type	.L.str81,@object        # @.str81
.L.str81:
	.asciz	"25"
	.size	.L.str81, 3

	.type	.L.str82,@object        # @.str82
.L.str82:
	.asciz	"26"
	.size	.L.str82, 3

	.type	.L.str83,@object        # @.str83
.L.str83:
	.asciz	"27"
	.size	.L.str83, 3

	.type	.L.str84,@object        # @.str84
.L.str84:
	.asciz	"28"
	.size	.L.str84, 3

	.type	.L.str85,@object        # @.str85
.L.str85:
	.asciz	"29"
	.size	.L.str85, 3

	.type	.L.str86,@object        # @.str86
.L.str86:
	.asciz	"24:2-0"
	.size	.L.str86, 7

	.type	.L.str87,@object        # @.str87
.L.str87:
	.asciz	"lftr.wideiv11"
	.size	.L.str87, 14

	.type	.L.str88,@object        # @.str88
.L.str88:
	.asciz	"exitcond12"
	.size	.L.str88, 11

	.type	.L.str89,@object        # @.str89
.L.str89:
	.asciz	"24:2-1"
	.size	.L.str89, 7

	.type	.L.str90,@object        # @.str90
.L.str90:
	.asciz	"lftr.wideiv15"
	.size	.L.str90, 14

	.type	.L.str91,@object        # @.str91
.L.str91:
	.asciz	"exitcond16"
	.size	.L.str91, 11

	.type	.L.str92,@object        # @.str92
	.align	16
.L.str92:
	.asciz	"._crit_edge6:1-0"
	.size	.L.str92, 17

	.type	.L.str93,@object        # @.str93
	.align	16
.L.str93:
	.asciz	"._crit_edge8:0-0"
	.size	.L.str93, 17

	.type	.L.str94,@object        # @.str94
.L.str94:
	.asciz	"main"
	.size	.L.str94, 5

	.type	.L.str95,@object        # @.str95
.L.str95:
	.asciz	"malloc"
	.size	.L.str95, 7

	.type	.L.str96,@object        # @.str96
.L.str96:
	.asciz	"0:0-3"
	.size	.L.str96, 6

	.type	.L.str97,@object        # @.str97
.L.str97:
	.asciz	"indvars.iv3"
	.size	.L.str97, 12

	.type	.L.str98,@object        # @.str98
	.align	16
.L.str98:
	.asciz	"indvars.iv.next4"
	.size	.L.str98, 17

	.type	.L.str99,@object        # @.str99
.L.str99:
	.asciz	"11:1"
	.size	.L.str99, 5

	.type	.L.str100,@object       # @.str100
.L.str100:
	.asciz	"6:2"
	.size	.L.str100, 4

	.type	.L.str101,@object       # @.str101
.L.str101:
	.asciz	"6:2-0"
	.size	.L.str101, 6

	.type	.L.str102,@object       # @.str102
.L.str102:
	.asciz	"6:2-1"
	.size	.L.str102, 6

	.type	.L.str103,@object       # @.str103
.L.str103:
	.asciz	"6:2-2"
	.size	.L.str103, 6

	.type	.L.str104,@object       # @.str104
.L.str104:
	.asciz	"exitcond5"
	.size	.L.str104, 10

	.type	.L.str105,@object       # @.str105
.L.str105:
	.asciz	"11:1-0"
	.size	.L.str105, 7

	.type	.L.str106,@object       # @.str106
.L.str106:
	.asciz	"12:0"
	.size	.L.str106, 5

	.type	.L.str107,@object       # @.str107
.L.str107:
	.asciz	"kiss_fft_alloc"
	.size	.L.str107, 15

	.type	.L.str108,@object       # @.str108
.L.str108:
	.asciz	"12:0-1"
	.size	.L.str108, 7

	.type	.L.str109,@object       # @.str109
.L.str109:
	.asciz	"12:0-3"
	.size	.L.str109, 7

	.type	.L.str110,@object       # @.str110
	.align	16
.L.str110:
	.asciz	"process_data/fft_loop 49\nprocess_data/fft_loop_1 51\nprocess_data/fft_loop_2 59\nkf_bfly2/kf_bfly2_loop 32\nkf_bfly3/kf_bfly3_loop 108\nkf_bfly4/kf_bfly4_loop 60\nkf_bfly5/kf_bfly5_loop 161\nkf_bfly_generic/kf_bfly_loop 219\nkf_bfly_generic/kf_bfly_loop_1 221\nkf_bfly_generic/kf_bfly_loop_2 228\nkf_bfly_generic/kf_bfly_loop_3 231\nkf_factor/kf_factor_1 324\nkf_factor/kf_factor_2 325\nkf_work/kf_work_1 284\nkf_work/kf_work_2 289\n"
	.size	.L.str110, 420

	.type	.L.str111,@object       # @.str111
.L.str111:
	.asciz	"kiss_fft_alloc"
	.size	.L.str111, 15

	.type	.L.str1112,@object      # @.str1112
.L.str1112:
	.asciz	"0:0"
	.size	.L.str1112, 4

	.type	.L.str2113,@object      # @.str2113
.L.str2113:
	.asciz	"1"
	.size	.L.str2113, 2

	.type	.L.str3114,@object      # @.str3114
.L.str3114:
	.zero	1
	.size	.L.str3114, 1

	.type	.L.str4115,@object      # @.str4115
.L.str4115:
	.asciz	"phi"
	.size	.L.str4115, 4

	.type	.L.str5116,@object      # @.str5116
.L.str5116:
	.asciz	"nfft"
	.size	.L.str5116, 5

	.type	.L.str6117,@object      # @.str6117
.L.str6117:
	.asciz	"2"
	.size	.L.str6117, 2

	.type	.L.str7118,@object      # @.str7118
.L.str7118:
	.asciz	"3"
	.size	.L.str7118, 2

	.type	.L.str8119,@object      # @.str8119
.L.str8119:
	.asciz	"4"
	.size	.L.str8119, 2

	.type	.L.str9120,@object      # @.str9120
.L.str9120:
	.asciz	"5"
	.size	.L.str9120, 2

	.type	.L.str10121,@object     # @.str10121
.L.str10121:
	.asciz	"lenmem"
	.size	.L.str10121, 7

	.type	.L.str11122,@object     # @.str11122
.L.str11122:
	.asciz	"0:0-6"
	.size	.L.str11122, 6

	.type	.L.str12123,@object     # @.str12123
.L.str12123:
	.asciz	"6:0"
	.size	.L.str12123, 4

	.type	.L.str13124,@object     # @.str13124
.L.str13124:
	.asciz	"9:0"
	.size	.L.str13124, 4

	.type	.L.str14125,@object     # @.str14125
.L.str14125:
	.asciz	"7"
	.size	.L.str14125, 2

	.type	.L.str15126,@object     # @.str15126
.L.str15126:
	.asciz	"malloc"
	.size	.L.str15126, 7

	.type	.L.str16127,@object     # @.str16127
.L.str16127:
	.asciz	"8"
	.size	.L.str16127, 2

	.type	.L.str17128,@object     # @.str17128
.L.str17128:
	.asciz	"6:0-1"
	.size	.L.str17128, 6

	.type	.L.str18129,@object     # @.str18129
.L.str18129:
	.asciz	"17:0"
	.size	.L.str18129, 5

	.type	.L.str19130,@object     # @.str19130
.L.str19130:
	.asciz	"10"
	.size	.L.str19130, 3

	.type	.L.str20131,@object     # @.str20131
.L.str20131:
	.asciz	"mem"
	.size	.L.str20131, 4

	.type	.L.str21132,@object     # @.str21132
.L.str21132:
	.asciz	"9:0-0"
	.size	.L.str21132, 6

	.type	.L.str22133,@object     # @.str22133
.L.str22133:
	.asciz	"16:0"
	.size	.L.str22133, 5

	.type	.L.str23134,@object     # @.str23134
.L.str23134:
	.asciz	"11:0"
	.size	.L.str23134, 5

	.type	.L.str24135,@object     # @.str24135
.L.str24135:
	.asciz	"12"
	.size	.L.str24135, 3

	.type	.L.str25136,@object     # @.str25136
.L.str25136:
	.asciz	"13"
	.size	.L.str25136, 3

	.type	.L.str26137,@object     # @.str26137
.L.str26137:
	.asciz	"11:0-0"
	.size	.L.str26137, 7

	.type	.L.str27138,@object     # @.str27138
.L.str27138:
	.asciz	"14:0"
	.size	.L.str27138, 5

	.type	.L.str28139,@object     # @.str28139
.L.str28139:
	.asciz	"15"
	.size	.L.str28139, 3

	.type	.L.str29140,@object     # @.str29140
.L.str29140:
	.asciz	"14:0-1"
	.size	.L.str29140, 7

	.type	.L.str30141,@object     # @.str30141
.L.str30141:
	.asciz	"st.0"
	.size	.L.str30141, 5

	.type	.L.str31142,@object     # @.str31142
.L.str31142:
	.asciz	"16:0-0"
	.size	.L.str31142, 7

	.type	.L.str32143,@object     # @.str32143
.L.str32143:
	.asciz	"16:0-1"
	.size	.L.str32143, 7

	.type	.L.str33144,@object     # @.str33144
.L.str33144:
	.asciz	"st.1"
	.size	.L.str33144, 5

	.type	.L.str34145,@object     # @.str34145
.L.str34145:
	.asciz	"18"
	.size	.L.str34145, 3

	.type	.L.str35146,@object     # @.str35146
.L.str35146:
	.asciz	"17:0-0"
	.size	.L.str35146, 7

	.type	.L.str36147,@object     # @.str36147
.L.str36147:
	.asciz	"41:0"
	.size	.L.str36147, 5

	.type	.L.str37148,@object     # @.str37148
.L.str37148:
	.asciz	"19:0"
	.size	.L.str37148, 5

	.type	.L.str38149,@object     # @.str38149
.L.str38149:
	.asciz	"20"
	.size	.L.str38149, 3

	.type	.L.str39150,@object     # @.str39150
.L.str39150:
	.asciz	"19:0-0"
	.size	.L.str39150, 7

	.type	.L.str40151,@object     # @.str40151
.L.str40151:
	.asciz	"21"
	.size	.L.str40151, 3

	.type	.L.str41152,@object     # @.str41152
.L.str41152:
	.asciz	"19:0-1"
	.size	.L.str41152, 7

	.type	.L.str42153,@object     # @.str42153
.L.str42153:
	.asciz	"inverse_fft"
	.size	.L.str42153, 12

	.type	.L.str43154,@object     # @.str43154
.L.str43154:
	.asciz	"22"
	.size	.L.str43154, 3

	.type	.L.str44155,@object     # @.str44155
.L.str44155:
	.asciz	"19:0-3"
	.size	.L.str44155, 7

	.type	.L.str45156,@object     # @.str45156
.L.str45156:
	.asciz	".lr.ph:0"
	.size	.L.str45156, 9

	.type	.L.str46157,@object     # @.str46157
.L.str46157:
	.asciz	"._crit_edge:0"
	.size	.L.str46157, 14

	.type	.L.str47158,@object     # @.str47158
.L.str47158:
	.asciz	"23"
	.size	.L.str47158, 3

	.type	.L.str48159,@object     # @.str48159
.L.str48159:
	.asciz	".lr.ph:0-0"
	.size	.L.str48159, 11

	.type	.L.str49160,@object     # @.str49160
.L.str49160:
	.asciz	"24:1"
	.size	.L.str49160, 5

	.type	.L.str50161,@object     # @.str50161
.L.str50161:
	.asciz	"indvars.iv"
	.size	.L.str50161, 11

	.type	.L.str51162,@object     # @.str51162
.L.str51162:
	.asciz	"indvars.iv.next"
	.size	.L.str51162, 16

	.type	.L.str52163,@object     # @.str52163
.L.str52163:
	.asciz	"33:1"
	.size	.L.str52163, 5

	.type	.L.str53164,@object     # @.str53164
.L.str53164:
	.asciz	"25"
	.size	.L.str53164, 3

	.type	.L.str54165,@object     # @.str54165
.L.str54165:
	.asciz	"26"
	.size	.L.str54165, 3

	.type	.L.str55166,@object     # @.str55166
.L.str55166:
	.asciz	"27"
	.size	.L.str55166, 3

	.type	.L.str56167,@object     # @.str56167
.L.str56167:
	.asciz	"28"
	.size	.L.str56167, 3

	.type	.L.str57168,@object     # @.str57168
.L.str57168:
	.asciz	"29"
	.size	.L.str57168, 3

	.type	.L.str58169,@object     # @.str58169
.L.str58169:
	.asciz	"30"
	.size	.L.str58169, 3

	.type	.L.str59170,@object     # @.str59170
.L.str59170:
	.asciz	"24:1-2"
	.size	.L.str59170, 7

	.type	.L.str60171,@object     # @.str60171
.L.str60171:
	.asciz	"31:1"
	.size	.L.str60171, 5

	.type	.L.str61172,@object     # @.str61172
.L.str61172:
	.asciz	"32"
	.size	.L.str61172, 3

	.type	.L.str62173,@object     # @.str62173
.L.str62173:
	.asciz	"31:1-1"
	.size	.L.str62173, 7

	.type	.L.str63174,@object     # @.str63174
.L.str63174:
	.asciz	"phase.0"
	.size	.L.str63174, 8

	.type	.L.str64175,@object     # @.str64175
.L.str64175:
	.asciz	"34"
	.size	.L.str64175, 3

	.type	.L.str65176,@object     # @.str65176
.L.str65176:
	.asciz	"cos"
	.size	.L.str65176, 4

	.type	.L.str66177,@object     # @.str66177
.L.str66177:
	.asciz	"35"
	.size	.L.str66177, 3

	.type	.L.str67178,@object     # @.str67178
.L.str67178:
	.asciz	"36"
	.size	.L.str67178, 3

	.type	.L.str68179,@object     # @.str68179
.L.str68179:
	.asciz	"33:1-0"
	.size	.L.str68179, 7

	.type	.L.str69180,@object     # @.str69180
.L.str69180:
	.asciz	"37"
	.size	.L.str69180, 3

	.type	.L.str70181,@object     # @.str70181
.L.str70181:
	.asciz	"sin"
	.size	.L.str70181, 4

	.type	.L.str71182,@object     # @.str71182
.L.str71182:
	.asciz	"38"
	.size	.L.str71182, 3

	.type	.L.str72183,@object     # @.str72183
.L.str72183:
	.asciz	"39"
	.size	.L.str72183, 3

	.type	.L.str73184,@object     # @.str73184
.L.str73184:
	.asciz	"33:1-1"
	.size	.L.str73184, 7

	.type	.L.str74185,@object     # @.str74185
.L.str74185:
	.asciz	"lftr.wideiv"
	.size	.L.str74185, 12

	.type	.L.str75186,@object     # @.str75186
.L.str75186:
	.asciz	"exitcond"
	.size	.L.str75186, 9

	.type	.L.str76187,@object     # @.str76187
.L.str76187:
	.asciz	"33:1-2"
	.size	.L.str76187, 7

	.type	.L.str77188,@object     # @.str77188
.L.str77188:
	.asciz	"40"
	.size	.L.str77188, 3

	.type	.L.str78189,@object     # @.str78189
.L.str78189:
	.asciz	"._crit_edge:0-0"
	.size	.L.str78189, 16

	.type	.L.str79190,@object     # @.str79190
.L.str79190:
	.asciz	"kf_factor"
	.size	.L.str79190, 10

	.type	.L.str80191,@object     # @.str80191
.L.str80191:
	.asciz	"._crit_edge:0-1"
	.size	.L.str80191, 16

	.type	.L.str81192,@object     # @.str81192
.L.str81192:
	.asciz	"41:0-0"
	.size	.L.str81192, 7

	.type	.L.str82193,@object     # @.str82193
.L.str82193:
	.asciz	"n"
	.size	.L.str82193, 2

	.type	.L.str83194,@object     # @.str83194
.L.str83194:
	.asciz	"sqrt"
	.size	.L.str83194, 5

	.type	.L.str84195,@object     # @.str84195
.L.str84195:
	.asciz	"floor"
	.size	.L.str84195, 6

	.type	.L.str85196,@object     # @.str85196
.L.str85196:
	.asciz	"0:0-4"
	.size	.L.str85196, 6

	.type	.L.str86197,@object     # @.str86197
.L.str86197:
	.asciz	".outer:1"
	.size	.L.str86197, 9

	.type	.L.str87198,@object     # @.str87198
.L.str87198:
	.asciz	".01.ph"
	.size	.L.str87198, 7

	.type	.L.str88199,@object     # @.str88199
.L.str88199:
	.asciz	"._crit_edge:1"
	.size	.L.str88199, 14

	.type	.L.str89200,@object     # @.str89200
.L.str89200:
	.asciz	"facbuf"
	.size	.L.str89200, 7

	.type	.L.str90201,@object     # @.str90201
.L.str90201:
	.asciz	"p.0.ph"
	.size	.L.str90201, 7

	.type	.L.str91202,@object     # @.str91202
.L.str91202:
	.asciz	"p.0.lcssa"
	.size	.L.str91202, 10

	.type	.L.str92203,@object     # @.str92203
.L.str92203:
	.asciz	".0.ph"
	.size	.L.str92203, 6

	.type	.L.str93204,@object     # @.str93204
.L.str93204:
	.asciz	".outer:1-0"
	.size	.L.str93204, 11

	.type	.L.str94205,@object     # @.str94205
.L.str94205:
	.asciz	".lr.ph:2"
	.size	.L.str94205, 9

	.type	.L.str95206,@object     # @.str95206
.L.str95206:
	.asciz	"p.02"
	.size	.L.str95206, 5

	.type	.L.str96207,@object     # @.str96207
.L.str96207:
	.asciz	"p.0.be"
	.size	.L.str96207, 7

	.type	.L.str97208,@object     # @.str97208
.L.str97208:
	.asciz	".backedge:2"
	.size	.L.str97208, 12

	.type	.L.str98209,@object     # @.str98209
.L.str98209:
	.asciz	".lr.ph:2-0"
	.size	.L.str98209, 11

	.type	.L.str99210,@object     # @.str99210
.L.str99210:
	.asciz	"6:2"
	.size	.L.str99210, 4

	.type	.L.str100211,@object    # @.str100211
.L.str100211:
	.asciz	"7:2"
	.size	.L.str100211, 4

	.type	.L.str101212,@object    # @.str101212
.L.str101212:
	.asciz	"6:2-1"
	.size	.L.str101212, 6

	.type	.L.str102213,@object    # @.str102213
.L.str102213:
	.asciz	"7:2-1"
	.size	.L.str102213, 6

	.type	.L.str103214,@object    # @.str103214
.L.str103214:
	.asciz	"p.1"
	.size	.L.str103214, 4

	.type	.L.str104215,@object    # @.str104215
.L.str104215:
	.asciz	"9"
	.size	.L.str104215, 2

	.type	.L.str105216,@object    # @.str105216
.L.str105216:
	.asciz	"11"
	.size	.L.str105216, 3

	.type	.L.str106217,@object    # @.str106217
.L.str106217:
	.asciz	".backedge:2-1"
	.size	.L.str106217, 14

	.type	.L.str107218,@object    # @.str107218
.L.str107218:
	.asciz	"14"
	.size	.L.str107218, 3

	.type	.L.str108219,@object    # @.str108219
.L.str108219:
	.asciz	"._crit_edge:1-2"
	.size	.L.str108219, 16

	.type	.L.str109220,@object    # @.str109220
.L.str109220:
	.asciz	"._crit_edge:1-4"
	.size	.L.str109220, 16

	.type	.L.str110221,@object    # @.str110221
.L.str110221:
	.asciz	"16"
	.size	.L.str110221, 3

	.type	.L.str111222,@object    # @.str111222
.L.str111222:
	.asciz	"._crit_edge:1-5"
	.size	.L.str111222, 16

	.type	.L.str112,@object       # @.str112
.L.str112:
	.asciz	"kiss_fft_stride"
	.size	.L.str112, 16

	.type	.L.str113,@object       # @.str113
.L.str113:
	.asciz	"0:0-2"
	.size	.L.str113, 6

	.type	.L.str114,@object       # @.str114
.L.str114:
	.asciz	"fin"
	.size	.L.str114, 4

	.type	.L.str115,@object       # @.str115
.L.str115:
	.asciz	"0:0-5"
	.size	.L.str115, 6

	.type	.L.str116,@object       # @.str116
.L.str116:
	.asciz	"fout"
	.size	.L.str116, 5

	.type	.L.str117,@object       # @.str117
.L.str117:
	.asciz	"st"
	.size	.L.str117, 3

	.type	.L.str118,@object       # @.str118
.L.str118:
	.asciz	"0:0-8"
	.size	.L.str118, 6

	.type	.L.str119,@object       # @.str119
.L.str119:
	.asciz	"kf_work"
	.size	.L.str119, 8

	.type	.L.str120,@object       # @.str120
.L.str120:
	.asciz	"in_stride"
	.size	.L.str120, 10

	.type	.L.str121,@object       # @.str121
.L.str121:
	.asciz	"0:0-9"
	.size	.L.str121, 6

	.type	.L.str122,@object       # @.str122
.L.str122:
	.asciz	"Fout"
	.size	.L.str122, 5

	.type	.L.str123,@object       # @.str123
.L.str123:
	.asciz	"f"
	.size	.L.str123, 2

	.type	.L.str124,@object       # @.str124
.L.str124:
	.asciz	"factors"
	.size	.L.str124, 8

	.type	.L.str125,@object       # @.str125
.L.str125:
	.asciz	"6"
	.size	.L.str125, 2

	.type	.L.str126,@object       # @.str126
.L.str126:
	.asciz	"0:0-13"
	.size	.L.str126, 7

	.type	.L.str127,@object       # @.str127
.L.str127:
	.asciz	".preheader:0"
	.size	.L.str127, 13

	.type	.L.str128,@object       # @.str128
.L.str128:
	.asciz	".preheader1:0"
	.size	.L.str128, 14

	.type	.L.str129,@object       # @.str129
.L.str129:
	.asciz	"fstride"
	.size	.L.str129, 8

	.type	.L.str130,@object       # @.str130
.L.str130:
	.asciz	".preheader1:0-0"
	.size	.L.str130, 16

	.type	.L.str131,@object       # @.str131
.L.str131:
	.asciz	"29:1"
	.size	.L.str131, 5

	.type	.L.str132,@object       # @.str132
.L.str132:
	.asciz	"17"
	.size	.L.str132, 3

	.type	.L.str133,@object       # @.str133
.L.str133:
	.asciz	".preheader:0-0"
	.size	.L.str133, 15

	.type	.L.str134,@object       # @.str134
.L.str134:
	.asciz	"18:1"
	.size	.L.str134, 5

	.type	.L.str135,@object       # @.str135
.L.str135:
	.asciz	"19"
	.size	.L.str135, 3

	.type	.L.str136,@object       # @.str136
.L.str136:
	.asciz	"18:1-0"
	.size	.L.str136, 7

	.type	.L.str137,@object       # @.str137
.L.str137:
	.asciz	"24"
	.size	.L.str137, 3

	.type	.L.str138,@object       # @.str138
.L.str138:
	.asciz	"18:1-1"
	.size	.L.str138, 7

	.type	.L.str139,@object       # @.str139
.L.str139:
	.asciz	"18:1-2"
	.size	.L.str139, 7

	.type	.L.str140,@object       # @.str140
.L.str140:
	.asciz	"18:1-3"
	.size	.L.str140, 7

	.type	.L.str141,@object       # @.str141
.L.str141:
	.asciz	".loopexit:0"
	.size	.L.str141, 12

	.type	.L.str142,@object       # @.str142
.L.str142:
	.asciz	"29:1-0"
	.size	.L.str142, 7

	.type	.L.str143,@object       # @.str143
.L.str143:
	.asciz	"31"
	.size	.L.str143, 3

	.type	.L.str144,@object       # @.str144
.L.str144:
	.asciz	"29:1-1"
	.size	.L.str144, 7

	.type	.L.str145,@object       # @.str145
.L.str145:
	.asciz	"33"
	.size	.L.str145, 3

	.type	.L.str146,@object       # @.str146
.L.str146:
	.asciz	"29:1-2"
	.size	.L.str146, 7

	.type	.L.str147,@object       # @.str147
.L.str147:
	.asciz	"29:1-3"
	.size	.L.str147, 7

	.type	.L.str148,@object       # @.str148
.L.str148:
	.asciz	".loopexit:0-0"
	.size	.L.str148, 14

	.type	.L.str149,@object       # @.str149
.L.str149:
	.asciz	".loopexit:0-1"
	.size	.L.str149, 14

	.type	.L.str150,@object       # @.str150
.L.str150:
	.asciz	".loopexit:0-2"
	.size	.L.str150, 14

	.type	.L.str151,@object       # @.str151
.L.str151:
	.asciz	"43:0"
	.size	.L.str151, 5

	.type	.L.str152,@object       # @.str152
.L.str152:
	.asciz	"40:0"
	.size	.L.str152, 5

	.type	.L.str153,@object       # @.str153
.L.str153:
	.asciz	"37:0"
	.size	.L.str153, 5

	.type	.L.str154,@object       # @.str154
.L.str154:
	.asciz	"35:0"
	.size	.L.str154, 5

	.type	.L.str155,@object       # @.str155
.L.str155:
	.asciz	"45:0"
	.size	.L.str155, 5

	.type	.L.str156,@object       # @.str156
.L.str156:
	.asciz	"35:0-0"
	.size	.L.str156, 7

	.type	.L.str157,@object       # @.str157
.L.str157:
	.asciz	"kf_bfly2"
	.size	.L.str157, 9

	.type	.L.str158,@object       # @.str158
.L.str158:
	.asciz	"35:0-1"
	.size	.L.str158, 7

	.type	.L.str159,@object       # @.str159
.L.str159:
	.asciz	"47:0"
	.size	.L.str159, 5

	.type	.L.str160,@object       # @.str160
.L.str160:
	.asciz	"37:0-0"
	.size	.L.str160, 7

	.type	.L.str161,@object       # @.str161
.L.str161:
	.asciz	"kf_bfly3"
	.size	.L.str161, 9

	.type	.L.str162,@object       # @.str162
.L.str162:
	.asciz	"37:0-1"
	.size	.L.str162, 7

	.type	.L.str163,@object       # @.str163
.L.str163:
	.asciz	"41"
	.size	.L.str163, 3

	.type	.L.str164,@object       # @.str164
.L.str164:
	.asciz	"42"
	.size	.L.str164, 3

	.type	.L.str165,@object       # @.str165
.L.str165:
	.asciz	"40:0-0"
	.size	.L.str165, 7

	.type	.L.str166,@object       # @.str166
.L.str166:
	.asciz	"kf_bfly4"
	.size	.L.str166, 9

	.type	.L.str167,@object       # @.str167
.L.str167:
	.asciz	"40:0-1"
	.size	.L.str167, 7

	.type	.L.str168,@object       # @.str168
.L.str168:
	.asciz	"44"
	.size	.L.str168, 3

	.type	.L.str169,@object       # @.str169
.L.str169:
	.asciz	"43:0-0"
	.size	.L.str169, 7

	.type	.L.str170,@object       # @.str170
.L.str170:
	.asciz	"kf_bfly5"
	.size	.L.str170, 9

	.type	.L.str171,@object       # @.str171
.L.str171:
	.asciz	"43:0-1"
	.size	.L.str171, 7

	.type	.L.str172,@object       # @.str172
.L.str172:
	.asciz	"46"
	.size	.L.str172, 3

	.type	.L.str173,@object       # @.str173
.L.str173:
	.asciz	"45:0-0"
	.size	.L.str173, 7

	.type	.L.str174,@object       # @.str174
.L.str174:
	.asciz	"kf_bfly_generic"
	.size	.L.str174, 16

	.type	.L.str175,@object       # @.str175
.L.str175:
	.asciz	"45:0-1"
	.size	.L.str175, 7

	.type	.L.str176,@object       # @.str176
.L.str176:
	.asciz	"47:0-0"
	.size	.L.str176, 7

	.type	.L.str177,@object       # @.str177
.L.str177:
	.asciz	"kiss_fft"
	.size	.L.str177, 9

	.type	.L.str178,@object       # @.str178
.L.str178:
	.asciz	"0:0-3"
	.size	.L.str178, 6

	.type	.L.str179,@object       # @.str179
.L.str179:
	.asciz	"cfg"
	.size	.L.str179, 4

	.type	.L.str180,@object       # @.str180
	.align	16
.L.str180:
	.asciz	"kiss_fft_cleanup"
	.size	.L.str180, 17

	.type	.L.str181,@object       # @.str181
.L.str181:
	.asciz	"0:0-0"
	.size	.L.str181, 6

	.type	.L.str182,@object       # @.str182
	.align	16
.L.str182:
	.asciz	"kiss_fft_next_fast_size"
	.size	.L.str182, 24

	.type	.L.str183,@object       # @.str183
.L.str183:
	.asciz	"0:0-1"
	.size	.L.str183, 6

	.type	.L.str184,@object       # @.str184
.L.str184:
	.asciz	"1:1"
	.size	.L.str184, 4

	.type	.L.str185,@object       # @.str185
.L.str185:
	.asciz	".0"
	.size	.L.str185, 3

	.type	.L.str186,@object       # @.str186
.L.str186:
	.asciz	"1:1-1"
	.size	.L.str186, 6

	.type	.L.str187,@object       # @.str187
.L.str187:
	.asciz	".loopexit:1"
	.size	.L.str187, 12

	.type	.L.str188,@object       # @.str188
.L.str188:
	.asciz	"m.01"
	.size	.L.str188, 5

	.type	.L.str189,@object       # @.str189
.L.str189:
	.asciz	".lr.ph:2-1"
	.size	.L.str189, 11

	.type	.L.str190,@object       # @.str190
.L.str190:
	.asciz	"m.0.lcssa"
	.size	.L.str190, 10

	.type	.L.str191,@object       # @.str191
.L.str191:
	.asciz	".loopexit:1-0"
	.size	.L.str191, 14

	.type	.L.str192,@object       # @.str192
.L.str192:
	.asciz	".lr.ph4:2"
	.size	.L.str192, 10

	.type	.L.str193,@object       # @.str193
.L.str193:
	.asciz	".loopexit2:1"
	.size	.L.str193, 13

	.type	.L.str194,@object       # @.str194
.L.str194:
	.asciz	"m.13"
	.size	.L.str194, 5

	.type	.L.str195,@object       # @.str195
.L.str195:
	.asciz	".lr.ph4:2-1"
	.size	.L.str195, 12

	.type	.L.str196,@object       # @.str196
.L.str196:
	.asciz	"m.1.lcssa"
	.size	.L.str196, 10

	.type	.L.str197,@object       # @.str197
.L.str197:
	.asciz	".loopexit2:1-0"
	.size	.L.str197, 15

	.type	.L.str198,@object       # @.str198
.L.str198:
	.asciz	".lr.ph7:2"
	.size	.L.str198, 10

	.type	.L.str199,@object       # @.str199
.L.str199:
	.asciz	"m.26"
	.size	.L.str199, 5

	.type	.L.str200,@object       # @.str200
.L.str200:
	.asciz	".lr.ph7:2-1"
	.size	.L.str200, 12

	.type	.L.str201,@object       # @.str201
.L.str201:
	.asciz	"m.2.lcssa"
	.size	.L.str201, 10

	.type	.L.str202,@object       # @.str202
.L.str202:
	.asciz	"._crit_edge:1-1"
	.size	.L.str202, 16

	.type	.L.str203,@object       # @.str203
.L.str203:
	.asciz	"m"
	.size	.L.str203, 2

	.type	.L.str204,@object       # @.str204
.L.str204:
	.asciz	"0:0-7"
	.size	.L.str204, 6

	.type	.L.str205,@object       # @.str205
.L.str205:
	.asciz	"4:1"
	.size	.L.str205, 4

	.type	.L.str206,@object       # @.str206
.L.str206:
	.asciz	"Fout2.0"
	.size	.L.str206, 8

	.type	.L.str207,@object       # @.str207
.L.str207:
	.asciz	"tw1.0"
	.size	.L.str207, 6

	.type	.L.str208,@object       # @.str208
.L.str208:
	.asciz	".01"
	.size	.L.str208, 4

	.type	.L.str209,@object       # @.str209
.L.str209:
	.asciz	"4:1-1"
	.size	.L.str209, 6

	.type	.L.str210,@object       # @.str210
.L.str210:
	.asciz	"4:1-2"
	.size	.L.str210, 6

	.type	.L.str211,@object       # @.str211
.L.str211:
	.asciz	"4:1-3"
	.size	.L.str211, 6

	.type	.L.str212,@object       # @.str212
.L.str212:
	.asciz	"4:1-4"
	.size	.L.str212, 6

	.type	.L.str213,@object       # @.str213
.L.str213:
	.asciz	"4:1-8"
	.size	.L.str213, 6

	.type	.L.str214,@object       # @.str214
.L.str214:
	.asciz	"34:0"
	.size	.L.str214, 5

	.type	.L.str215,@object       # @.str215
.L.str215:
	.asciz	"34:0-0"
	.size	.L.str215, 7

	.type	.L.str216,@object       # @.str216
.L.str216:
	.asciz	"0:0-10"
	.size	.L.str216, 7

	.type	.L.str217,@object       # @.str217
.L.str217:
	.asciz	"7:1"
	.size	.L.str217, 4

	.type	.L.str218,@object       # @.str218
.L.str218:
	.asciz	"tw2.0"
	.size	.L.str218, 6

	.type	.L.str219,@object       # @.str219
.L.str219:
	.asciz	"k.0"
	.size	.L.str219, 4

	.type	.L.str220,@object       # @.str220
.L.str220:
	.asciz	"71"
	.size	.L.str220, 3

	.type	.L.str221,@object       # @.str221
.L.str221:
	.asciz	"70"
	.size	.L.str221, 3

	.type	.L.str222,@object       # @.str222
.L.str222:
	.asciz	"43"
	.size	.L.str222, 3

	.type	.L.str223,@object       # @.str223
.L.str223:
	.asciz	"45"
	.size	.L.str223, 3

	.type	.L.str224,@object       # @.str224
.L.str224:
	.asciz	"47"
	.size	.L.str224, 3

	.type	.L.str225,@object       # @.str225
.L.str225:
	.asciz	"48"
	.size	.L.str225, 3

	.type	.L.str226,@object       # @.str226
.L.str226:
	.asciz	"7:1-2"
	.size	.L.str226, 6

	.type	.L.str227,@object       # @.str227
.L.str227:
	.asciz	"49"
	.size	.L.str227, 3

	.type	.L.str228,@object       # @.str228
.L.str228:
	.asciz	"50"
	.size	.L.str228, 3

	.type	.L.str229,@object       # @.str229
.L.str229:
	.asciz	"51"
	.size	.L.str229, 3

	.type	.L.str230,@object       # @.str230
.L.str230:
	.asciz	"52"
	.size	.L.str230, 3

	.type	.L.str231,@object       # @.str231
.L.str231:
	.asciz	"53"
	.size	.L.str231, 3

	.type	.L.str232,@object       # @.str232
.L.str232:
	.asciz	"54"
	.size	.L.str232, 3

	.type	.L.str233,@object       # @.str233
.L.str233:
	.asciz	"55"
	.size	.L.str233, 3

	.type	.L.str234,@object       # @.str234
.L.str234:
	.asciz	"7:1-3"
	.size	.L.str234, 6

	.type	.L.str235,@object       # @.str235
.L.str235:
	.asciz	"56"
	.size	.L.str235, 3

	.type	.L.str236,@object       # @.str236
.L.str236:
	.asciz	"57"
	.size	.L.str236, 3

	.type	.L.str237,@object       # @.str237
.L.str237:
	.asciz	"58"
	.size	.L.str237, 3

	.type	.L.str238,@object       # @.str238
.L.str238:
	.asciz	"59"
	.size	.L.str238, 3

	.type	.L.str239,@object       # @.str239
.L.str239:
	.asciz	"7:1-4"
	.size	.L.str239, 6

	.type	.L.str240,@object       # @.str240
.L.str240:
	.asciz	"60"
	.size	.L.str240, 3

	.type	.L.str241,@object       # @.str241
.L.str241:
	.asciz	"61"
	.size	.L.str241, 3

	.type	.L.str242,@object       # @.str242
.L.str242:
	.asciz	"7:1-5"
	.size	.L.str242, 6

	.type	.L.str243,@object       # @.str243
.L.str243:
	.asciz	"62"
	.size	.L.str243, 3

	.type	.L.str244,@object       # @.str244
.L.str244:
	.asciz	"63"
	.size	.L.str244, 3

	.type	.L.str245,@object       # @.str245
.L.str245:
	.asciz	"7:1-6"
	.size	.L.str245, 6

	.type	.L.str246,@object       # @.str246
.L.str246:
	.asciz	"64"
	.size	.L.str246, 3

	.type	.L.str247,@object       # @.str247
.L.str247:
	.asciz	"65"
	.size	.L.str247, 3

	.type	.L.str248,@object       # @.str248
.L.str248:
	.asciz	"7:1-7"
	.size	.L.str248, 6

	.type	.L.str249,@object       # @.str249
.L.str249:
	.asciz	"66"
	.size	.L.str249, 3

	.type	.L.str250,@object       # @.str250
.L.str250:
	.asciz	"67"
	.size	.L.str250, 3

	.type	.L.str251,@object       # @.str251
.L.str251:
	.asciz	"7:1-8"
	.size	.L.str251, 6

	.type	.L.str252,@object       # @.str252
.L.str252:
	.asciz	"68"
	.size	.L.str252, 3

	.type	.L.str253,@object       # @.str253
.L.str253:
	.asciz	"69"
	.size	.L.str253, 3

	.type	.L.str254,@object       # @.str254
.L.str254:
	.asciz	"7:1-9"
	.size	.L.str254, 6

	.type	.L.str255,@object       # @.str255
.L.str255:
	.asciz	"72"
	.size	.L.str255, 3

	.type	.L.str256,@object       # @.str256
.L.str256:
	.asciz	"7:1-12"
	.size	.L.str256, 7

	.type	.L.str257,@object       # @.str257
.L.str257:
	.asciz	"73:0"
	.size	.L.str257, 5

	.type	.L.str258,@object       # @.str258
.L.str258:
	.asciz	"73:0-0"
	.size	.L.str258, 7

	.type	.L.str259,@object       # @.str259
.L.str259:
	.asciz	"0:0-11"
	.size	.L.str259, 7

	.type	.L.str260,@object       # @.str260
.L.str260:
	.asciz	"9:1"
	.size	.L.str260, 4

	.type	.L.str261,@object       # @.str261
.L.str261:
	.asciz	"tw3.0"
	.size	.L.str261, 6

	.type	.L.str262,@object       # @.str262
.L.str262:
	.asciz	"86:1"
	.size	.L.str262, 5

	.type	.L.str263,@object       # @.str263
.L.str263:
	.asciz	"88"
	.size	.L.str263, 3

	.type	.L.str264,@object       # @.str264
.L.str264:
	.asciz	"87"
	.size	.L.str264, 3

	.type	.L.str265,@object       # @.str265
.L.str265:
	.asciz	"9:1-0"
	.size	.L.str265, 6

	.type	.L.str266,@object       # @.str266
.L.str266:
	.asciz	"9:1-1"
	.size	.L.str266, 6

	.type	.L.str267,@object       # @.str267
.L.str267:
	.asciz	"9:1-2"
	.size	.L.str267, 6

	.type	.L.str268,@object       # @.str268
.L.str268:
	.asciz	"9:1-3"
	.size	.L.str268, 6

	.type	.L.str269,@object       # @.str269
.L.str269:
	.asciz	"73"
	.size	.L.str269, 3

	.type	.L.str270,@object       # @.str270
.L.str270:
	.asciz	"9:1-7"
	.size	.L.str270, 6

	.type	.L.str271,@object       # @.str271
.L.str271:
	.asciz	"74"
	.size	.L.str271, 3

	.type	.L.str272,@object       # @.str272
.L.str272:
	.asciz	"75"
	.size	.L.str272, 3

	.type	.L.str273,@object       # @.str273
.L.str273:
	.asciz	"9:1-8"
	.size	.L.str273, 6

	.type	.L.str274,@object       # @.str274
.L.str274:
	.asciz	"9:1-9"
	.size	.L.str274, 6

	.type	.L.str275,@object       # @.str275
.L.str275:
	.asciz	"81:1"
	.size	.L.str275, 5

	.type	.L.str276,@object       # @.str276
.L.str276:
	.asciz	"76:1"
	.size	.L.str276, 5

	.type	.L.str277,@object       # @.str277
.L.str277:
	.asciz	"77"
	.size	.L.str277, 3

	.type	.L.str278,@object       # @.str278
.L.str278:
	.asciz	"76:1-0"
	.size	.L.str278, 7

	.type	.L.str279,@object       # @.str279
.L.str279:
	.asciz	"78"
	.size	.L.str279, 3

	.type	.L.str280,@object       # @.str280
.L.str280:
	.asciz	"76:1-1"
	.size	.L.str280, 7

	.type	.L.str281,@object       # @.str281
.L.str281:
	.asciz	"79"
	.size	.L.str281, 3

	.type	.L.str282,@object       # @.str282
.L.str282:
	.asciz	"76:1-2"
	.size	.L.str282, 7

	.type	.L.str283,@object       # @.str283
.L.str283:
	.asciz	"80"
	.size	.L.str283, 3

	.type	.L.str284,@object       # @.str284
.L.str284:
	.asciz	"76:1-3"
	.size	.L.str284, 7

	.type	.L.str285,@object       # @.str285
.L.str285:
	.asciz	"82"
	.size	.L.str285, 3

	.type	.L.str286,@object       # @.str286
.L.str286:
	.asciz	"81:1-0"
	.size	.L.str286, 7

	.type	.L.str287,@object       # @.str287
.L.str287:
	.asciz	"83"
	.size	.L.str287, 3

	.type	.L.str288,@object       # @.str288
.L.str288:
	.asciz	"81:1-1"
	.size	.L.str288, 7

	.type	.L.str289,@object       # @.str289
.L.str289:
	.asciz	"84"
	.size	.L.str289, 3

	.type	.L.str290,@object       # @.str290
.L.str290:
	.asciz	"81:1-2"
	.size	.L.str290, 7

	.type	.L.str291,@object       # @.str291
.L.str291:
	.asciz	"85"
	.size	.L.str291, 3

	.type	.L.str292,@object       # @.str292
.L.str292:
	.asciz	"81:1-3"
	.size	.L.str292, 7

	.type	.L.str293,@object       # @.str293
.L.str293:
	.asciz	"storemerge"
	.size	.L.str293, 11

	.type	.L.str294,@object       # @.str294
.L.str294:
	.asciz	"86:1-0"
	.size	.L.str294, 7

	.type	.L.str295,@object       # @.str295
.L.str295:
	.asciz	"89"
	.size	.L.str295, 3

	.type	.L.str296,@object       # @.str296
.L.str296:
	.asciz	"86:1-3"
	.size	.L.str296, 7

	.type	.L.str297,@object       # @.str297
.L.str297:
	.asciz	"90:0"
	.size	.L.str297, 5

	.type	.L.str298,@object       # @.str298
.L.str298:
	.asciz	"90:0-0"
	.size	.L.str298, 7

	.type	.L.str299,@object       # @.str299
.L.str299:
	.asciz	"25:1"
	.size	.L.str299, 5

	.type	.L.str300,@object       # @.str300
.L.str300:
	.asciz	"Fout0.06"
	.size	.L.str300, 9

	.type	.L.str301,@object       # @.str301
.L.str301:
	.asciz	"162"
	.size	.L.str301, 4

	.type	.L.str302,@object       # @.str302
.L.str302:
	.asciz	"Fout1.05"
	.size	.L.str302, 9

	.type	.L.str303,@object       # @.str303
.L.str303:
	.asciz	"163"
	.size	.L.str303, 4

	.type	.L.str304,@object       # @.str304
.L.str304:
	.asciz	"Fout2.04"
	.size	.L.str304, 9

	.type	.L.str305,@object       # @.str305
.L.str305:
	.asciz	"164"
	.size	.L.str305, 4

	.type	.L.str306,@object       # @.str306
.L.str306:
	.asciz	"Fout3.03"
	.size	.L.str306, 9

	.type	.L.str307,@object       # @.str307
.L.str307:
	.asciz	"165"
	.size	.L.str307, 4

	.type	.L.str308,@object       # @.str308
.L.str308:
	.asciz	"Fout4.02"
	.size	.L.str308, 9

	.type	.L.str309,@object       # @.str309
.L.str309:
	.asciz	"166"
	.size	.L.str309, 4

	.type	.L.str310,@object       # @.str310
.L.str310:
	.asciz	"76"
	.size	.L.str310, 3

	.type	.L.str311,@object       # @.str311
.L.str311:
	.asciz	"sext"
	.size	.L.str311, 5

	.type	.L.str312,@object       # @.str312
.L.str312:
	.asciz	"81"
	.size	.L.str312, 3

	.type	.L.str313,@object       # @.str313
.L.str313:
	.asciz	"86"
	.size	.L.str313, 3

	.type	.L.str314,@object       # @.str314
.L.str314:
	.asciz	"90"
	.size	.L.str314, 3

	.type	.L.str315,@object       # @.str315
.L.str315:
	.asciz	"91"
	.size	.L.str315, 3

	.type	.L.str316,@object       # @.str316
.L.str316:
	.asciz	"92"
	.size	.L.str316, 3

	.type	.L.str317,@object       # @.str317
.L.str317:
	.asciz	"93"
	.size	.L.str317, 3

	.type	.L.str318,@object       # @.str318
.L.str318:
	.asciz	"94"
	.size	.L.str318, 3

	.type	.L.str319,@object       # @.str319
.L.str319:
	.asciz	"95"
	.size	.L.str319, 3

	.type	.L.str320,@object       # @.str320
.L.str320:
	.asciz	"96"
	.size	.L.str320, 3

	.type	.L.str321,@object       # @.str321
.L.str321:
	.asciz	"97"
	.size	.L.str321, 3

	.type	.L.str322,@object       # @.str322
.L.str322:
	.asciz	"98"
	.size	.L.str322, 3

	.type	.L.str323,@object       # @.str323
.L.str323:
	.asciz	"99"
	.size	.L.str323, 3

	.type	.L.str324,@object       # @.str324
.L.str324:
	.asciz	"100"
	.size	.L.str324, 4

	.type	.L.str325,@object       # @.str325
.L.str325:
	.asciz	"101"
	.size	.L.str325, 4

	.type	.L.str326,@object       # @.str326
.L.str326:
	.asciz	"102"
	.size	.L.str326, 4

	.type	.L.str327,@object       # @.str327
.L.str327:
	.asciz	"103"
	.size	.L.str327, 4

	.type	.L.str328,@object       # @.str328
.L.str328:
	.asciz	"104"
	.size	.L.str328, 4

	.type	.L.str329,@object       # @.str329
.L.str329:
	.asciz	"105"
	.size	.L.str329, 4

	.type	.L.str330,@object       # @.str330
.L.str330:
	.asciz	"106"
	.size	.L.str330, 4

	.type	.L.str331,@object       # @.str331
.L.str331:
	.asciz	"107"
	.size	.L.str331, 4

	.type	.L.str332,@object       # @.str332
.L.str332:
	.asciz	"108"
	.size	.L.str332, 4

	.type	.L.str333,@object       # @.str333
.L.str333:
	.asciz	"109"
	.size	.L.str333, 4

	.type	.L.str334,@object       # @.str334
.L.str334:
	.asciz	"110"
	.size	.L.str334, 4

	.type	.L.str335,@object       # @.str335
.L.str335:
	.asciz	"111"
	.size	.L.str335, 4

	.type	.L.str336,@object       # @.str336
.L.str336:
	.asciz	"112"
	.size	.L.str336, 4

	.type	.L.str337,@object       # @.str337
.L.str337:
	.asciz	"113"
	.size	.L.str337, 4

	.type	.L.str338,@object       # @.str338
.L.str338:
	.asciz	"114"
	.size	.L.str338, 4

	.type	.L.str339,@object       # @.str339
.L.str339:
	.asciz	"115"
	.size	.L.str339, 4

	.type	.L.str340,@object       # @.str340
.L.str340:
	.asciz	"116"
	.size	.L.str340, 4

	.type	.L.str341,@object       # @.str341
.L.str341:
	.asciz	"117"
	.size	.L.str341, 4

	.type	.L.str342,@object       # @.str342
.L.str342:
	.asciz	"118"
	.size	.L.str342, 4

	.type	.L.str343,@object       # @.str343
.L.str343:
	.asciz	"119"
	.size	.L.str343, 4

	.type	.L.str344,@object       # @.str344
.L.str344:
	.asciz	"120"
	.size	.L.str344, 4

	.type	.L.str345,@object       # @.str345
.L.str345:
	.asciz	"121"
	.size	.L.str345, 4

	.type	.L.str346,@object       # @.str346
.L.str346:
	.asciz	"25:1-0"
	.size	.L.str346, 7

	.type	.L.str347,@object       # @.str347
.L.str347:
	.asciz	"122"
	.size	.L.str347, 4

	.type	.L.str348,@object       # @.str348
.L.str348:
	.asciz	"123"
	.size	.L.str348, 4

	.type	.L.str349,@object       # @.str349
.L.str349:
	.asciz	"124"
	.size	.L.str349, 4

	.type	.L.str350,@object       # @.str350
.L.str350:
	.asciz	"25:1-1"
	.size	.L.str350, 7

	.type	.L.str351,@object       # @.str351
.L.str351:
	.asciz	"125"
	.size	.L.str351, 4

	.type	.L.str352,@object       # @.str352
.L.str352:
	.asciz	"126"
	.size	.L.str352, 4

	.type	.L.str353,@object       # @.str353
.L.str353:
	.asciz	"127"
	.size	.L.str353, 4

	.type	.L.str354,@object       # @.str354
.L.str354:
	.asciz	"128"
	.size	.L.str354, 4

	.type	.L.str355,@object       # @.str355
.L.str355:
	.asciz	"129"
	.size	.L.str355, 4

	.type	.L.str356,@object       # @.str356
.L.str356:
	.asciz	"130"
	.size	.L.str356, 4

	.type	.L.str357,@object       # @.str357
.L.str357:
	.asciz	"131"
	.size	.L.str357, 4

	.type	.L.str358,@object       # @.str358
.L.str358:
	.asciz	"132"
	.size	.L.str358, 4

	.type	.L.str359,@object       # @.str359
.L.str359:
	.asciz	"133"
	.size	.L.str359, 4

	.type	.L.str360,@object       # @.str360
.L.str360:
	.asciz	"134"
	.size	.L.str360, 4

	.type	.L.str361,@object       # @.str361
.L.str361:
	.asciz	"135"
	.size	.L.str361, 4

	.type	.L.str362,@object       # @.str362
.L.str362:
	.asciz	"136"
	.size	.L.str362, 4

	.type	.L.str363,@object       # @.str363
.L.str363:
	.asciz	"137"
	.size	.L.str363, 4

	.type	.L.str364,@object       # @.str364
.L.str364:
	.asciz	"138"
	.size	.L.str364, 4

	.type	.L.str365,@object       # @.str365
.L.str365:
	.asciz	"139"
	.size	.L.str365, 4

	.type	.L.str366,@object       # @.str366
.L.str366:
	.asciz	"140"
	.size	.L.str366, 4

	.type	.L.str367,@object       # @.str367
.L.str367:
	.asciz	"25:1-2"
	.size	.L.str367, 7

	.type	.L.str368,@object       # @.str368
.L.str368:
	.asciz	"141"
	.size	.L.str368, 4

	.type	.L.str369,@object       # @.str369
.L.str369:
	.asciz	"25:1-3"
	.size	.L.str369, 7

	.type	.L.str370,@object       # @.str370
.L.str370:
	.asciz	"142"
	.size	.L.str370, 4

	.type	.L.str371,@object       # @.str371
.L.str371:
	.asciz	"25:1-4"
	.size	.L.str371, 7

	.type	.L.str372,@object       # @.str372
.L.str372:
	.asciz	"143"
	.size	.L.str372, 4

	.type	.L.str373,@object       # @.str373
.L.str373:
	.asciz	"25:1-5"
	.size	.L.str373, 7

	.type	.L.str374,@object       # @.str374
.L.str374:
	.asciz	"144"
	.size	.L.str374, 4

	.type	.L.str375,@object       # @.str375
.L.str375:
	.asciz	"145"
	.size	.L.str375, 4

	.type	.L.str376,@object       # @.str376
.L.str376:
	.asciz	"146"
	.size	.L.str376, 4

	.type	.L.str377,@object       # @.str377
.L.str377:
	.asciz	"147"
	.size	.L.str377, 4

	.type	.L.str378,@object       # @.str378
.L.str378:
	.asciz	"148"
	.size	.L.str378, 4

	.type	.L.str379,@object       # @.str379
.L.str379:
	.asciz	"149"
	.size	.L.str379, 4

	.type	.L.str380,@object       # @.str380
.L.str380:
	.asciz	"150"
	.size	.L.str380, 4

	.type	.L.str381,@object       # @.str381
.L.str381:
	.asciz	"151"
	.size	.L.str381, 4

	.type	.L.str382,@object       # @.str382
.L.str382:
	.asciz	"152"
	.size	.L.str382, 4

	.type	.L.str383,@object       # @.str383
.L.str383:
	.asciz	"153"
	.size	.L.str383, 4

	.type	.L.str384,@object       # @.str384
.L.str384:
	.asciz	"154"
	.size	.L.str384, 4

	.type	.L.str385,@object       # @.str385
.L.str385:
	.asciz	"155"
	.size	.L.str385, 4

	.type	.L.str386,@object       # @.str386
.L.str386:
	.asciz	"156"
	.size	.L.str386, 4

	.type	.L.str387,@object       # @.str387
.L.str387:
	.asciz	"157"
	.size	.L.str387, 4

	.type	.L.str388,@object       # @.str388
.L.str388:
	.asciz	"158"
	.size	.L.str388, 4

	.type	.L.str389,@object       # @.str389
.L.str389:
	.asciz	"25:1-6"
	.size	.L.str389, 7

	.type	.L.str390,@object       # @.str390
.L.str390:
	.asciz	"159"
	.size	.L.str390, 4

	.type	.L.str391,@object       # @.str391
.L.str391:
	.asciz	"25:1-7"
	.size	.L.str391, 7

	.type	.L.str392,@object       # @.str392
.L.str392:
	.asciz	"160"
	.size	.L.str392, 4

	.type	.L.str393,@object       # @.str393
.L.str393:
	.asciz	"25:1-8"
	.size	.L.str393, 7

	.type	.L.str394,@object       # @.str394
.L.str394:
	.asciz	"161"
	.size	.L.str394, 4

	.type	.L.str395,@object       # @.str395
.L.str395:
	.asciz	"25:1-9"
	.size	.L.str395, 7

	.type	.L.str396,@object       # @.str396
.L.str396:
	.asciz	"25:1-15"
	.size	.L.str396, 8

	.type	.L.str397,@object       # @.str397
.L.str397:
	.asciz	"p"
	.size	.L.str397, 2

	.type	.L.str398,@object       # @.str398
	.align	16
.L.str398:
	.asciz	".preheader.lr.ph:0"
	.size	.L.str398, 19

	.type	.L.str399,@object       # @.str399
.L.str399:
	.asciz	"._crit_edge11:0"
	.size	.L.str399, 16

	.type	.L.str400,@object       # @.str400
	.align	16
.L.str400:
	.asciz	".preheader.lr.ph:0-0"
	.size	.L.str400, 21

	.type	.L.str401,@object       # @.str401
.L.str401:
	.asciz	".preheader:1"
	.size	.L.str401, 13

	.type	.L.str402,@object       # @.str402
.L.str402:
	.asciz	"indvars.iv20"
	.size	.L.str402, 13

	.type	.L.str403,@object       # @.str403
	.align	16
.L.str403:
	.asciz	"indvars.iv.next21"
	.size	.L.str403, 18

	.type	.L.str404,@object       # @.str404
.L.str404:
	.asciz	"._crit_edge9:1"
	.size	.L.str404, 15

	.type	.L.str405,@object       # @.str405
.L.str405:
	.asciz	".preheader:1-0"
	.size	.L.str405, 15

	.type	.L.str406,@object       # @.str406
.L.str406:
	.asciz	"indvars.iv14"
	.size	.L.str406, 13

	.type	.L.str407,@object       # @.str407
	.align	16
.L.str407:
	.asciz	"indvars.iv.next15"
	.size	.L.str407, 18

	.type	.L.str408,@object       # @.str408
.L.str408:
	.asciz	"indvars.iv12"
	.size	.L.str408, 13

	.type	.L.str409,@object       # @.str409
	.align	16
.L.str409:
	.asciz	"indvars.iv.next13"
	.size	.L.str409, 18

	.type	.L.str410,@object       # @.str410
.L.str410:
	.asciz	".lr.ph8:1"
	.size	.L.str410, 10

	.type	.L.str411,@object       # @.str411
.L.str411:
	.asciz	".lr.ph8:1-0"
	.size	.L.str411, 12

	.type	.L.str412,@object       # @.str412
.L.str412:
	.asciz	"20:2"
	.size	.L.str412, 5

	.type	.L.str413,@object       # @.str413
.L.str413:
	.asciz	"indvars.iv22"
	.size	.L.str413, 13

	.type	.L.str414,@object       # @.str414
	.align	16
.L.str414:
	.asciz	"indvars.iv.next23"
	.size	.L.str414, 18

	.type	.L.str415,@object       # @.str415
.L.str415:
	.asciz	"._crit_edge:2"
	.size	.L.str415, 14

	.type	.L.str416,@object       # @.str416
.L.str416:
	.asciz	"q1.16"
	.size	.L.str416, 6

	.type	.L.str417,@object       # @.str417
.L.str417:
	.asciz	"20:2-1"
	.size	.L.str417, 7

	.type	.L.str418,@object       # @.str418
.L.str418:
	.asciz	"20:2-3"
	.size	.L.str418, 7

	.type	.L.str419,@object       # @.str419
.L.str419:
	.asciz	".lr.ph5:2"
	.size	.L.str419, 10

	.type	.L.str420,@object       # @.str420
.L.str420:
	.asciz	".lr.ph5:2-0"
	.size	.L.str420, 12

	.type	.L.str421,@object       # @.str421
.L.str421:
	.asciz	"26:3"
	.size	.L.str421, 5

	.type	.L.str422,@object       # @.str422
.L.str422:
	.asciz	"indvars.iv16"
	.size	.L.str422, 13

	.type	.L.str423,@object       # @.str423
	.align	16
.L.str423:
	.asciz	"indvars.iv.next17"
	.size	.L.str423, 18

	.type	.L.str424,@object       # @.str424
.L.str424:
	.asciz	"twidx.04"
	.size	.L.str424, 9

	.type	.L.str425,@object       # @.str425
.L.str425:
	.asciz	"."
	.size	.L.str425, 2

	.type	.L.str426,@object       # @.str426
.L.str426:
	.asciz	"26:3-1"
	.size	.L.str426, 7

	.type	.L.str427,@object       # @.str427
.L.str427:
	.asciz	"26:3-2"
	.size	.L.str427, 7

	.type	.L.str428,@object       # @.str428
.L.str428:
	.asciz	"lftr.wideiv18"
	.size	.L.str428, 14

	.type	.L.str429,@object       # @.str429
.L.str429:
	.asciz	"exitcond19"
	.size	.L.str429, 11

	.type	.L.str430,@object       # @.str430
.L.str430:
	.asciz	"26:3-3"
	.size	.L.str430, 7

	.type	.L.str431,@object       # @.str431
.L.str431:
	.asciz	"exitcond24"
	.size	.L.str431, 11

	.type	.L.str432,@object       # @.str432
.L.str432:
	.asciz	"._crit_edge:2-1"
	.size	.L.str432, 16

	.type	.L.str433,@object       # @.str433
.L.str433:
	.asciz	"lftr.wideiv25"
	.size	.L.str433, 14

	.type	.L.str434,@object       # @.str434
.L.str434:
	.asciz	"exitcond26"
	.size	.L.str434, 11

	.type	.L.str435,@object       # @.str435
	.align	16
.L.str435:
	.asciz	"._crit_edge9:1-0"
	.size	.L.str435, 17

	.type	.L.str436,@object       # @.str436
	.align	16
.L.str436:
	.asciz	"._crit_edge11:0-0"
	.size	.L.str436, 18

	.type	.L.str437,@object       # @.str437
.L.str437:
	.asciz	"free"
	.size	.L.str437, 5

	.type	.L.str438,@object       # @.str438
	.align	16
.L.str438:
	.asciz	"._crit_edge11:0-1"
	.size	.L.str438, 18

	.type	initp,@object           # @initp
	.bss
	.globl	initp
initp:
	.byte	0                       # 0x0
	.size	initp, 1

	.type	inst_count,@object      # @inst_count
	.globl	inst_count
	.align	4
inst_count:
	.long	0                       # 0x0
	.size	inst_count, 4

	.type	.L.str439,@object       # @.str439
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str439:
	.asciz	"%%%% LABEL MAP START %%%%\n"
	.size	.L.str439, 27

	.type	.L.str1440,@object      # @.str1440
.L.str1440:
	.asciz	"%%%% LABEL MAP END %%%%\n\n"
	.size	.L.str1440, 26

	.type	full_trace_file,@object # @full_trace_file
	.comm	full_trace_file,8,8
	.type	.L.str2441,@object      # @.str2441
.L.str2441:
	.asciz	"dynamic_trace.gz"
	.size	.L.str2441, 17

	.type	.L.str3442,@object      # @.str3442
.L.str3442:
	.asciz	"w"
	.size	.L.str3442, 2

	.type	.L.str4443,@object      # @.str4443
.L.str4443:
	.asciz	"Failed to open logfile \"dynamic_trace\""
	.size	.L.str4443, 39

	.type	current_toplevel_function,@object # @current_toplevel_function
	.comm	current_toplevel_function,8,8
	.type	current_logging_status,@object # @current_logging_status
	.comm	current_logging_status,4,4
	.type	.L.str5444,@object      # @.str5444
.L.str5444:
	.asciz	"false && \"Returning from within a toplevel function before it was called!\""
	.size	.L.str5444, 75

	.type	.L.str6445,@object      # @.str6445
.L.str6445:
	.asciz	"/workspace/LLVM-Tracer/profile-func/trace_logger.c"
	.size	.L.str6445, 51

	.type	.L__PRETTY_FUNCTION__.log_or_not,@object # @__PRETTY_FUNCTION__.log_or_not
.L__PRETTY_FUNCTION__.log_or_not:
	.asciz	"logging_status log_or_not(_Bool, _Bool, int, char *)"
	.size	.L__PRETTY_FUNCTION__.log_or_not, 53

	.type	.L.str7446,@object      # @.str7446
.L.str7446:
	.asciz	"false && \"Cannot call a top level function from within another one!\""
	.size	.L.str7446, 69

	.type	.L.str8447,@object      # @.str8447
.L.str8447:
	.asciz	"0x"
	.size	.L.str8447, 3

	.type	.L.str9448,@object      # @.str9448
.L.str9448:
	.asciz	"%02x"
	.size	.L.str9448, 5

	.type	.L.str10449,@object     # @.str10449
.L.str10449:
	.asciz	"Stopping logging at inst %d.\n"
	.size	.L.str10449, 30

	.type	.L.str11450,@object     # @.str11450
.L.str11450:
	.asciz	"Starting to log at inst = %d.\n"
	.size	.L.str11450, 31

	.type	.L.str12451,@object     # @.str12451
.L.str12451:
	.asciz	"\nentry,%s,%d,\n"
	.size	.L.str12451, 15

	.type	.L.str13452,@object     # @.str13452
.L.str13452:
	.asciz	"\n0,%d,%s,%s,%s,%d,%d\n"
	.size	.L.str13452, 22

	.type	.L.str14453,@object     # @.str14453
.L.str14453:
	.asciz	"initp == true"
	.size	.L.str14453, 14

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_int,@object # @__PRETTY_FUNCTION__.trace_logger_log_int
.L__PRETTY_FUNCTION__.trace_logger_log_int:
	.asciz	"void trace_logger_log_int(int, int, int64_t, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_int, 71

	.type	.L.str15454,@object     # @.str15454
.L.str15454:
	.asciz	"r,%d,%ld,%d"
	.size	.L.str15454, 12

	.type	.L.str16455,@object     # @.str16455
.L.str16455:
	.asciz	"f,%d,%ld,%d"
	.size	.L.str16455, 12

	.type	.L.str17456,@object     # @.str17456
.L.str17456:
	.asciz	"%d,%d,%ld,%d"
	.size	.L.str17456, 13

	.type	.L.str18457,@object     # @.str18457
.L.str18457:
	.asciz	",%s"
	.size	.L.str18457, 4

	.type	.L.str19458,@object     # @.str19458
.L.str19458:
	.asciz	", "
	.size	.L.str19458, 3

	.type	.L.str20459,@object     # @.str20459
.L.str20459:
	.asciz	",%s,\n"
	.size	.L.str20459, 6

	.type	.L.str21460,@object     # @.str21460
.L.str21460:
	.asciz	",\n"
	.size	.L.str21460, 3

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_ptr,@object # @__PRETTY_FUNCTION__.trace_logger_log_ptr
.L__PRETTY_FUNCTION__.trace_logger_log_ptr:
	.asciz	"void trace_logger_log_ptr(int, int, uint64_t, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_ptr, 72

	.type	.L.str22461,@object     # @.str22461
.L.str22461:
	.asciz	"r,%d,%#llx,%d"
	.size	.L.str22461, 14

	.type	.L.str23462,@object     # @.str23462
.L.str23462:
	.asciz	"f,%d,%#llx,%d"
	.size	.L.str23462, 14

	.type	.L.str24463,@object     # @.str24463
.L.str24463:
	.asciz	"%d,%d,%#llx,%d"
	.size	.L.str24463, 15

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_double,@object # @__PRETTY_FUNCTION__.trace_logger_log_double
.L__PRETTY_FUNCTION__.trace_logger_log_double:
	.asciz	"void trace_logger_log_double(int, int, double, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_double, 73

	.type	.L.str25464,@object     # @.str25464
.L.str25464:
	.asciz	"r,%d,%f,%d"
	.size	.L.str25464, 11

	.type	.L.str26465,@object     # @.str26465
.L.str26465:
	.asciz	"f,%d,%f,%d"
	.size	.L.str26465, 11

	.type	.L.str27466,@object     # @.str27466
.L.str27466:
	.asciz	"%d,%d,%f,%d"
	.size	.L.str27466, 12

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_vector,@object # @__PRETTY_FUNCTION__.trace_logger_log_vector
.L__PRETTY_FUNCTION__.trace_logger_log_vector:
	.asciz	"void trace_logger_log_vector(int, int, uint8_t *, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_vector, 76

	.type	.L.str28467,@object     # @.str28467
.L.str28467:
	.asciz	"r,%d,%s,%d"
	.size	.L.str28467, 11

	.type	.L.str29468,@object     # @.str29468
.L.str29468:
	.asciz	"f,%d,%s,%d"
	.size	.L.str29468, 11

	.type	.L.str30469,@object     # @.str30469
.L.str30469:
	.asciz	"%d,%d,%s,%d"
	.size	.L.str30469, 12

	.text
.Ldebug_end0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
.Linfo_string1:
	.asciz	"feature_extraction.c"
.Linfo_string2:
	.asciz	"/workspace/gem5-aladdin/src/aladdin/integration-test/with-cpu/feature_extraction"
.Linfo_string3:
	.asciz	"test_stores"
.Linfo_string4:
	.asciz	"int"
.Linfo_string5:
	.asciz	"process_data"
.Linfo_string6:
	.asciz	"main"
.Linfo_string7:
	.asciz	"kiss_fft.c"
.Linfo_string8:
	.asciz	"pi"
.Linfo_string9:
	.asciz	"double"
.Linfo_string10:
	.asciz	"kiss_fft_alloc"
.Linfo_string11:
	.asciz	"nfft"
.Linfo_string12:
	.asciz	"inverse"
.Linfo_string13:
	.asciz	"factors"
.Linfo_string14:
	.asciz	"twiddles"
.Linfo_string15:
	.asciz	"r"
.Linfo_string16:
	.asciz	"float"
.Linfo_string17:
	.asciz	"i"
.Linfo_string18:
	.asciz	"kiss_fft_cpx"
.Linfo_string19:
	.asciz	"kiss_fft_state"
.Linfo_string20:
	.asciz	"kiss_fft_cfg"
.Linfo_string21:
	.asciz	"kiss_fft_stride"
.Linfo_string22:
	.asciz	"kiss_fft"
.Linfo_string23:
	.asciz	"kiss_fft_cleanup"
.Linfo_string24:
	.asciz	"kiss_fft_next_fast_size"
.Linfo_string25:
	.asciz	"kf_work"
.Linfo_string26:
	.asciz	"kf_bfly_generic"
.Linfo_string27:
	.asciz	"kf_bfly5"
.Linfo_string28:
	.asciz	"kf_bfly4"
.Linfo_string29:
	.asciz	"kf_bfly3"
.Linfo_string30:
	.asciz	"kf_bfly2"
.Linfo_string31:
	.asciz	"kf_factor"
.Linfo_string32:
	.asciz	"time_data"
.Linfo_string33:
	.asciz	"freq_data"
.Linfo_string34:
	.asciz	"n_samples"
.Linfo_string35:
	.asciz	"n_channels"
.Linfo_string36:
	.asciz	"j"
.Linfo_string37:
	.asciz	"cfg"
.Linfo_string38:
	.asciz	"out"
.Linfo_string39:
	.asciz	"in"
.Linfo_string40:
	.asciz	"channel"
.Linfo_string41:
	.asciz	"num_failures"
.Linfo_string42:
	.asciz	"inverse_fft"
.Linfo_string43:
	.asciz	"mem"
.Linfo_string44:
	.asciz	"lenmem"
.Linfo_string45:
	.asciz	"long unsigned int"
.Linfo_string46:
	.asciz	"size_t"
.Linfo_string47:
	.asciz	"memneeded"
.Linfo_string48:
	.asciz	"st"
.Linfo_string49:
	.asciz	"phase"
.Linfo_string50:
	.asciz	"fin"
.Linfo_string51:
	.asciz	"fout"
.Linfo_string52:
	.asciz	"in_stride"
.Linfo_string53:
	.asciz	"n"
.Linfo_string54:
	.asciz	"m"
.Linfo_string55:
	.asciz	"facbuf"
.Linfo_string56:
	.asciz	"p"
.Linfo_string57:
	.asciz	"floor_sqrt"
.Linfo_string58:
	.asciz	"Fout"
.Linfo_string59:
	.asciz	"f"
.Linfo_string60:
	.asciz	"fstride"
.Linfo_string61:
	.asciz	"Fout_beg"
.Linfo_string62:
	.asciz	"f_beg"
.Linfo_string63:
	.asciz	"Fout_end"
.Linfo_string64:
	.asciz	"Norig"
.Linfo_string65:
	.asciz	"scratch"
.Linfo_string66:
	.asciz	"u"
.Linfo_string67:
	.asciz	"q"
.Linfo_string68:
	.asciz	"q1"
.Linfo_string69:
	.asciz	"k"
.Linfo_string70:
	.asciz	"t"
.Linfo_string71:
	.asciz	"twidx"
.Linfo_string72:
	.asciz	"Fout0"
.Linfo_string73:
	.asciz	"Fout1"
.Linfo_string74:
	.asciz	"Fout2"
.Linfo_string75:
	.asciz	"Fout3"
.Linfo_string76:
	.asciz	"Fout4"
.Linfo_string77:
	.asciz	"ya"
.Linfo_string78:
	.asciz	"yb"
.Linfo_string79:
	.asciz	"m2"
.Linfo_string80:
	.asciz	"m3"
.Linfo_string81:
	.asciz	"tw1"
.Linfo_string82:
	.asciz	"tw2"
.Linfo_string83:
	.asciz	"tw3"
.Linfo_string84:
	.asciz	"epi3"
	.section	.debug_info,"",@progbits
.L.debug_info_begin0:
	.long	703                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.L.debug_abbrev_begin   # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x2b8 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.quad	0                       # DW_AT_low_pc
	.long	.Lsection_line          # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.byte	2                       # Abbrev [2] 0x26:0x8f DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	181                     # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.quad	.Lfunc_end0             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x43:0xf DW_TAG_formal_parameter
	.long	.Linfo_string32         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc0            # DW_AT_location
	.byte	3                       # Abbrev [3] 0x52:0xf DW_TAG_formal_parameter
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc2            # DW_AT_location
	.byte	3                       # Abbrev [3] 0x61:0xf DW_TAG_formal_parameter
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.long	.Ldebug_loc4            # DW_AT_location
	.byte	3                       # Abbrev [3] 0x70:0xf DW_TAG_formal_parameter
	.long	.Linfo_string35         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.long	.Ldebug_loc6            # DW_AT_location
	.byte	4                       # Abbrev [4] 0x7f:0x35 DW_TAG_lexical_block
	.quad	.Ltmp21                 # DW_AT_low_pc
	.quad	.Ltmp35                 # DW_AT_high_pc
	.byte	5                       # Abbrev [5] 0x90:0xc DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	6                       # Abbrev [6] 0x9c:0x17 DW_TAG_lexical_block
	.long	.Ldebug_range+48        # DW_AT_ranges
	.byte	6                       # Abbrev [6] 0xa1:0x11 DW_TAG_lexical_block
	.long	.Ldebug_range           # DW_AT_ranges
	.byte	7                       # Abbrev [7] 0xa6:0xb DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0xb5:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	9                       # Abbrev [9] 0xbc:0xc6 DW_TAG_subprogram
	.long	.Linfo_string5          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.quad	.Lfunc_end1             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0xd5:0xf DW_TAG_formal_parameter
	.long	.Linfo_string32         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc8            # DW_AT_location
	.byte	3                       # Abbrev [3] 0xe4:0xf DW_TAG_formal_parameter
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc11           # DW_AT_location
	.byte	3                       # Abbrev [3] 0xf3:0xf DW_TAG_formal_parameter
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.long	.Ldebug_loc14           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x102:0xf DW_TAG_formal_parameter
	.long	.Linfo_string35         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.long	.Ldebug_loc17           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x111:0xf DW_TAG_formal_parameter
	.long	.Linfo_string37         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	555                     # DW_AT_type
	.long	.Ldebug_loc20           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x120:0xf DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	695                     # DW_AT_type
	.long	.Ldebug_loc23           # DW_AT_location
	.byte	7                       # Abbrev [7] 0x12f:0xb DW_TAG_variable
	.long	.Linfo_string39         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	695                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x13a:0x47 DW_TAG_lexical_block
	.quad	.Ltmp55                 # DW_AT_low_pc
	.quad	.Ltmp69                 # DW_AT_high_pc
	.byte	5                       # Abbrev [5] 0x14b:0xc DW_TAG_variable
	.long	.Linfo_string40         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	6                       # Abbrev [6] 0x157:0x29 DW_TAG_lexical_block
	.long	.Ldebug_range+192       # DW_AT_ranges
	.byte	6                       # Abbrev [6] 0x15c:0x11 DW_TAG_lexical_block
	.long	.Ldebug_range+96        # DW_AT_ranges
	.byte	7                       # Abbrev [7] 0x161:0xb DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x16d:0x12 DW_TAG_lexical_block
	.long	.Ldebug_range+144       # DW_AT_ranges
	.byte	5                       # Abbrev [5] 0x172:0xc DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	11                      # Abbrev [11] 0x182:0xa4 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.quad	.Lfunc_end2             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	10                      # Abbrev [10] 0x19f:0xf DW_TAG_variable
	.long	.Linfo_string32         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	71                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc25           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x1ae:0xf DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	550                     # DW_AT_type
	.long	.Ldebug_loc27           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x1bd:0xf DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	91                      # DW_AT_decl_line
	.long	555                     # DW_AT_type
	.long	.Ldebug_loc29           # DW_AT_location
	.byte	5                       # Abbrev [5] 0x1cc:0xc DW_TAG_variable
	.long	.Linfo_string41         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	110                     # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	4                       # Abbrev [4] 0x1d8:0x4d DW_TAG_lexical_block
	.quad	.Ltmp95                 # DW_AT_low_pc
	.quad	.Ltmp102                # DW_AT_high_pc
	.byte	5                       # Abbrev [5] 0x1e9:0xc DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	4                       # Abbrev [4] 0x1f5:0x2f DW_TAG_lexical_block
	.quad	.Ltmp97                 # DW_AT_low_pc
	.quad	.Ltmp101                # DW_AT_high_pc
	.byte	4                       # Abbrev [4] 0x206:0x1d DW_TAG_lexical_block
	.quad	.Ltmp97                 # DW_AT_low_pc
	.quad	.Ltmp101                # DW_AT_high_pc
	.byte	7                       # Abbrev [7] 0x217:0xb DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	77                      # DW_AT_decl_line
	.long	181                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	12                      # Abbrev [12] 0x226:0x5 DW_TAG_pointer_type
	.long	181                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x22b:0xb DW_TAG_typedef
	.long	566                     # DW_AT_type
	.long	.Linfo_string20         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	12                      # Abbrev [12] 0x236:0x5 DW_TAG_pointer_type
	.long	571                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x23b:0x3f DW_TAG_structure_type
	.long	.Linfo_string19         # DW_AT_name
	.short	272                     # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.byte	15                      # Abbrev [15] 0x244:0xd DW_TAG_member
	.long	.Linfo_string11         # DW_AT_name
	.long	181                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	15                      # Abbrev [15] 0x251:0xd DW_TAG_member
	.long	.Linfo_string12         # DW_AT_name
	.long	181                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	16                      # Abbrev [16] 0x25e:0xd DW_TAG_member
	.long	.Linfo_string13         # DW_AT_name
	.long	.Lsection_info+1085     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	17                      # Abbrev [17] 0x26b:0xe DW_TAG_member
	.long	.Linfo_string14         # DW_AT_name
	.long	634                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.short	264                     # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x27a:0xc DW_TAG_array_type
	.long	646                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x27f:0x6 DW_TAG_subrange_type
	.long	688                     # DW_AT_type
	.byte	0                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x286:0xb DW_TAG_typedef
	.long	657                     # DW_AT_type
	.long	.Linfo_string18         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	20                      # Abbrev [20] 0x291:0x1f DW_TAG_structure_type
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	16                      # Abbrev [16] 0x295:0xd DW_TAG_member
	.long	.Linfo_string15         # DW_AT_name
	.long	.Lsection_info+1158     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	16                      # Abbrev [16] 0x2a2:0xd DW_TAG_member
	.long	.Linfo_string17         # DW_AT_name
	.long	.Lsection_info+1158     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x2b0:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # DW_AT_encoding
	.byte	18                      # Abbrev [18] 0x2b7:0xb DW_TAG_array_type
	.long	646                     # DW_AT_type
	.byte	22                      # Abbrev [22] 0x2bc:0x5 DW_TAG_subrange_type
	.long	688                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.L.debug_info_end0:
.L.debug_info_begin1:
	.long	2054                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.L.debug_abbrev_begin   # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x7ff DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string7          # DW_AT_name
	.quad	0                       # DW_AT_low_pc
	.long	.Lsection_line          # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.byte	23                      # Abbrev [23] 0x26:0xc DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.long	50                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	366                     # DW_AT_decl_line
	.byte	24                      # Abbrev [24] 0x32:0x5 DW_TAG_const_type
	.long	55                      # DW_AT_type
	.byte	8                       # Abbrev [8] 0x37:0x7 DW_TAG_base_type
	.long	.Linfo_string9          # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	25                      # Abbrev [25] 0x3e:0xed DW_TAG_subprogram
	.long	.Linfo_string10         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	347                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	299                     # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.quad	.Lfunc_end3             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	26                      # Abbrev [26] 0x5c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string11         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	347                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc31           # DW_AT_location
	.byte	26                      # Abbrev [26] 0x6c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string42         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	347                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc33           # DW_AT_location
	.byte	27                      # Abbrev [27] 0x7c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string43         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	347                     # DW_AT_decl_line
	.long	1957                    # DW_AT_type
	.long	.Ldebug_loc35           # DW_AT_location
	.byte	27                      # Abbrev [27] 0x8c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	347                     # DW_AT_decl_line
	.long	1958                    # DW_AT_type
	.long	.Ldebug_loc37           # DW_AT_location
	.byte	28                      # Abbrev [28] 0x9c:0x10 DW_TAG_variable
	.long	.Linfo_string47         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	350                     # DW_AT_decl_line
	.long	1963                    # DW_AT_type
	.long	.Ldebug_loc39           # DW_AT_location
	.byte	28                      # Abbrev [28] 0xac:0x10 DW_TAG_variable
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	349                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.long	.Ldebug_loc41           # DW_AT_location
	.byte	4                       # Abbrev [4] 0xbc:0x6e DW_TAG_lexical_block
	.quad	.Ltmp139                # DW_AT_low_pc
	.quad	.Ltmp153                # DW_AT_high_pc
	.byte	4                       # Abbrev [4] 0xcd:0x5c DW_TAG_lexical_block
	.quad	.Ltmp140                # DW_AT_low_pc
	.quad	.Ltmp153                # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xde:0xd DW_TAG_variable
	.long	.Linfo_string17         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	361                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	4                       # Abbrev [4] 0xeb:0x3d DW_TAG_lexical_block
	.quad	.Ltmp141                # DW_AT_low_pc
	.quad	.Ltmp152                # DW_AT_high_pc
	.byte	6                       # Abbrev [6] 0xfc:0x2b DW_TAG_lexical_block
	.long	.Ldebug_range+240       # DW_AT_ranges
	.byte	30                      # Abbrev [30] 0x101:0x15 DW_TAG_variable
	.long	.Linfo_string8          # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	366                     # DW_AT_decl_line
	.long	50                      # DW_AT_type
	.byte	8                       # DW_AT_const_value
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64
	.byte	28                      # Abbrev [28] 0x116:0x10 DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	367                     # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc44           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x12b:0xb DW_TAG_typedef
	.long	310                     # DW_AT_type
	.long	.Linfo_string20         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	12                      # Abbrev [12] 0x136:0x5 DW_TAG_pointer_type
	.long	315                     # DW_AT_type
	.byte	14                      # Abbrev [14] 0x13b:0x3f DW_TAG_structure_type
	.long	.Linfo_string19         # DW_AT_name
	.short	272                     # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.byte	16                      # Abbrev [16] 0x144:0xd DW_TAG_member
	.long	.Linfo_string11         # DW_AT_name
	.long	.Lsection_info+181      # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	16                      # Abbrev [16] 0x151:0xd DW_TAG_member
	.long	.Linfo_string12         # DW_AT_name
	.long	.Lsection_info+181      # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	15                      # Abbrev [15] 0x15e:0xd DW_TAG_member
	.long	.Linfo_string13         # DW_AT_name
	.long	378                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	17                      # Abbrev [17] 0x16b:0xe DW_TAG_member
	.long	.Linfo_string14         # DW_AT_name
	.long	397                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.short	264                     # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	31                      # Abbrev [31] 0x17a:0xc DW_TAG_array_type
	.long	.Lsection_info+181      # DW_AT_type
	.byte	19                      # Abbrev [19] 0x17f:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	63                      # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	21                      # Abbrev [21] 0x186:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # DW_AT_encoding
	.byte	18                      # Abbrev [18] 0x18d:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x192:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	0                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x199:0xb DW_TAG_typedef
	.long	420                     # DW_AT_type
	.long	.Linfo_string18         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	20                      # Abbrev [20] 0x1a4:0x1f DW_TAG_structure_type
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	15                      # Abbrev [15] 0x1a8:0xd DW_TAG_member
	.long	.Linfo_string15         # DW_AT_name
	.long	451                     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	15                      # Abbrev [15] 0x1b5:0xd DW_TAG_member
	.long	.Linfo_string17         # DW_AT_name
	.long	451                     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x1c3:0x7 DW_TAG_base_type
	.long	.Linfo_string16         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	32                      # Abbrev [32] 0x1ca:0x5b DW_TAG_subprogram
	.long	.Linfo_string21         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	379                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.quad	.Lfunc_end4             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	33                      # Abbrev [33] 0x1e4:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	379                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\220\001"
	.byte	33                      # Abbrev [33] 0x1f4:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	379                     # DW_AT_decl_line
	.long	1981                    # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\360\002"
	.byte	33                      # Abbrev [33] 0x204:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	379                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\350\002"
	.byte	26                      # Abbrev [26] 0x214:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	379                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc47           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x225:0x4b DW_TAG_subprogram
	.long	.Linfo_string22         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.quad	.Lfunc_end5             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	33                      # Abbrev [33] 0x23f:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string37         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	33                      # Abbrev [33] 0x24f:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
	.long	1981                    # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.byte	27                      # Abbrev [27] 0x25f:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	394                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc49           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x270:0x1a DW_TAG_subprogram
	.long	.Linfo_string23         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	400                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.quad	.Lfunc_end6             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	35                      # Abbrev [35] 0x28a:0x51 DW_TAG_subprogram
	.long	.Linfo_string24         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	405                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+181      # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.quad	.Lfunc_end7             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	26                      # Abbrev [26] 0x2a8:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string53         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	405                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc51           # DW_AT_location
	.byte	4                       # Abbrev [4] 0x2b8:0x22 DW_TAG_lexical_block
	.quad	.Ltmp233                # DW_AT_low_pc
	.quad	.Ltmp245                # DW_AT_high_pc
	.byte	36                      # Abbrev [36] 0x2c9:0x10 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	408                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc54           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2db:0xc1 DW_TAG_subprogram
	.long	.Linfo_string25         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	244                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.quad	.Lfunc_end9             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x2f4:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	245                     # DW_AT_decl_line
	.long	1996                    # DW_AT_type
	.long	.Ldebug_loc75           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x303:0xf DW_TAG_formal_parameter
	.long	.Linfo_string59         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	246                     # DW_AT_decl_line
	.long	2001                    # DW_AT_type
	.long	.Ldebug_loc77           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x312:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	247                     # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc79           # DW_AT_location
	.byte	38                      # Abbrev [38] 0x321:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	248                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc81           # DW_AT_location
	.byte	38                      # Abbrev [38] 0x330:0xf DW_TAG_formal_parameter
	.long	.Linfo_string13         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	249                     # DW_AT_decl_line
	.long	.Lsection_info+550      # DW_AT_type
	.long	.Ldebug_loc83           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x33f:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	250                     # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc87           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x34e:0xf DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	253                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc89           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x35d:0xf DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	254                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc91           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x36c:0xf DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	255                     # DW_AT_decl_line
	.long	2016                    # DW_AT_type
	.long	.Ldebug_loc93           # DW_AT_location
	.byte	28                      # Abbrev [28] 0x37b:0x10 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	256                     # DW_AT_decl_line
	.long	2016                    # DW_AT_type
	.long	.Ldebug_loc95           # DW_AT_location
	.byte	28                      # Abbrev [28] 0x38b:0x10 DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	257                     # DW_AT_decl_line
	.long	1981                    # DW_AT_type
	.long	.Ldebug_loc97           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x39c:0xfe DW_TAG_subprogram
	.long	.Linfo_string26         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	204                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.quad	.Lfunc_end10            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x3b5:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	205                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc99           # DW_AT_location
	.byte	3                       # Abbrev [3] 0x3c4:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc101          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x3d3:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc103          # DW_AT_location
	.byte	38                      # Abbrev [38] 0x3e2:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc105          # DW_AT_location
	.byte	38                      # Abbrev [38] 0x3f1:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	209                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc107          # DW_AT_location
	.byte	39                      # Abbrev [39] 0x400:0xf DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	215                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc109          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x40f:0xf DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	217                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc111          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x41e:0xc DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	40                      # Abbrev [40] 0x42a:0xc DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.byte	1                       # DW_AT_const_value
	.byte	39                      # Abbrev [39] 0x436:0xf DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc116          # DW_AT_location
	.byte	41                      # Abbrev [41] 0x445:0xb DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	212                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.byte	7                       # Abbrev [7] 0x450:0xb DW_TAG_variable
	.long	.Linfo_string14         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	213                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0x45b:0xb DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	214                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x466:0x33 DW_TAG_lexical_block
	.quad	.Ltmp352                # DW_AT_low_pc
	.quad	.Ltmp380                # DW_AT_high_pc
	.byte	6                       # Abbrev [6] 0x477:0x21 DW_TAG_lexical_block
	.long	.Ldebug_range+400       # DW_AT_ranges
	.byte	6                       # Abbrev [6] 0x47c:0x1b DW_TAG_lexical_block
	.long	.Ldebug_range+352       # DW_AT_ranges
	.byte	6                       # Abbrev [6] 0x481:0x15 DW_TAG_lexical_block
	.long	.Ldebug_range+288       # DW_AT_ranges
	.byte	39                      # Abbrev [39] 0x486:0xf DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	229                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc113          # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x49a:0xce DW_TAG_subprogram
	.long	.Linfo_string27         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	136                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.quad	.Lfunc_end11            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x4b3:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	137                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc118          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x4c2:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	138                     # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc120          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x4d1:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	139                     # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc122          # DW_AT_location
	.byte	38                      # Abbrev [38] 0x4e0:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	140                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc124          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x4ef:0xf DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc126          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x4fe:0xf DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc129          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x50d:0xf DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc132          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x51c:0xf DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc135          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x52b:0xf DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc138          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x53a:0xc DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	144                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	7                       # Abbrev [7] 0x546:0xb DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	2021                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0x551:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	7                       # Abbrev [7] 0x55c:0xb DW_TAG_variable
	.long	.Linfo_string78         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x568:0xbb DW_TAG_subprogram
	.long	.Linfo_string28         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.quad	.Lfunc_end12            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x581:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc141          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x590:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc144          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x59f:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc146          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x5ae:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc148          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5bd:0xf DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	1963                    # DW_AT_type
	.long	.Ldebug_loc150          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5cc:0xf DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc153          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5db:0xf DW_TAG_variable
	.long	.Linfo_string80         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc155          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5ea:0xf DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc157          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5f9:0xf DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc160          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x608:0xf DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc163          # DW_AT_location
	.byte	7                       # Abbrev [7] 0x617:0xb DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	2033                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x623:0xa8 DW_TAG_subprogram
	.long	.Linfo_string29         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.quad	.Lfunc_end13            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x63c:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc166          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x64b:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc169          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x65a:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc171          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x669:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	96                      # DW_AT_decl_line
	.long	1963                    # DW_AT_type
	.long	.Ldebug_loc173          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x678:0xf DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	99                      # DW_AT_decl_line
	.long	1963                    # DW_AT_type
	.long	.Ldebug_loc175          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x687:0xf DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc178          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x696:0xf DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc180          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x6a5:0xf DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc183          # DW_AT_location
	.byte	7                       # Abbrev [7] 0x6b4:0xb DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	2045                    # DW_AT_type
	.byte	7                       # Abbrev [7] 0x6bf:0xb DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	103                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x6cb:0x7f DW_TAG_subprogram
	.long	.Linfo_string30         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.quad	.Lfunc_end14            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	3                       # Abbrev [3] 0x6e4:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc186          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x6f3:0xf DW_TAG_formal_parameter
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	2006                    # DW_AT_type
	.long	.Ldebug_loc189          # DW_AT_location
	.byte	3                       # Abbrev [3] 0x702:0xf DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	2011                    # DW_AT_type
	.long	.Ldebug_loc191          # DW_AT_location
	.byte	38                      # Abbrev [38] 0x711:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc193          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x720:0xf DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc196          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x72f:0xf DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	1991                    # DW_AT_type
	.long	.Ldebug_loc199          # DW_AT_location
	.byte	7                       # Abbrev [7] 0x73e:0xb DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	42                      # Abbrev [42] 0x74a:0x5b DW_TAG_subprogram
	.long	.Linfo_string31         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	317                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.quad	.Lfunc_end8             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	26                      # Abbrev [26] 0x764:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string53         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	317                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc64           # DW_AT_location
	.byte	26                      # Abbrev [26] 0x774:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string55         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	317                     # DW_AT_decl_line
	.long	.Lsection_info+550      # DW_AT_type
	.long	.Ldebug_loc59           # DW_AT_location
	.byte	36                      # Abbrev [36] 0x784:0x10 DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	319                     # DW_AT_decl_line
	.long	.Lsection_info+181      # DW_AT_type
	.long	.Ldebug_loc68           # DW_AT_location
	.byte	28                      # Abbrev [28] 0x794:0x10 DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	320                     # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc73           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	43                      # Abbrev [43] 0x7a5:0x1 DW_TAG_pointer_type
	.byte	12                      # Abbrev [12] 0x7a6:0x5 DW_TAG_pointer_type
	.long	1963                    # DW_AT_type
	.byte	13                      # Abbrev [13] 0x7ab:0xb DW_TAG_typedef
	.long	1974                    # DW_AT_type
	.long	.Linfo_string46         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.byte	8                       # Abbrev [8] 0x7b6:0x7 DW_TAG_base_type
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	12                      # Abbrev [12] 0x7bd:0x5 DW_TAG_pointer_type
	.long	1986                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7c2:0x5 DW_TAG_const_type
	.long	409                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x7c7:0x5 DW_TAG_pointer_type
	.long	409                     # DW_AT_type
	.byte	12                      # Abbrev [12] 0x7cc:0x5 DW_TAG_pointer_type
	.long	1991                    # DW_AT_type
	.byte	12                      # Abbrev [12] 0x7d1:0x5 DW_TAG_pointer_type
	.long	1981                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7d6:0x5 DW_TAG_const_type
	.long	1963                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x7db:0x5 DW_TAG_const_type
	.long	299                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x7e0:0x5 DW_TAG_const_type
	.long	.Lsection_info+181      # DW_AT_type
	.byte	18                      # Abbrev [18] 0x7e5:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x7ea:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	12                      # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x7f1:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x7f6:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	5                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	18                      # Abbrev [18] 0x7fd:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x802:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	4                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.L.debug_info_end1:
	.section	.debug_abbrev,"",@progbits
.L.debug_abbrev_begin:
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	5                       # DW_FORM_data2
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	5                       # DW_FORM_data2
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	47                      # DW_AT_upper_bound
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	28                      # DW_AT_const_value
	.byte	10                      # DW_FORM_block1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	10                      # DW_FORM_block1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
.L.debug_abbrev_end:
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset0 = .Ltmp606-.Ltmp605              # Loc expr size
	.short	.Lset0
.Ltmp605:
	.byte	119                     # DW_OP_breg7
	.ascii	"\210\016"
.Ltmp606:
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset1 = .Ltmp608-.Ltmp607              # Loc expr size
	.short	.Lset1
.Ltmp607:
	.byte	119                     # DW_OP_breg7
	.ascii	"\200\016"
.Ltmp608:
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset2 = .Ltmp610-.Ltmp609              # Loc expr size
	.short	.Lset2
.Ltmp609:
	.byte	119                     # DW_OP_breg7
	.ascii	"\374\r"
.Ltmp610:
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset3 = .Ltmp612-.Ltmp611              # Loc expr size
	.short	.Lset3
.Ltmp611:
	.byte	119                     # DW_OP_breg7
	.ascii	"\354\016"
.Ltmp612:
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin1
	.quad	.Ltmp52
.Lset4 = .Ltmp614-.Ltmp613              # Loc expr size
	.short	.Lset4
.Ltmp613:
	.byte	85                      # DW_OP_reg5
.Ltmp614:
	.quad	.Ltmp52
	.quad	.Ltmp56
.Lset5 = .Ltmp616-.Ltmp615              # Loc expr size
	.short	.Lset5
.Ltmp615:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360~"
.Ltmp616:
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Lfunc_begin1
	.quad	.Ltmp53
.Lset6 = .Ltmp618-.Ltmp617              # Loc expr size
	.short	.Lset6
.Ltmp617:
	.byte	84                      # DW_OP_reg4
.Ltmp618:
	.quad	.Ltmp53
	.quad	.Ltmp56
.Lset7 = .Ltmp620-.Ltmp619              # Loc expr size
	.short	.Lset7
.Ltmp619:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"
.Ltmp620:
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Lfunc_begin1
	.quad	.Ltmp51
.Lset8 = .Ltmp622-.Ltmp621              # Loc expr size
	.short	.Lset8
.Ltmp621:
	.byte	81                      # DW_OP_reg1
.Ltmp622:
	.quad	.Ltmp51
	.quad	.Ltmp56
.Lset9 = .Ltmp624-.Ltmp623              # Loc expr size
	.short	.Lset9
.Ltmp623:
	.byte	118                     # DW_OP_breg6
	.ascii	"\370~"
.Ltmp624:
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Lfunc_begin1
	.quad	.Ltmp49
.Lset10 = .Ltmp626-.Ltmp625             # Loc expr size
	.short	.Lset10
.Ltmp625:
	.byte	82                      # DW_OP_reg2
.Ltmp626:
	.quad	.Ltmp49
	.quad	.Ltmp56
.Lset11 = .Ltmp628-.Ltmp627             # Loc expr size
	.short	.Lset11
.Ltmp627:
	.byte	118                     # DW_OP_breg6
	.ascii	"\274\177"
.Ltmp628:
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Lfunc_begin1
	.quad	.Ltmp54
.Lset12 = .Ltmp630-.Ltmp629             # Loc expr size
	.short	.Lset12
.Ltmp629:
	.byte	88                      # DW_OP_reg8
.Ltmp630:
	.quad	.Ltmp54
	.quad	.Ltmp56
.Lset13 = .Ltmp632-.Ltmp631             # Loc expr size
	.short	.Lset13
.Ltmp631:
	.byte	118                     # DW_OP_breg6
	.ascii	"\300~"
.Ltmp632:
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp55
	.quad	.Ltmp56
.Lset14 = .Ltmp634-.Ltmp633             # Loc expr size
	.short	.Lset14
.Ltmp633:
	.byte	118                     # DW_OP_breg6
	.ascii	"\340|"
	.byte	6
.Ltmp634:
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp93
	.quad	.Ltmp94
.Lset15 = .Ltmp636-.Ltmp635             # Loc expr size
	.short	.Lset15
.Ltmp635:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\r"
.Ltmp636:
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp95
	.quad	.Ltmp96
.Lset16 = .Ltmp638-.Ltmp637             # Loc expr size
	.short	.Lset16
.Ltmp637:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\f"
.Ltmp638:
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp103
	.quad	.Ltmp104
.Lset17 = .Ltmp640-.Ltmp639             # Loc expr size
	.short	.Lset17
.Ltmp639:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\005"
.Ltmp640:
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Lfunc_begin3
	.quad	.Ltmp131
.Lset18 = .Ltmp642-.Ltmp641             # Loc expr size
	.short	.Lset18
.Ltmp641:
	.byte	119                     # DW_OP_breg7
	.ascii	"\304\027"
.Ltmp642:
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Lfunc_begin3
	.quad	.Ltmp131
.Lset19 = .Ltmp644-.Ltmp643             # Loc expr size
	.short	.Lset19
.Ltmp643:
	.byte	119                     # DW_OP_breg7
	.ascii	"\374\030"
.Ltmp644:
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Lfunc_begin3
	.quad	.Ltmp131
.Lset20 = .Ltmp646-.Ltmp645             # Loc expr size
	.short	.Lset20
.Ltmp645:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\027"
.Ltmp646:
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Lfunc_begin3
	.quad	.Ltmp131
.Lset21 = .Ltmp648-.Ltmp647             # Loc expr size
	.short	.Lset21
.Ltmp647:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\027"
.Ltmp648:
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp130
	.quad	.Ltmp131
.Lset22 = .Ltmp650-.Ltmp649             # Loc expr size
	.short	.Lset22
.Ltmp649:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\026"
.Ltmp650:
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp133
	.quad	.Ltmp134
.Lset23 = .Ltmp652-.Ltmp651             # Loc expr size
	.short	.Lset23
.Ltmp651:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\024"
.Ltmp652:
	.quad	.Ltmp136
	.quad	.Ltmp137
.Lset24 = .Ltmp654-.Ltmp653             # Loc expr size
	.short	.Lset24
.Ltmp653:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\020"
.Ltmp654:
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp146
	.quad	.Ltmp147
.Lset25 = .Ltmp656-.Ltmp655             # Loc expr size
	.short	.Lset25
.Ltmp655:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp656:
	.quad	.Ltmp148
	.quad	.Ltmp149
.Lset26 = .Ltmp658-.Ltmp657             # Loc expr size
	.short	.Lset26
.Ltmp657:
	.byte	119                     # DW_OP_breg7
	.ascii	"\210\006"
.Ltmp658:
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Lfunc_begin4
	.quad	.Ltmp179
.Lset27 = .Ltmp660-.Ltmp659             # Loc expr size
	.short	.Lset27
.Ltmp659:
	.byte	119                     # DW_OP_breg7
	.ascii	"\354\001"
.Ltmp660:
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Lfunc_begin5
	.quad	.Ltmp203
.Lset28 = .Ltmp662-.Ltmp661             # Loc expr size
	.short	.Lset28
.Ltmp661:
	.byte	119                     # DW_OP_breg7
	.asciz	"\360"
.Ltmp662:
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Lfunc_begin7
	.quad	.Ltmp232
.Lset29 = .Ltmp664-.Ltmp663             # Loc expr size
	.short	.Lset29
.Ltmp663:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\016"
.Ltmp664:
	.quad	.Ltmp244
	.quad	.Ltmp245
.Lset30 = .Ltmp666-.Ltmp665             # Loc expr size
	.short	.Lset30
.Ltmp665:
	.byte	119                     # DW_OP_breg7
	.byte	56
.Ltmp666:
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp234
	.quad	.Ltmp235
.Lset31 = .Ltmp668-.Ltmp667             # Loc expr size
	.short	.Lset31
.Ltmp667:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\f"
.Ltmp668:
	.quad	.Ltmp236
	.quad	.Ltmp237
.Lset32 = .Ltmp670-.Ltmp669             # Loc expr size
	.short	.Lset32
.Ltmp669:
	.byte	119                     # DW_OP_breg7
	.ascii	"\364\t"
.Ltmp670:
	.quad	.Ltmp238
	.quad	.Ltmp239
.Lset33 = .Ltmp672-.Ltmp671             # Loc expr size
	.short	.Lset33
.Ltmp671:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\006"
.Ltmp672:
	.quad	.Ltmp240
	.quad	.Ltmp241
.Lset34 = .Ltmp674-.Ltmp673             # Loc expr size
	.short	.Lset34
.Ltmp673:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\002"
.Ltmp674:
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Lfunc_begin8
	.quad	.Ltmp269
.Lset35 = .Ltmp676-.Ltmp675             # Loc expr size
	.short	.Lset35
.Ltmp675:
	.byte	84                      # DW_OP_reg4
.Ltmp676:
	.quad	.Ltmp269
	.quad	.Ltmp274
.Lset36 = .Ltmp678-.Ltmp677             # Loc expr size
	.short	.Lset36
.Ltmp677:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\013"
.Ltmp678:
	.quad	.Ltmp285
	.quad	.Ltmp286
.Lset37 = .Ltmp680-.Ltmp679             # Loc expr size
	.short	.Lset37
.Ltmp679:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp680:
	.quad	.Ltmp286
	.quad	.Ltmp287
.Lset38 = .Ltmp682-.Ltmp681             # Loc expr size
	.short	.Lset38
.Ltmp681:
	.byte	119                     # DW_OP_breg7
	.byte	16
.Ltmp682:
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin8
	.quad	.Ltmp270
.Lset39 = .Ltmp684-.Ltmp683             # Loc expr size
	.short	.Lset39
.Ltmp683:
	.byte	85                      # DW_OP_reg5
.Ltmp684:
	.quad	.Ltmp270
	.quad	.Ltmp271
.Lset40 = .Ltmp686-.Ltmp685             # Loc expr size
	.short	.Lset40
.Ltmp685:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\013"
.Ltmp686:
	.quad	.Ltmp284
	.quad	.Ltmp287
.Lset41 = .Ltmp688-.Ltmp687             # Loc expr size
	.short	.Lset41
.Ltmp687:
	.byte	119                     # DW_OP_breg7
	.byte	36
.Ltmp688:
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp272
	.quad	.Ltmp278
.Lset42 = .Ltmp690-.Ltmp689             # Loc expr size
	.short	.Lset42
.Ltmp689:
	.byte	16                      # DW_OP_constu
	.byte	3
.Ltmp690:
	.quad	.Ltmp278
	.quad	.Ltmp279
.Lset43 = .Ltmp692-.Ltmp691             # Loc expr size
	.short	.Lset43
.Ltmp691:
	.byte	119                     # DW_OP_breg7
	.ascii	"\314\005"
.Ltmp692:
	.quad	.Ltmp281
	.quad	.Ltmp283
.Lset44 = .Ltmp694-.Ltmp693             # Loc expr size
	.short	.Lset44
.Ltmp693:
	.byte	119                     # DW_OP_breg7
	.ascii	"\244\n"
.Ltmp694:
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp273
	.quad	.Ltmp274
.Lset45 = .Ltmp696-.Ltmp695             # Loc expr size
	.short	.Lset45
.Ltmp695:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\n"
.Ltmp696:
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Lfunc_begin9
	.quad	.Ltmp318
.Lset46 = .Ltmp698-.Ltmp697             # Loc expr size
	.short	.Lset46
.Ltmp697:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\026"
.Ltmp698:
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin9
	.quad	.Ltmp318
.Lset47 = .Ltmp700-.Ltmp699             # Loc expr size
	.short	.Lset47
.Ltmp699:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\026"
.Ltmp700:
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Lfunc_begin9
	.quad	.Ltmp318
.Lset48 = .Ltmp702-.Ltmp701             # Loc expr size
	.short	.Lset48
.Ltmp701:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\026"
.Ltmp702:
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin9
	.quad	.Ltmp318
.Lset49 = .Ltmp704-.Ltmp703             # Loc expr size
	.short	.Lset49
.Ltmp703:
	.byte	119                     # DW_OP_breg7
	.ascii	"\354\030"
.Ltmp704:
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin9
	.quad	.Ltmp313
.Lset50 = .Ltmp706-.Ltmp705             # Loc expr size
	.short	.Lset50
.Ltmp705:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\026"
.Ltmp706:
	.quad	.Ltmp313
	.quad	.Ltmp315
.Lset51 = .Ltmp708-.Ltmp707             # Loc expr size
	.short	.Lset51
.Ltmp707:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\025"
.Ltmp708:
	.quad	.Ltmp315
	.quad	.Ltmp318
.Lset52 = .Ltmp710-.Ltmp709             # Loc expr size
	.short	.Lset52
.Ltmp709:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\025"
.Ltmp710:
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Lfunc_begin9
	.quad	.Ltmp318
.Lset53 = .Ltmp712-.Ltmp711             # Loc expr size
	.short	.Lset53
.Ltmp711:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\026"
.Ltmp712:
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp311
	.quad	.Ltmp318
.Lset54 = .Ltmp714-.Ltmp713             # Loc expr size
	.short	.Lset54
.Ltmp713:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\025"
.Ltmp714:
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp312
	.quad	.Ltmp318
.Lset55 = .Ltmp716-.Ltmp715             # Loc expr size
	.short	.Lset55
.Ltmp715:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\025"
.Ltmp716:
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp314
	.quad	.Ltmp318
.Lset56 = .Ltmp718-.Ltmp717             # Loc expr size
	.short	.Lset56
.Ltmp717:
	.byte	119                     # DW_OP_breg7
	.ascii	"\344\025"
.Ltmp718:
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp316
	.quad	.Ltmp318
.Lset57 = .Ltmp720-.Ltmp719             # Loc expr size
	.short	.Lset57
.Ltmp719:
	.byte	119                     # DW_OP_breg7
	.ascii	"\324\025"
.Ltmp720:
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp317
	.quad	.Ltmp318
.Lset58 = .Ltmp722-.Ltmp721             # Loc expr size
	.short	.Lset58
.Ltmp721:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\025"
.Ltmp722:
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin10
	.quad	.Ltmp353
.Lset59 = .Ltmp724-.Ltmp723             # Loc expr size
	.short	.Lset59
.Ltmp723:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\031"
.Ltmp724:
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Lfunc_begin10
	.quad	.Ltmp353
.Lset60 = .Ltmp726-.Ltmp725             # Loc expr size
	.short	.Lset60
.Ltmp725:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\031"
.Ltmp726:
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin10
	.quad	.Ltmp353
.Lset61 = .Ltmp728-.Ltmp727             # Loc expr size
	.short	.Lset61
.Ltmp727:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\031"
.Ltmp728:
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Lfunc_begin10
	.quad	.Ltmp353
.Lset62 = .Ltmp730-.Ltmp729             # Loc expr size
	.short	.Lset62
.Ltmp729:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\033"
.Ltmp730:
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin10
	.quad	.Ltmp353
.Lset63 = .Ltmp732-.Ltmp731             # Loc expr size
	.short	.Lset63
.Ltmp731:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\031"
.Ltmp732:
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp350
	.quad	.Ltmp351
.Lset64 = .Ltmp734-.Ltmp733             # Loc expr size
	.short	.Lset64
.Ltmp733:
	.byte	119                     # DW_OP_breg7
	.ascii	"\224\031"
.Ltmp734:
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp352
	.quad	.Ltmp353
.Lset65 = .Ltmp736-.Ltmp735             # Loc expr size
	.short	.Lset65
.Ltmp735:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\027"
.Ltmp736:
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp367
	.quad	.Ltmp373
.Lset66 = .Ltmp738-.Ltmp737             # Loc expr size
	.short	.Lset66
.Ltmp737:
	.byte	16                      # DW_OP_constu
	.byte	0
.Ltmp738:
	.quad	.Ltmp373
	.quad	.Ltmp377
.Lset67 = .Ltmp740-.Ltmp739             # Loc expr size
	.short	.Lset67
.Ltmp739:
	.byte	119                     # DW_OP_breg7
	.ascii	"\204\005"
.Ltmp740:
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp378
	.quad	.Ltmp379
.Lset68 = .Ltmp742-.Ltmp741             # Loc expr size
	.short	.Lset68
.Ltmp741:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\002"
.Ltmp742:
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin11
	.quad	.Ltmp405
.Lset69 = .Ltmp744-.Ltmp743             # Loc expr size
	.short	.Lset69
.Ltmp743:
	.byte	119                     # DW_OP_breg7
	.ascii	"\240\032"
.Ltmp744:
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin11
	.quad	.Ltmp405
.Lset70 = .Ltmp746-.Ltmp745             # Loc expr size
	.short	.Lset70
.Ltmp745:
	.byte	119                     # DW_OP_breg7
	.ascii	"\230\032"
.Ltmp746:
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin11
	.quad	.Ltmp405
.Lset71 = .Ltmp748-.Ltmp747             # Loc expr size
	.short	.Lset71
.Ltmp747:
	.byte	119                     # DW_OP_breg7
	.ascii	"\220\032"
.Ltmp748:
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin11
	.quad	.Ltmp405
.Lset72 = .Ltmp750-.Ltmp749             # Loc expr size
	.short	.Lset72
.Ltmp749:
	.byte	119                     # DW_OP_breg7
	.ascii	"\254\034"
.Ltmp750:
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp404
	.quad	.Ltmp405
.Lset73 = .Ltmp752-.Ltmp751             # Loc expr size
	.short	.Lset73
.Ltmp751:
	.byte	119                     # DW_OP_breg7
	.ascii	"\240\032"
.Ltmp752:
	.quad	.Ltmp428
	.quad	.Ltmp433
.Lset74 = .Ltmp754-.Ltmp753             # Loc expr size
	.short	.Lset74
.Ltmp753:
	.byte	119                     # DW_OP_breg7
	.asciz	"\300"
.Ltmp754:
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp410
	.quad	.Ltmp405
.Lset75 = .Ltmp756-.Ltmp755             # Loc expr size
	.short	.Lset75
.Ltmp755:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\025"
.Ltmp756:
	.quad	.Ltmp429
	.quad	.Ltmp433
.Lset76 = .Ltmp758-.Ltmp757             # Loc expr size
	.short	.Lset76
.Ltmp757:
	.byte	119                     # DW_OP_breg7
	.byte	56
.Ltmp758:
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp408
	.quad	.Ltmp405
.Lset77 = .Ltmp760-.Ltmp759             # Loc expr size
	.short	.Lset77
.Ltmp759:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\025"
.Ltmp760:
	.quad	.Ltmp430
	.quad	.Ltmp433
.Lset78 = .Ltmp762-.Ltmp761             # Loc expr size
	.short	.Lset78
.Ltmp761:
	.byte	119                     # DW_OP_breg7
	.byte	48
.Ltmp762:
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp407
	.quad	.Ltmp405
.Lset79 = .Ltmp764-.Ltmp763             # Loc expr size
	.short	.Lset79
.Ltmp763:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\025"
.Ltmp764:
	.quad	.Ltmp431
	.quad	.Ltmp433
.Lset80 = .Ltmp766-.Ltmp765             # Loc expr size
	.short	.Lset80
.Ltmp765:
	.byte	119                     # DW_OP_breg7
	.byte	40
.Ltmp766:
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp406
	.quad	.Ltmp405
.Lset81 = .Ltmp768-.Ltmp767             # Loc expr size
	.short	.Lset81
.Ltmp767:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\025"
.Ltmp768:
	.quad	.Ltmp432
	.quad	.Ltmp433
.Lset82 = .Ltmp770-.Ltmp769             # Loc expr size
	.short	.Lset82
.Ltmp769:
	.byte	119                     # DW_OP_breg7
	.byte	32
.Ltmp770:
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Lfunc_begin12
	.quad	.Ltmp463
.Lset83 = .Ltmp772-.Ltmp771             # Loc expr size
	.short	.Lset83
.Ltmp771:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\023"
.Ltmp772:
	.quad	.Ltmp484
	.quad	.Ltmp486
.Lset84 = .Ltmp774-.Ltmp773             # Loc expr size
	.short	.Lset84
.Ltmp773:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp774:
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Lfunc_begin12
	.quad	.Ltmp463
.Lset85 = .Ltmp776-.Ltmp775             # Loc expr size
	.short	.Lset85
.Ltmp775:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\023"
.Ltmp776:
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Lfunc_begin12
	.quad	.Ltmp463
.Lset86 = .Ltmp778-.Ltmp777             # Loc expr size
	.short	.Lset86
.Ltmp777:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\023"
.Ltmp778:
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Lfunc_begin12
	.quad	.Ltmp463
.Lset87 = .Ltmp780-.Ltmp779             # Loc expr size
	.short	.Lset87
.Ltmp779:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\023"
.Ltmp780:
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp457
	.quad	.Ltmp463
.Lset88 = .Ltmp782-.Ltmp781             # Loc expr size
	.short	.Lset88
.Ltmp781:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\023"
.Ltmp782:
	.quad	.Ltmp485
	.quad	.Ltmp486
.Lset89 = .Ltmp784-.Ltmp783             # Loc expr size
	.short	.Lset89
.Ltmp783:
	.byte	119                     # DW_OP_breg7
	.byte	16
.Ltmp784:
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp458
	.quad	.Ltmp463
.Lset90 = .Ltmp786-.Ltmp785             # Loc expr size
	.short	.Lset90
.Ltmp785:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\022"
.Ltmp786:
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp459
	.quad	.Ltmp463
.Lset91 = .Ltmp788-.Ltmp787             # Loc expr size
	.short	.Lset91
.Ltmp787:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\022"
.Ltmp788:
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp460
	.quad	.Ltmp463
.Lset92 = .Ltmp790-.Ltmp789             # Loc expr size
	.short	.Lset92
.Ltmp789:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp790:
	.quad	.Ltmp473
	.quad	.Ltmp477
.Lset93 = .Ltmp792-.Ltmp791             # Loc expr size
	.short	.Lset93
.Ltmp791:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\007"
.Ltmp792:
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp460
	.quad	.Ltmp463
.Lset94 = .Ltmp794-.Ltmp793             # Loc expr size
	.short	.Lset94
.Ltmp793:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp794:
	.quad	.Ltmp474
	.quad	.Ltmp477
.Lset95 = .Ltmp796-.Ltmp795             # Loc expr size
	.short	.Lset95
.Ltmp795:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp796:
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp460
	.quad	.Ltmp463
.Lset96 = .Ltmp798-.Ltmp797             # Loc expr size
	.short	.Lset96
.Ltmp797:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp798:
	.quad	.Ltmp475
	.quad	.Ltmp477
.Lset97 = .Ltmp800-.Ltmp799             # Loc expr size
	.short	.Lset97
.Ltmp799:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\007"
.Ltmp800:
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Lfunc_begin13
	.quad	.Ltmp514
.Lset98 = .Ltmp802-.Ltmp801             # Loc expr size
	.short	.Lset98
.Ltmp801:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\f"
.Ltmp802:
	.quad	.Ltmp525
	.quad	.Ltmp527
.Lset99 = .Ltmp804-.Ltmp803             # Loc expr size
	.short	.Lset99
.Ltmp803:
	.byte	119                     # DW_OP_breg7
	.byte	32
.Ltmp804:
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Lfunc_begin13
	.quad	.Ltmp514
.Lset100 = .Ltmp806-.Ltmp805            # Loc expr size
	.short	.Lset100
.Ltmp805:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\f"
.Ltmp806:
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Lfunc_begin13
	.quad	.Ltmp514
.Lset101 = .Ltmp808-.Ltmp807            # Loc expr size
	.short	.Lset101
.Ltmp807:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\f"
.Ltmp808:
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Lfunc_begin13
	.quad	.Ltmp514
.Lset102 = .Ltmp810-.Ltmp809            # Loc expr size
	.short	.Lset102
.Ltmp809:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\f"
.Ltmp810:
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp510
	.quad	.Ltmp514
.Lset103 = .Ltmp812-.Ltmp811            # Loc expr size
	.short	.Lset103
.Ltmp811:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\f"
.Ltmp812:
	.quad	.Ltmp526
	.quad	.Ltmp527
.Lset104 = .Ltmp814-.Ltmp813            # Loc expr size
	.short	.Lset104
.Ltmp813:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp814:
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp511
	.quad	.Ltmp514
.Lset105 = .Ltmp816-.Ltmp815            # Loc expr size
	.short	.Lset105
.Ltmp815:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\013"
.Ltmp816:
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp512
	.quad	.Ltmp514
.Lset106 = .Ltmp818-.Ltmp817            # Loc expr size
	.short	.Lset106
.Ltmp817:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\013"
.Ltmp818:
	.quad	.Ltmp521
	.quad	.Ltmp527
.Lset107 = .Ltmp820-.Ltmp819            # Loc expr size
	.short	.Lset107
.Ltmp819:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\001"
.Ltmp820:
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp512
	.quad	.Ltmp514
.Lset108 = .Ltmp822-.Ltmp821            # Loc expr size
	.short	.Lset108
.Ltmp821:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\013"
.Ltmp822:
	.quad	.Ltmp520
	.quad	.Ltmp527
.Lset109 = .Ltmp824-.Ltmp823            # Loc expr size
	.short	.Lset109
.Ltmp823:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\001"
.Ltmp824:
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Lfunc_begin14
	.quad	.Ltmp553
.Lset110 = .Ltmp826-.Ltmp825            # Loc expr size
	.short	.Lset110
.Ltmp825:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp826:
	.quad	.Ltmp560
	.quad	.Ltmp562
.Lset111 = .Ltmp828-.Ltmp827            # Loc expr size
	.short	.Lset111
.Ltmp827:
	.byte	119                     # DW_OP_breg7
	.byte	32
.Ltmp828:
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Lfunc_begin14
	.quad	.Ltmp553
.Lset112 = .Ltmp830-.Ltmp829            # Loc expr size
	.short	.Lset112
.Ltmp829:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\007"
.Ltmp830:
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Lfunc_begin14
	.quad	.Ltmp553
.Lset113 = .Ltmp832-.Ltmp831            # Loc expr size
	.short	.Lset113
.Ltmp831:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\007"
.Ltmp832:
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Lfunc_begin14
	.quad	.Ltmp553
.Lset114 = .Ltmp834-.Ltmp833            # Loc expr size
	.short	.Lset114
.Ltmp833:
	.byte	119                     # DW_OP_breg7
	.ascii	"\244\007"
.Ltmp834:
	.quad	.Ltmp561
	.quad	.Ltmp562
.Lset115 = .Ltmp836-.Ltmp835            # Loc expr size
	.short	.Lset115
.Ltmp835:
	.byte	119                     # DW_OP_breg7
	.byte	28
.Ltmp836:
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp551
	.quad	.Ltmp553
.Lset116 = .Ltmp838-.Ltmp837            # Loc expr size
	.short	.Lset116
.Ltmp837:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\006"
.Ltmp838:
	.quad	.Ltmp556
	.quad	.Ltmp562
.Lset117 = .Ltmp840-.Ltmp839            # Loc expr size
	.short	.Lset117
.Ltmp839:
	.byte	119                     # DW_OP_breg7
	.asciz	"\330"
.Ltmp840:
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp552
	.quad	.Ltmp553
.Lset118 = .Ltmp842-.Ltmp841            # Loc expr size
	.short	.Lset118
.Ltmp841:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\006"
.Ltmp842:
	.quad	.Ltmp559
	.quad	.Ltmp562
.Lset119 = .Ltmp844-.Ltmp843            # Loc expr size
	.short	.Lset119
.Ltmp843:
	.byte	119                     # DW_OP_breg7
	.byte	40
.Ltmp844:
	.quad	0
	.quad	0
.Ldebug_loc202:
	.section	.debug_aranges,"",@progbits
	.long	44                      # Length of ARange Set
	.short	2                       # DWARF Arange version number
	.long	.L.debug_info_begin0    # Offset Into Debug Info Section
	.byte	8                       # Address Size (in bytes)
	.byte	0                       # Segment Size (in bytes)
	.byte	255
	.byte	255
	.byte	255
	.byte	255
	.quad	.Lfunc_begin0
.Lset120 = .Lfunc_begin3-.Lfunc_begin0
	.quad	.Lset120
	.quad	0                       # ARange terminator
	.quad	0
	.long	44                      # Length of ARange Set
	.short	2                       # DWARF Arange version number
	.long	.L.debug_info_begin1    # Offset Into Debug Info Section
	.byte	8                       # Address Size (in bytes)
	.byte	0                       # Segment Size (in bytes)
	.byte	255
	.byte	255
	.byte	255
	.byte	255
	.quad	.Lfunc_begin3
.Lset121 = .Ldebug_end0-.Lfunc_begin3
	.quad	.Lset121
	.quad	0                       # ARange terminator
	.quad	0
	.section	.debug_ranges,"",@progbits
	.quad	.Ltmp23
	.quad	.Ltmp24
	.quad	.Ltmp25
	.quad	.Ltmp33
	.quad	0
	.quad	0
	.quad	.Ltmp23
	.quad	.Ltmp24
	.quad	.Ltmp25
	.quad	.Ltmp34
	.quad	0
	.quad	0
	.quad	.Ltmp57
	.quad	.Ltmp58
	.quad	.Ltmp60
	.quad	.Ltmp64
	.quad	0
	.quad	0
	.quad	.Ltmp58
	.quad	.Ltmp59
	.quad	.Ltmp65
	.quad	.Ltmp68
	.quad	0
	.quad	0
	.quad	.Ltmp57
	.quad	.Ltmp59
	.quad	.Ltmp60
	.quad	.Ltmp68
	.quad	0
	.quad	0
	.quad	.Ltmp142
	.quad	.Ltmp143
	.quad	.Ltmp144
	.quad	.Ltmp151
	.quad	0
	.quad	0
	.quad	.Ltmp356
	.quad	.Ltmp358
	.quad	.Ltmp364
	.quad	.Ltmp365
	.quad	.Ltmp366
	.quad	.Ltmp377
	.quad	0
	.quad	0
	.quad	.Ltmp355
	.quad	.Ltmp358
	.quad	.Ltmp363
	.quad	.Ltmp379
	.quad	0
	.quad	0
	.quad	.Ltmp354
	.quad	.Ltmp358
	.quad	.Ltmp359
	.quad	.Ltmp379
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.section	.debug_pubnames,"",@progbits
.Lset122 = .Lpubnames_end0-.Lpubnames_begin0 # Length of Public Names Info
	.long	.Lset122
.Lpubnames_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
.Lset123 = .L.debug_info_end0-.L.debug_info_begin0 # Compilation Unit Length
	.long	.Lset123
	.long	386                     # DIE offset
	.asciz	"main"                  # External Name
	.long	188                     # DIE offset
	.asciz	"process_data"          # External Name
	.long	38                      # DIE offset
	.asciz	"test_stores"           # External Name
	.long	0                       # End Mark
.Lpubnames_end0:
.Lset124 = .Lpubnames_end1-.Lpubnames_begin1 # Length of Public Names Info
	.long	.Lset124
.Lpubnames_begin1:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin1    # Offset of Compilation Unit Info
.Lset125 = .L.debug_info_end1-.L.debug_info_begin1 # Compilation Unit Length
	.long	.Lset125
	.long	624                     # DIE offset
	.asciz	"kiss_fft_cleanup"      # External Name
	.long	1384                    # DIE offset
	.asciz	"kf_bfly4"              # External Name
	.long	1178                    # DIE offset
	.asciz	"kf_bfly5"              # External Name
	.long	62                      # DIE offset
	.asciz	"kiss_fft_alloc"        # External Name
	.long	458                     # DIE offset
	.asciz	"kiss_fft_stride"       # External Name
	.long	1739                    # DIE offset
	.asciz	"kf_bfly2"              # External Name
	.long	731                     # DIE offset
	.asciz	"kf_work"               # External Name
	.long	549                     # DIE offset
	.asciz	"kiss_fft"              # External Name
	.long	924                     # DIE offset
	.asciz	"kf_bfly_generic"       # External Name
	.long	1866                    # DIE offset
	.asciz	"kf_factor"             # External Name
	.long	650                     # DIE offset
	.asciz	"kiss_fft_next_fast_size" # External Name
	.long	1571                    # DIE offset
	.asciz	"kf_bfly3"              # External Name
	.long	0                       # End Mark
.Lpubnames_end1:
	.section	.debug_pubtypes,"",@progbits
.Lset126 = .Lpubtypes_end0-.Lpubtypes_begin0 # Length of Public Types Info
	.long	.Lset126
.Lpubtypes_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
.Lset127 = .L.debug_info_end0-.L.debug_info_begin0 # Compilation Unit Length
	.long	.Lset127
	.long	646                     # DIE offset
	.asciz	"kiss_fft_cpx"          # External Name
	.long	451                     # DIE offset
	.asciz	"float"                 # External Name
	.long	555                     # DIE offset
	.asciz	"kiss_fft_cfg"          # External Name
	.long	571                     # DIE offset
	.asciz	"kiss_fft_state"        # External Name
	.long	181                     # DIE offset
	.asciz	"int"                   # External Name
	.long	0                       # End Mark
.Lpubtypes_end0:
.Lset128 = .Lpubtypes_end1-.Lpubtypes_begin1 # Length of Public Types Info
	.long	.Lset128
.Lpubtypes_begin1:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin1    # Offset of Compilation Unit Info
.Lset129 = .L.debug_info_end1-.L.debug_info_begin1 # Compilation Unit Length
	.long	.Lset129
	.long	409                     # DIE offset
	.asciz	"kiss_fft_cpx"          # External Name
	.long	451                     # DIE offset
	.asciz	"float"                 # External Name
	.long	299                     # DIE offset
	.asciz	"kiss_fft_cfg"          # External Name
	.long	315                     # DIE offset
	.asciz	"kiss_fft_state"        # External Name
	.long	55                      # DIE offset
	.asciz	"double"                # External Name
	.long	181                     # DIE offset
	.asciz	"int"                   # External Name
	.long	1974                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	1963                    # DIE offset
	.asciz	"size_t"                # External Name
	.long	0                       # End Mark
.Lpubtypes_end1:

	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.section	".note.GNU-stack","",@progbits
