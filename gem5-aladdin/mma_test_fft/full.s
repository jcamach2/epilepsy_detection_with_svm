	.file	"full.llvm"
	.section	.debug_info,"",@progbits
.Lsection_info:
	.section	.debug_abbrev,"",@progbits
.Lsection_abbrev:
	.section	.debug_aranges,"",@progbits
	.section	.debug_macinfo,"",@progbits
	.section	.debug_line,"",@progbits
.Lsection_line:
	.section	.debug_loc,"",@progbits
	.section	.debug_pubnames,"",@progbits
	.section	.debug_pubtypes,"",@progbits
	.section	.debug_str,"MS",@progbits,1
.Linfo_string:
	.section	.debug_ranges,"",@progbits
.Ldebug_range:
	.section	.debug_loc,"",@progbits
.Lsection_debug_loc:
	.text
.Ltext_begin:
	.data
	.file	1 "mma_test_fft.c"
	.file	2 "kiss_fft.c"
	.file	3 "./_kiss_fft_guts.h"
	.file	4 "./kiss_fft.h"
	.text
	.globl	test_stores
	.align	16, 0x90
	.type	test_stores,@function
test_stores:                            # @test_stores
	.cfi_startproc
.Lfunc_begin0:
	.loc	1 16 0                  # mma_test_fft.c:16:0
# BB#0:
	pushq	%rbp
.Ltmp7:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp8:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp9:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp10:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp11:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp12:
	.cfi_def_cfa_offset 56
	subq	$1592, %rsp             # imm = 0x638
.Ltmp13:
	.cfi_def_cfa_offset 1648
.Ltmp14:
	.cfi_offset %rbx, -56
.Ltmp15:
	.cfi_offset %r12, -48
.Ltmp16:
	.cfi_offset %r13, -40
.Ltmp17:
	.cfi_offset %r14, -32
.Ltmp18:
	.cfi_offset %r15, -24
.Ltmp19:
	.cfi_offset %rbp, -16
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str7, %r8
	leaq	.L.str9, %r9
	movabsq	$2, %r10
	leaq	.L.str13, %r11
	movabsq	$3, %rbx
	leaq	.L.str12, %r14
	movabsq	$18, %r15
	leaq	.L.str5, %r12
	leaq	.L.str6, %r13
	leaq	.L.str11, %rbp
	movl	%edx, 1588(%rsp)        # 4-byte Spill
	movl	$0, %edx
	movl	%edx, 1584(%rsp)        # 4-byte Spill
	movl	$1, %edx
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str27, %rax
	.loc	1 16 0 prologue_end     # mma_test_fft.c:16:0
.Ltmp20:
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1496(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1520(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1488(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	1496(%rsp), %rax        # 8-byte Reload
	movl	%edx, 1484(%rsp)        # 4-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 1472(%rsp)        # 8-byte Spill
	movq	1504(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1464(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1576(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1456(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r13, 1448(%rsp)        # 8-byte Spill
	movq	%rbp, 1440(%rsp)        # 8-byte Spill
	movq	%r12, 1432(%rsp)        # 8-byte Spill
	movq	%r15, 1424(%rsp)        # 8-byte Spill
	movq	%r14, 1416(%rsp)        # 8-byte Spill
	movq	%rbx, 1408(%rsp)        # 8-byte Spill
	movq	%r10, 1400(%rsp)        # 8-byte Spill
	movq	%r11, 1392(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1520(%rsp), %rsi        # 8-byte Reload
	movq	1488(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	1588(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1560(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: test_stores:store_vals <- [RSP+1496]
	#DEBUG_VALUE: test_stores:store_loc <- [RSP+1488]
	#DEBUG_VALUE: test_stores:num_vals <- [RSP+1588]
.Ltmp21:
	#DEBUG_VALUE: test_stores:num_failures <- 0
	#DEBUG_VALUE: i <- 0
	.loc	1 18 0                  # mma_test_fft.c:18:0
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1432(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	1536(%rsp), %r8         # 8-byte Reload
	movl	1584(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1560(%rsp), %rsi        # 8-byte Reload
	movq	1576(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1588(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1560(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1588(%rsp), %esi        # 4-byte Reload
	cmpl	$0, %esi
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1391(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1432(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	1584(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1576(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1576(%rsp), %rsi        # 8-byte Reload
	movq	1576(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1391(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1472(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1576(%rsp), %r9         # 8-byte Reload
	movq	1456(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1391(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 1376(%rsp)        # 8-byte Spill
	jne	.LBB0_1
	jmp	.LBB0_4
.Ltmp22:
.LBB0_1:                                # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	1376(%rsp), %rax        # 8-byte Reload
	movabsq	$2, %rcx
	movabsq	$64, %rdx
	leaq	.L.str, %rsi
	movabsq	$0, %rdi
	leaq	.L.str8, %r8
	leaq	.L.str9, %r9
	movabsq	$1, %r10
	leaq	.L.str17, %r11
	movabsq	$5, %rbx
	leaq	fprintf, %r14
	leaq	.L.str24, %r15
	movabsq	$19, %r12
	leaq	.L.str5, %r13
	leaq	.L.str12, %rbp
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	leaq	.L.str23, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1352(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1348(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	leaq	.L.str22, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str21, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str19, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	stdout, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str18, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str16, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str15, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str6, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 19 0                  # mma_test_fft.c:19:0
.Ltmp23:
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	movq	1208(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1192(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1188(%rsp)        # 4-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 1176(%rsp)        # 8-byte Spill
	movq	%rbp, %rdx
	movq	1304(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1168(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1200(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1160(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1348(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1152(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1144(%rsp)        # 8-byte Spill
	movq	%r12, 1136(%rsp)        # 8-byte Spill
	movq	%r13, 1128(%rsp)        # 8-byte Spill
	movq	%rbp, 1120(%rsp)        # 8-byte Spill
	movq	%r14, 1112(%rsp)        # 8-byte Spill
	movq	%rbx, 1104(%rsp)        # 8-byte Spill
	movq	%r10, 1096(%rsp)        # 8-byte Spill
	movq	%r11, 1088(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1096(%rsp), %r9         # 8-byte Reload
	movq	1216(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1096(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1348(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rcx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1096(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1080(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1348(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1488(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1368(%rsp), %rcx        # 8-byte Reload
	shlq	$2, %rcx
	movq	1488(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1072(%rsp)        # 8-byte Spill
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1288(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1348(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1072(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movl	(%rcx,%rdx,4), %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1320(%rsp), %rsi        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1068(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movl	1348(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1320(%rsp), %rsi        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1312(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1064(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1348(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1112(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
                                        # kill: AL<def> AL<kill> EAX<kill>
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movl	1064(%rsp), %edx        # 4-byte Reload
	movl	1068(%rsp), %ecx        # 4-byte Reload
	callq	fprintf
	movabsq	$2, %rsi
	movabsq	$64, %rdi
	leaq	.L.str1, %rdx
	movabsq	$0, %r8
	leaq	.L.str8, %r9
	leaq	.L.str9, %r10
	movabsq	$1, %r11
	leaq	.L.str25, %rbx
	movabsq	$5, %r14
	leaq	fprintf, %r15
	leaq	.L.str24, %r12
	movabsq	$20, %r13
	leaq	.L.str5, %rbp
	leaq	.L.str12, %rcx
	movq	%rcx, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str30, %rcx
	movq	%rcx, 1048(%rsp)        # 8-byte Spill
	movabsq	$49, %rcx
	movl	%eax, 1044(%rsp)        # 4-byte Spill
	movl	$0, %eax
	movl	%eax, 1040(%rsp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, 1032(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str29, %rcx
	movq	%rcx, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str14, %rcx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	movabsq	$33, %rcx
	movq	%rcx, 992(%rsp)         # 8-byte Spill
	leaq	.L.str28, %rcx
	movq	%rcx, 984(%rsp)         # 8-byte Spill
	leaq	.L.str26, %rcx
	movq	%rcx, 976(%rsp)         # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 968(%rsp)         # 8-byte Spill
	leaq	.L.str27, %rcx
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	leaq	stdout, %rcx
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	leaq	.L.str18, %rcx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	leaq	.L.str23, %rcx
	.loc	1 20 0                  # mma_test_fft.c:20:0
	movl	%eax, 932(%rsp)         # 4-byte Spill
	movl	1044(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 920(%rsp)         # 8-byte Spill
	movq	1024(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 912(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	1016(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 904(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	920(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 896(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 888(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	888(%rsp), %rax         # 8-byte Reload
	movq	%r8, 880(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	880(%rsp), %rax         # 8-byte Reload
	movq	%r9, 872(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movq	%r12, 864(%rsp)         # 8-byte Spill
	movq	%rbp, 856(%rsp)         # 8-byte Spill
	movq	%r13, 848(%rsp)         # 8-byte Spill
	movq	%r15, 840(%rsp)         # 8-byte Spill
	movq	%r14, 832(%rsp)         # 8-byte Spill
	movq	%r10, 824(%rsp)         # 8-byte Spill
	movq	%r11, 816(%rsp)         # 8-byte Spill
	movq	%rbx, 808(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	808(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movl	1040(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rax
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 800(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movl	1040(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1368(%rsp), %rax        # 8-byte Reload
	shlq	$2, %rax
	movq	1496(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 792(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	984(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movl	1040(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1496(%rsp), %rax        # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movl	(%rax,%rcx,4), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movl	%esi, 788(%rsp)         # 4-byte Spill
	movq	%r8, %rsi
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movl	1040(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1368(%rsp), %rax        # 8-byte Reload
	movl	%eax, %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 784(%rsp)         # 4-byte Spill
	movq	%rcx, %rsi
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	856(%rsp), %rsi         # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	1040(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	840(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	912(%rsp), %rsi         # 8-byte Reload
	movq	896(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str1, %esi
                                        # kill: RSI<def> ESI<kill>
	xorl	%edi, %edi
	movb	%dil, %al
	movq	800(%rsp), %rdi         # 8-byte Reload
	movl	784(%rsp), %edx         # 4-byte Reload
	movl	788(%rsp), %ecx         # 4-byte Reload
	callq	fprintf
	movabsq	$1, %rsi
	leaq	.L.str33, %rdi
	movabsq	$0, %r8
	leaq	.L.str9, %r9
	movabsq	$2, %r10
	leaq	.L.str35, %r11
	movabsq	$3, %rbx
	leaq	.L.str16, %r14
	movabsq	$21, %r15
	leaq	.L.str5, %r12
	leaq	.L.str12, %r13
	leaq	.L.str34, %rcx
	movl	$0, %edx
	movl	$1, %ebp
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 760(%rsp)         # 8-byte Spill
	leaq	.L.str31, %rcx
	movq	%rcx, 752(%rsp)         # 8-byte Spill
	leaq	.L.str32, %rcx
	movq	%rcx, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 736(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	leaq	.L.str26, %rcx
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 712(%rsp)         # 8-byte Spill
	leaq	.L.str19, %rcx
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	leaq	.L.str30, %rcx
	.loc	1 21 0                  # mma_test_fft.c:21:0
.Ltmp24:
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 696(%rsp)         # 8-byte Spill
	movq	768(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 688(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	760(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 680(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	696(%rsp), %rax         # 8-byte Reload
	movl	%edx, 676(%rsp)         # 4-byte Spill
	movq	%rax, %rdx
	movq	680(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	664(%rsp), %rax         # 8-byte Reload
	movq	%r8, 656(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	656(%rsp), %rax         # 8-byte Reload
	movq	%r9, 648(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	648(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 644(%rsp)         # 4-byte Spill
	movq	%r13, 632(%rsp)         # 8-byte Spill
	movq	%r12, 624(%rsp)         # 8-byte Spill
	movq	%r15, 616(%rsp)         # 8-byte Spill
	movq	%r10, 608(%rsp)         # 8-byte Spill
	movq	%r11, 600(%rsp)         # 8-byte Spill
	movq	%rbx, 592(%rsp)         # 8-byte Spill
	movq	%r14, 584(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	676(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1072(%rsp), %rdx        # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1488(%rsp), %rax        # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movl	(%rax,%rcx,4), %ebp
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 580(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	676(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1496(%rsp), %rax        # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movl	(%rax,%rcx,4), %ebp
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 576(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movl	676(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	576(%rsp), %r9d         # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	608(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	580(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	580(%rsp), %ebp         # 4-byte Reload
	movl	576(%rsp), %esi         # 4-byte Reload
	cmpl	%esi, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 575(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	624(%rsp), %rsi         # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	676(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	592(%rsp), %rdi         # 8-byte Reload
	movq	656(%rsp), %rsi         # 8-byte Reload
	movq	656(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	608(%rsp), %rdi         # 8-byte Reload
	movq	656(%rsp), %rsi         # 8-byte Reload
	movq	656(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	575(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	656(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	575(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	jne	.LBB0_3
# BB#2:                                 #   in Loop: Header=BB0_1 Depth=1
	movabsq	$2, %rdi
	movabsq	$64, %rax
	leaq	.L.str2, %rdx
	movabsq	$0, %rcx
	leaq	.L.str8, %r8
	leaq	.L.str9, %rsi
	movabsq	$1, %r9
	leaq	.L.str36, %r10
	movabsq	$6, %r11
	leaq	fprintf, %rbx
	leaq	.L.str24, %r14
	movabsq	$22, %r15
	leaq	.L.str5, %r12
	leaq	.L.str35, %r13
	leaq	.L.str38, %rbp
	movq	%rax, 560(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 552(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 548(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 536(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 528(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	leaq	.L.str37, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	stdout, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str18, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	.loc	1 22 0                  # mma_test_fft.c:22:0
.Ltmp25:
	movq	%rdi, 472(%rsp)         # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 468(%rsp)         # 4-byte Spill
	movq	%r12, %rsi
	movq	%rdx, 456(%rsp)         # 8-byte Spill
	movq	%r13, %rdx
	movq	%rcx, 448(%rsp)         # 8-byte Spill
	movq	%r10, %rcx
	movq	%r8, 440(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	548(%rsp), %eax         # 4-byte Reload
	movq	%r9, 432(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 424(%rsp)         # 8-byte Spill
	movq	%r14, 416(%rsp)         # 8-byte Spill
	movq	%r12, 408(%rsp)         # 8-byte Spill
	movq	%r15, 400(%rsp)         # 8-byte Spill
	movq	%rbx, 392(%rsp)         # 8-byte Spill
	movq	%r13, 384(%rsp)         # 8-byte Spill
	movq	%r10, 376(%rsp)         # 8-byte Spill
	movq	%r11, 368(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	432(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rcx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 360(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movl	548(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	432(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	432(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 356(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	424(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movl	548(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	368(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	392(%rsp), %rdx         # 8-byte Reload
	movq	432(%rsp), %rcx         # 8-byte Reload
	movq	416(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	360(%rsp), %rdx         # 8-byte Reload
	movq	432(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	552(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str2, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
                                        # kill: AL<def> AL<kill> EAX<kill>
	movq	360(%rsp), %rdi         # 8-byte Reload
	movl	356(%rsp), %edx         # 4-byte Reload
	movl	580(%rsp), %ecx         # 4-byte Reload
	movl	576(%rsp), %r8d         # 4-byte Reload
	callq	fprintf
	movabsq	$1, %rsi
	movabsq	$0, %rdi
	leaq	.L.str16, %r8
	leaq	.L.str9, %r9
	movabsq	$25, %r10
	leaq	.L.str5, %r11
	leaq	.L.str35, %rdx
	leaq	.L.str39, %rcx
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$19134, %r15            # imm = 0x4ABE
	movabsq	$32, %r12
	leaq	.L.str38, %r13
	.loc	1 25 0                  # mma_test_fft.c:25:0
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rdi, 344(%rsp)         # 8-byte Spill
	movq	%r15, %rdi
	movq	%rsi, 336(%rsp)         # 8-byte Spill
	movq	%r12, %rsi
	movq	%rdx, 328(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	336(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 320(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	%r8, 312(%rsp)          # 8-byte Spill
	movq	%r13, %r8
	movq	344(%rsp), %r15         # 8-byte Reload
	movq	%r9, 304(%rsp)          # 8-byte Spill
	movq	%r15, %r9
	movq	304(%rsp), %r12         # 8-byte Reload
	movq	%r12, (%rsp)
	movl	%r14d, 300(%rsp)        # 4-byte Spill
	movl	%ebp, 296(%rsp)         # 4-byte Spill
	movq	%rbx, 288(%rsp)         # 8-byte Spill
	movq	%r10, 280(%rsp)         # 8-byte Spill
	movq	%r11, 272(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movl	296(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	344(%rsp), %rsi         # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	344(%rsp), %r9          # 8-byte Reload
	movq	304(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
.Ltmp26:
.LBB0_3:                                #   in Loop: Header=BB0_1 Depth=1
	movabsq	$1, %rax
	leaq	.L.str41, %rcx
	movabsq	$0, %rdx
	leaq	.L.str9, %rsi
	movabsq	$2, %rdi
	leaq	.L.str12, %r8
	movabsq	$3, %r9
	leaq	.L.str13, %r10
	movabsq	$18, %r11
	leaq	.L.str5, %rbx
	leaq	.L.str16, %r14
	leaq	.L.str42, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 264(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str40, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str15, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	1 18 0                  # mma_test_fft.c:18:0
	movq	%rdi, 184(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 168(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 160(%rsp)         # 8-byte Spill
	movq	216(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 152(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	160(%rsp), %rax         # 8-byte Reload
	movq	%r8, 144(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 136(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 128(%rsp)         # 8-byte Spill
	movl	%ebp, 124(%rsp)         # 4-byte Spill
	movl	%r12d, 120(%rsp)        # 4-byte Spill
	movq	%r13, 112(%rsp)         # 8-byte Spill
	movq	%r14, 104(%rsp)         # 8-byte Spill
	movq	%rbx, 96(%rsp)          # 8-byte Spill
	movq	%r10, 88(%rsp)          # 8-byte Spill
	movq	%r11, 80(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	192(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1368(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 72(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	248(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movl	124(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	72(%rsp), %rax          # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 68(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	124(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1588(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	68(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	256(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	68(%rsp), %ebp          # 4-byte Reload
	movl	1588(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 67(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rsi          # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	124(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	168(%rsp), %rsi         # 8-byte Reload
	movq	168(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	88(%rsp), %r8           # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	168(%rsp), %rsi         # 8-byte Reload
	movq	168(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	67(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	67(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	72(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 1376(%rsp)        # 8-byte Spill
	jne	.LBB0_4
	jmp	.LBB0_1
.Ltmp27:
.LBB0_4:                                # %._crit_edge
	movl	$0, %eax
	movabsq	$1, %rcx
	movabsq	$32, %rsi
	movabsq	$0, %rdx
	leaq	.L.str8, %r8
	leaq	.L.str9, %rdi
	movabsq	$28, %r9
	leaq	.L.str5, %r10
	leaq	.L.str13, %r11
	leaq	.L.str43, %rbx
	movl	$1, %ebp
	.loc	1 28 0                  # mma_test_fft.c:28:0
	movq	%rdi, 56(%rsp)          # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 40(%rsp)          # 8-byte Spill
	movq	%r11, %rdx
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%rbx, %rcx
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	%r8, 24(%rsp)           # 8-byte Spill
	movq	%r9, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	movl	%ebp, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	40(%rsp), %rdx          # 8-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movq	56(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	20(%rsp), %eax          # 4-byte Reload
	addq	$1592, %rsp             # imm = 0x638
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp28:
.Ltmp29:
	.size	test_stores, .Ltmp29-test_stores
.Lfunc_end0:
	.cfi_endproc

	.globl	store_kernel
	.align	16, 0x90
	.type	store_kernel,@function
store_kernel:                           # @store_kernel
	.cfi_startproc
.Lfunc_begin1:
	.loc	1 33 0                  # mma_test_fft.c:33:0
# BB#0:
	pushq	%rbp
.Ltmp33:
	.cfi_def_cfa_offset 16
.Ltmp34:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp35:
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$1912, %rsp             # imm = 0x778
.Ltmp36:
	.cfi_offset %rbx, -56
.Ltmp37:
	.cfi_offset %r12, -48
.Ltmp38:
	.cfi_offset %r13, -40
.Ltmp39:
	.cfi_offset %r14, -32
.Ltmp40:
	.cfi_offset %r15, -24
	movl	$0, %eax
	movabsq	$0, %rcx
	movabsq	$4, %r8
	movabsq	$64, %r9
	leaq	.L.str8, %r10
	leaq	.L.str9, %r11
	movabsq	$3, %rbx
	movabsq	$2, %r14
	movabsq	$32, %r15
	movabsq	$1, %r12
	leaq	.L.str10, %r13
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	leaq	kiss_fft_alloc, %rcx
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	leaq	.L.str45, %rcx
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	movabsq	$35, %rcx
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	leaq	.L.str44, %rcx
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	leaq	.L.str6, %rcx
	movq	%rcx, -96(%rbp)         # 8-byte Spill
	leaq	.L.str7, %rcx
	movq	%rcx, -104(%rbp)        # 8-byte Spill
	movabsq	$49, %rcx
	movl	%eax, -108(%rbp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, -120(%rbp)        # 8-byte Spill
	leaq	.L.str20, %rcx
	movq	%rcx, -128(%rbp)        # 8-byte Spill
	leaq	.L.str27, %rcx
	.loc	1 33 0 prologue_end     # mma_test_fft.c:33:0
.Ltmp41:
	movq	%rcx, -136(%rbp)        # 8-byte Spill
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%r12, -160(%rbp)        # 8-byte Spill
	movq	%r13, -168(%rbp)        # 8-byte Spill
	movl	%edx, -172(%rbp)        # 4-byte Spill
	movl	%eax, -176(%rbp)        # 4-byte Spill
	movq	%r8, -184(%rbp)         # 8-byte Spill
	movq	%r9, -192(%rbp)         # 8-byte Spill
	movq	%r10, -200(%rbp)        # 8-byte Spill
	movq	%r11, -208(%rbp)        # 8-byte Spill
	movq	%rbx, -216(%rbp)        # 8-byte Spill
	movq	%r14, -224(%rbp)        # 8-byte Spill
	movq	%r15, -232(%rbp)        # 8-byte Spill
	callq	trace_logger_log_entry
	subq	$16, %rsp
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	-136(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-224(%rbp), %rdi        # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	-128(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-216(%rbp), %rdi        # 8-byte Reload
	movq	-232(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	-168(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	#DEBUG_VALUE: store_kernel:store_vals <- [RBP+-144]
	#DEBUG_VALUE: store_kernel:store_loc <- [RBP+-152]
	#DEBUG_VALUE: store_kernel:num_vals <- [RBP+-172]
	.loc	1 35 0                  # mma_test_fft.c:35:0
.Ltmp42:
	subq	$16, %rsp
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movq	-120(%rbp), %r8         # 8-byte Reload
	movl	-176(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	-72(%rbp), %r8          # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-232(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	-168(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-224(%rbp), %rdi        # 8-byte Reload
	movq	-232(%rbp), %rsi        # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-200(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-216(%rbp), %rdi        # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-200(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	-200(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %r9          # 8-byte Reload
	movq	-208(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-172(%rbp), %edi        # 4-byte Reload
	movl	-108(%rbp), %esi        # 4-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	callq	kiss_fft_alloc
	movabsq	$1, %rcx
	leaq	.L.str17, %rdx
	movabsq	$0, %r8
	leaq	.L.str9, %r9
	movabsq	$2, %r10
	leaq	.L.str48, %r11
	movabsq	$3, %rdi
	leaq	.L.str47, %rbx
	movabsq	$35, %r14
	leaq	.L.str44, %r15
	leaq	.L.str6, %r12
	leaq	.L.str46, %r13
	movl	$1, %esi
	movq	%rax, -240(%rbp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, -248(%rbp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -256(%rbp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -264(%rbp)        # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, -272(%rbp)        # 8-byte Spill
	movabsq	$46, %rax
	subq	$16, %rsp
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	-248(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -288(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-256(%rbp), %rax        # 8-byte Reload
	movl	%esi, -292(%rbp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	-240(%rbp), %rax        # 8-byte Reload
	movq	%rdx, -304(%rbp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, -312(%rbp)        # 8-byte Spill
	movq	-264(%rbp), %rax        # 8-byte Reload
	movq	%r8, -320(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movq	-320(%rbp), %rax        # 8-byte Reload
	movq	%r9, -328(%rbp)         # 8-byte Spill
	movq	%rax, %r9
	movq	-328(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, -336(%rbp)        # 8-byte Spill
	movq	%r12, -344(%rbp)        # 8-byte Spill
	movq	%r14, -352(%rbp)        # 8-byte Spill
	movq	%rbx, -360(%rbp)        # 8-byte Spill
	movq	%r10, -368(%rbp)        # 8-byte Spill
	movq	%r11, -376(%rbp)        # 8-byte Spill
	movq	%r13, -384(%rbp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	addq	$16, %rsp
.Ltmp43:
	#DEBUG_VALUE: store_kernel:cfg <- [RBP+-240]
	subq	$16, %rsp
	movq	-352(%rbp), %rdi        # 8-byte Reload
	movq	-336(%rbp), %rsi        # 8-byte Reload
	movq	-344(%rbp), %rdx        # 8-byte Reload
	movq	-304(%rbp), %rcx        # 8-byte Reload
	movq	-280(%rbp), %r8         # 8-byte Reload
	movl	-292(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-368(%rbp), %rdi        # 8-byte Reload
	movq	-256(%rbp), %rsi        # 8-byte Reload
	movq	-320(%rbp), %rdx        # 8-byte Reload
	movq	-320(%rbp), %rcx        # 8-byte Reload
	movq	-272(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-312(%rbp), %rdi        # 8-byte Reload
	movq	-256(%rbp), %rsi        # 8-byte Reload
	movq	-240(%rbp), %rdx        # 8-byte Reload
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-264(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-240(%rbp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	-312(%rbp), %rsi        # 8-byte Reload
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-304(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -385(%rbp)         # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-352(%rbp), %rdi        # 8-byte Reload
	movq	-336(%rbp), %rsi        # 8-byte Reload
	movq	-344(%rbp), %rdx        # 8-byte Reload
	movq	-384(%rbp), %rcx        # 8-byte Reload
	movq	-368(%rbp), %r8         # 8-byte Reload
	movl	-292(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-288(%rbp), %rdi        # 8-byte Reload
	movq	-320(%rbp), %rsi        # 8-byte Reload
	movq	-320(%rbp), %rdx        # 8-byte Reload
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-360(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-368(%rbp), %rdi        # 8-byte Reload
	movq	-320(%rbp), %rsi        # 8-byte Reload
	movq	-320(%rbp), %rdx        # 8-byte Reload
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-376(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-385(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	subq	$16, %rsp
	movq	-312(%rbp), %rdi        # 8-byte Reload
	movq	-312(%rbp), %rsi        # 8-byte Reload
	movq	-312(%rbp), %rcx        # 8-byte Reload
	movq	-304(%rbp), %r8         # 8-byte Reload
	movq	-320(%rbp), %r9         # 8-byte Reload
	movq	-328(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-385(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB1_6
.Ltmp44:
# BB#1:
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str26, %rdx
	leaq	.L.str9, %rsi
	movabsq	$2, %rdi
	leaq	.L.str51, %r8
	movabsq	$3, %r9
	leaq	.L.str50, %r10
	movabsq	$39, %r11
	leaq	.L.str44, %rbx
	leaq	.L.str48, %r14
	leaq	.L.str49, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -400(%rbp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -408(%rbp)        # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, -416(%rbp)        # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, -424(%rbp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -432(%rbp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -440(%rbp)        # 8-byte Spill
	leaq	.L.str25, %rax
	.loc	1 37 0                  # mma_test_fft.c:37:0
.Ltmp45:
	subq	$16, %rsp
	movq	%rax, -448(%rbp)        # 8-byte Spill
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str44, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, -456(%rbp)        # 8-byte Spill
	movl	$.L.str48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -464(%rbp)        # 8-byte Spill
	movl	$.L.str21, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -472(%rbp)        # 8-byte Spill
	movl	$37, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -480(%rbp)        # 8-byte Spill
	movl	$34, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -488(%rbp)        # 8-byte Spill
	movl	$1, %esi
	movq	%rax, -496(%rbp)        # 8-byte Spill
	movq	-480(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -504(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-496(%rbp), %rax        # 8-byte Reload
	movl	%esi, -508(%rbp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	-464(%rbp), %rax        # 8-byte Reload
	movq	%rdx, -520(%rbp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	-472(%rbp), %rax        # 8-byte Reload
	movq	%rcx, -528(%rbp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	-488(%rbp), %rax        # 8-byte Reload
	movq	%r8, -536(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movl	-508(%rbp), %eax        # 4-byte Reload
	movq	%r9, -544(%rbp)         # 8-byte Spill
	movl	%eax, %r9d
	movq	%r13, -552(%rbp)        # 8-byte Spill
	movq	%r14, -560(%rbp)        # 8-byte Spill
	movq	%r15, -568(%rbp)        # 8-byte Spill
	movl	%r12d, -572(%rbp)       # 4-byte Spill
	movq	%rbx, -584(%rbp)        # 8-byte Spill
	movq	%r11, -592(%rbp)        # 8-byte Spill
	movq	%r10, -600(%rbp)        # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %ecx
	subq	$16, %rsp
	movq	%rsp, %rdx
	movq	$.L.str9, (%rdx)
	movl	$.L.str10, %r9d
	movl	%r9d, %r8d
	movl	$32, %r9d
	movl	%r9d, %esi
	movl	$1, %r9d
	movl	%r9d, %edx
	xorl	%r9d, %r9d
	movl	%r9d, %edi
	movq	%rdi, -608(%rbp)        # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rdx, -616(%rbp)        # 8-byte Spill
	movq	%rcx, %rdx
	movq	-616(%rbp), %r10        # 8-byte Reload
	movq	%rcx, -624(%rbp)        # 8-byte Spill
	movq	%r10, %rcx
	movq	-608(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movl	$19134, %eax            # imm = 0x4ABE
	movl	%eax, %ecx
	movl	$64, %eax
	movl	%eax, %edx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	-624(%rbp), %r8         # 8-byte Reload
	movq	%rdx, -632(%rbp)        # 8-byte Spill
	movq	%r8, %rdx
	movq	-616(%rbp), %r9         # 8-byte Reload
	movq	%rcx, -640(%rbp)        # 8-byte Spill
	movq	%r9, %rcx
	movq	-472(%rbp), %r8         # 8-byte Reload
	movq	-608(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	%rsp, %rcx
	subq	$16, %rsp
	movq	%rsp, %rdx
	movl	$1, (%rdx)
	movl	$.L.str23, %eax
	movl	%eax, %edx
	movl	$26, %eax
	movl	%eax, %esi
	movq	-480(%rbp), %rdi        # 8-byte Reload
	movq	-496(%rbp), %r8         # 8-byte Reload
	movq	%rsi, -648(%rbp)        # 8-byte Spill
	movq	%r8, %rsi
	movq	-464(%rbp), %r9         # 8-byte Reload
	movq	%rdx, -656(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-656(%rbp), %r10        # 8-byte Reload
	movq	%rcx, -664(%rbp)        # 8-byte Spill
	movq	%r10, %rcx
	movq	-648(%rbp), %r8         # 8-byte Reload
	movl	-508(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movq	-616(%rbp), %rdi        # 8-byte Reload
	movq	-632(%rbp), %rsi        # 8-byte Reload
	movq	-624(%rbp), %rdx        # 8-byte Reload
	movq	-616(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %r8         # 8-byte Reload
	movq	-608(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-624(%rbp), %rcx        # 8-byte Reload
	leaq	15(,%rcx,8), %rdx
	andq	$-16, %rdx
	movq	%rsp, %rsi
	subq	%rdx, %rsi
	movq	%rsi, %rsp
	subq	$16, %rsp
	movq	%rsp, %rdi
	movq	$.L.str9, (%rdi)
	movq	-640(%rbp), %rdi        # 8-byte Reload
	movq	-632(%rbp), %r8         # 8-byte Reload
	movq	%rsi, -672(%rbp)        # 8-byte Spill
	movq	%r8, %rsi
	movq	-672(%rbp), %r9         # 8-byte Reload
	movq	%rdx, -680(%rbp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	-616(%rbp), %rcx        # 8-byte Reload
	movq	-656(%rbp), %r8         # 8-byte Reload
	movq	-608(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	.loc	1 38 0                  # mma_test_fft.c:38:0
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str25, %eax
	movl	%eax, %ecx
	movl	$38, %eax
	movl	%eax, %edi
	movq	-496(%rbp), %rsi        # 8-byte Reload
	movq	-464(%rbp), %rdx        # 8-byte Reload
	movq	-648(%rbp), %r8         # 8-byte Reload
	movl	-508(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movq	-616(%rbp), %rdi        # 8-byte Reload
	movq	-632(%rbp), %rsi        # 8-byte Reload
	movq	-624(%rbp), %rdx        # 8-byte Reload
	movq	-616(%rbp), %rcx        # 8-byte Reload
	movq	-472(%rbp), %r8         # 8-byte Reload
	movq	-608(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	%rsp, %rcx
	movq	-680(%rbp), %rdx        # 8-byte Reload
	subq	%rdx, %rcx
	movq	%rcx, %rsp
	subq	$16, %rsp
	movq	-552(%rbp), %rdi        # 8-byte Reload
	movq	-440(%rbp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	-528(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -688(%rbp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	-448(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
.Ltmp46:
	#DEBUG_VALUE: out <- [RBP+-688]
	#DEBUG_VALUE: i <- 0
	.loc	1 39 0                  # mma_test_fft.c:39:0
	subq	$16, %rsp
	movq	-592(%rbp), %rdi        # 8-byte Reload
	movq	-584(%rbp), %rsi        # 8-byte Reload
	movq	-560(%rbp), %rdx        # 8-byte Reload
	movq	-520(%rbp), %rcx        # 8-byte Reload
	movq	-432(%rbp), %r8         # 8-byte Reload
	movl	-572(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-504(%rbp), %rdi        # 8-byte Reload
	movq	-408(%rbp), %rsi        # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-400(%rbp), %rcx        # 8-byte Reload
	movq	-424(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-528(%rbp), %rdi        # 8-byte Reload
	movq	-408(%rbp), %rsi        # 8-byte Reload
	movq	-528(%rbp), %rcx        # 8-byte Reload
	movq	-416(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-552(%rbp), %rdi        # 8-byte Reload
	movq	-528(%rbp), %rsi        # 8-byte Reload
	movq	-528(%rbp), %rcx        # 8-byte Reload
	movq	-520(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -689(%rbp)         # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-592(%rbp), %rdi        # 8-byte Reload
	movq	-584(%rbp), %rsi        # 8-byte Reload
	movq	-560(%rbp), %rdx        # 8-byte Reload
	movq	-568(%rbp), %rcx        # 8-byte Reload
	movq	-504(%rbp), %r8         # 8-byte Reload
	movl	-572(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-544(%rbp), %rdi        # 8-byte Reload
	movq	-400(%rbp), %rsi        # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-528(%rbp), %rcx        # 8-byte Reload
	movq	-600(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-504(%rbp), %rdi        # 8-byte Reload
	movq	-400(%rbp), %rsi        # 8-byte Reload
	movq	-400(%rbp), %rdx        # 8-byte Reload
	movq	-528(%rbp), %rcx        # 8-byte Reload
	movq	-536(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-689(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-528(%rbp), %rdi        # 8-byte Reload
	movq	-528(%rbp), %rsi        # 8-byte Reload
	movq	-528(%rbp), %rcx        # 8-byte Reload
	movq	-520(%rbp), %r8         # 8-byte Reload
	movq	-400(%rbp), %r9         # 8-byte Reload
	movq	-456(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-689(%rbp), %al         # 1-byte Reload
	testb	$1, %al
	movq	-400(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, -704(%rbp)        # 8-byte Spill
	jne	.LBB1_2
	jmp	.LBB1_3
.Ltmp47:
.LBB1_2:                                # %.lr.ph5
                                        # =>This Inner Loop Header: Depth=1
	movq	-704(%rbp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str58, %rdx
	movabsq	$0, %rsi
	leaq	.L.str9, %rdi
	movabsq	$2, %r8
	leaq	.L.str50, %r9
	movabsq	$3, %r10
	leaq	.L.str51, %r11
	movabsq	$39, %rbx
	leaq	.L.str44, %r14
	leaq	.L.str59, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -712(%rbp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -720(%rbp)        # 8-byte Spill
	leaq	.L.str57, %rax
	movq	%rax, -728(%rbp)        # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, -736(%rbp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -744(%rbp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -752(%rbp)        # 8-byte Spill
	leaq	.L.str53, %rax
	movq	%rax, -760(%rbp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -768(%rbp)        # 8-byte Spill
	leaq	.L.str52, %rax
	movq	%rax, -776(%rbp)        # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, -784(%rbp)        # 8-byte Spill
	movabsq	$8, %rax
	vxorps	%xmm0, %xmm0, %xmm0
	vxorps	%xmm1, %xmm1, %xmm1
	movq	%rax, -792(%rbp)        # 8-byte Spill
	leaq	.L.str32, %rax
	movq	%rax, -800(%rbp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, -808(%rbp)        # 8-byte Spill
	leaq	.L.str56, %rax
	movq	%rax, -816(%rbp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, -824(%rbp)        # 8-byte Spill
	leaq	.L.str54, %rax
	movq	%rax, -832(%rbp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, -840(%rbp)        # 8-byte Spill
	leaq	.L.str30, %rax
	movq	%rax, -848(%rbp)        # 8-byte Spill
	leaq	.L.str31, %rax
	movq	%rax, -856(%rbp)        # 8-byte Spill
	movabsq	$43, %rax
	movq	%rax, -864(%rbp)        # 8-byte Spill
	leaq	.L.str55, %rax
	.loc	1 43 0                  # mma_test_fft.c:43:0
.Ltmp48:
	subq	$16, %rsp
	movq	%rax, -872(%rbp)        # 8-byte Spill
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str44, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, -880(%rbp)        # 8-byte Spill
	movl	$.L.str50, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -888(%rbp)        # 8-byte Spill
	movl	$.L.str52, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, -896(%rbp)        # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, -904(%rbp)        # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, -912(%rbp)        # 8-byte Spill
	movl	$1, %esi
	movq	%rdi, -920(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	-904(%rbp), %rax        # 8-byte Reload
	movl	%esi, -924(%rbp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	-888(%rbp), %rax        # 8-byte Reload
	movq	%rdx, -936(%rbp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	-896(%rbp), %rax        # 8-byte Reload
	movq	%rcx, -944(%rbp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	-912(%rbp), %rax        # 8-byte Reload
	movq	%r8, -952(%rbp)         # 8-byte Spill
	movq	%rax, %r8
	movl	-924(%rbp), %eax        # 4-byte Reload
	movq	%r9, -960(%rbp)         # 8-byte Spill
	movl	%eax, %r9d
	vmovsd	%xmm1, -968(%rbp)       # 8-byte Spill
	movl	%r12d, -972(%rbp)       # 4-byte Spill
	movq	%r13, -984(%rbp)        # 8-byte Spill
	vmovss	%xmm0, -988(%rbp)       # 4-byte Spill
	movq	%r15, -1000(%rbp)       # 8-byte Spill
	movq	%r14, -1008(%rbp)       # 8-byte Spill
	movq	%r10, -1016(%rbp)       # 8-byte Spill
	movq	%r11, -1024(%rbp)       # 8-byte Spill
	movq	%rbx, -1032(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str48, (%rcx)
	movl	$.L.str8, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %ecx
	movl	$64, %eax
	movl	%eax, %edx
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	$1, %eax
	movl	%eax, %edi
	movq	%rdi, -1040(%rbp)       # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, -1048(%rbp)       # 8-byte Spill
	movq	%rdx, %rsi
	movq	-1048(%rbp), %r10       # 8-byte Reload
	movq	%rdx, -1056(%rbp)       # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, -1064(%rbp)       # 8-byte Spill
	movq	%r10, %rcx
	movq	-1040(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str50, (%rcx)
	movl	$.L.str53, %eax
	movl	%eax, %r8d
	movq	-1040(%rbp), %rdi       # 8-byte Reload
	movq	-1056(%rbp), %rsi       # 8-byte Reload
	movq	-1048(%rbp), %rdx       # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1040(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str50, (%rcx)
	movl	$19134, %eax            # imm = 0x4ABE
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	-1056(%rbp), %rsi       # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movq	-1040(%rbp), %r8        # 8-byte Reload
	movq	%rcx, -1072(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-896(%rbp), %r8         # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str28, %eax
	movl	%eax, %ecx
	movl	$43, %eax
	movl	%eax, %edx
	movl	$29, %eax
	movl	%eax, %r8d
	movq	%rdx, %rdi
	movq	-904(%rbp), %rsi        # 8-byte Reload
	movq	-888(%rbp), %r9         # 8-byte Reload
	movq	%rdx, -1080(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -1088(%rbp)       # 8-byte Spill
	movl	-924(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movq	-1064(%rbp), %rdi       # 8-byte Reload
	movq	-1056(%rbp), %rsi       # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-896(%rbp), %r8         # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movl	$.L.str27, %eax
	movl	%eax, %r8d
	movq	-1040(%rbp), %rdi       # 8-byte Reload
	movq	-1056(%rbp), %rsi       # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	leaq	(%rcx,%rdx,4), %rsi
	subq	$16, %rsp
	movq	%rsp, %rdi
	movq	$.L.str9, (%rdi)
	movq	-1072(%rbp), %rdi       # 8-byte Reload
	movq	-1056(%rbp), %r8        # 8-byte Reload
	movq	%rsi, -1096(%rbp)       # 8-byte Spill
	movq	%r8, %rsi
	movq	-1096(%rbp), %rdx       # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1088(%rbp), %r8        # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str29, %eax
	movl	%eax, %ecx
	movl	$27, %eax
	movl	%eax, %r8d
	movq	-1080(%rbp), %rdi       # 8-byte Reload
	movq	-904(%rbp), %rsi        # 8-byte Reload
	movq	-888(%rbp), %rdx        # 8-byte Reload
	movq	%rcx, -1104(%rbp)       # 8-byte Spill
	movl	-924(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movq	-1040(%rbp), %rdi       # 8-byte Reload
	movq	-1056(%rbp), %rsi       # 8-byte Reload
	movq	-1096(%rbp), %rdx       # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1088(%rbp), %r8        # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movl	(%rcx,%rdx,4), %eax
	movl	%eax, %esi
	subq	$16, %rsp
	movq	%rsp, %rdi
	movq	$.L.str9, (%rdi)
	movl	$32, %r12d
	movl	%r12d, %edi
	movq	-1072(%rbp), %r8        # 8-byte Reload
	movq	%rdi, -1112(%rbp)       # 8-byte Spill
	movq	%r8, %rdi
	movq	-1112(%rbp), %r9        # 8-byte Reload
	movq	%rsi, -1120(%rbp)       # 8-byte Spill
	movq	%r9, %rsi
	movq	-1120(%rbp), %rdx       # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1104(%rbp), %r8        # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	movl	%eax, -1124(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str30, %eax
	movl	%eax, %ecx
	movl	$39, %eax
	movl	%eax, %r8d
	movq	-1080(%rbp), %rdi       # 8-byte Reload
	movq	-904(%rbp), %rsi        # 8-byte Reload
	movq	-888(%rbp), %rdx        # 8-byte Reload
	movl	-924(%rbp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	%rsp, %rcx
	movq	$.L.str9, (%rcx)
	movq	-1040(%rbp), %rdi       # 8-byte Reload
	movq	-1112(%rbp), %rsi       # 8-byte Reload
	movq	-1120(%rbp), %rdx       # 8-byte Reload
	movq	-1040(%rbp), %rcx       # 8-byte Reload
	movq	-1104(%rbp), %r8        # 8-byte Reload
	movq	-1048(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_int
	addq	$16, %rsp
                                        # implicit-def: XMM0
	movl	-1124(%rbp), %eax       # 4-byte Reload
	vcvtsi2ssl	%eax, %xmm0, %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	vmovss	%xmm0, -1128(%rbp)      # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	-944(%rbp), %rdx        # 8-byte Reload
	movq	-848(%rbp), %rcx        # 8-byte Reload
	movq	-880(%rbp), %r8         # 8-byte Reload
	movq	-920(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	subq	$16, %rsp
	movq	-864(%rbp), %rdi        # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-856(%rbp), %rcx        # 8-byte Reload
	movq	-840(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1016(%rbp), %rdi       # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-880(%rbp), %rdx        # 8-byte Reload
	movq	-880(%rbp), %rcx        # 8-byte Reload
	movq	-784(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-776(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-672(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-832(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-712(%rbp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	-672(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	subq	$16, %rsp
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	%rdx, -1136(%rbp)       # 8-byte Spill
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-856(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-864(%rbp), %rdi        # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-872(%rbp), %rcx        # 8-byte Reload
	movq	-824(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-1136(%rbp), %rdx       # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-856(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	vmovss	-1128(%rbp), %xmm0      # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rdx        # 8-byte Reload
	movq	-848(%rbp), %rcx        # 8-byte Reload
	movq	-880(%rbp), %r8         # 8-byte Reload
	movq	-920(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	-672(%rbp), %rcx        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	vmovss	-1128(%rbp), %xmm0      # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	1 44 0                  # mma_test_fft.c:44:0
	subq	$16, %rsp
	movq	-808(%rbp), %rdi        # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-800(%rbp), %rcx        # 8-byte Reload
	movq	-840(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1016(%rbp), %rdi       # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rdx        # 8-byte Reload
	movq	-880(%rbp), %rcx        # 8-byte Reload
	movq	-784(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-776(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-672(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-832(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-712(%rbp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	-672(%rbp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	subq	$16, %rsp
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	%rdx, -1144(%rbp)       # 8-byte Spill
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-800(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-808(%rbp), %rdi        # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-816(%rbp), %rcx        # 8-byte Reload
	movq	-824(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-1144(%rbp), %rdx       # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-800(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	vmovsd	-968(%rbp), %xmm0       # 8-byte Reload
	movq	-880(%rbp), %rdx        # 8-byte Reload
	movq	-784(%rbp), %rcx        # 8-byte Reload
	movq	-880(%rbp), %r8         # 8-byte Reload
	movq	-920(%rbp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	-672(%rbp), %rcx        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	vmovss	-988(%rbp), %xmm0       # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp49:
	.loc	1 39 0                  # mma_test_fft.c:39:0
	subq	$16, %rsp
	movq	-1032(%rbp), %rdi       # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-760(%rbp), %rcx        # 8-byte Reload
	movq	-792(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rdx        # 8-byte Reload
	movq	-880(%rbp), %rcx        # 8-byte Reload
	movq	-784(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-712(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-776(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-712(%rbp), %rcx        # 8-byte Reload
	addq	$1, %rcx
	subq	$16, %rsp
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	-944(%rbp), %r8         # 8-byte Reload
	movq	%rcx, -1152(%rbp)       # 8-byte Spill
	movq	%r8, %rcx
	movq	-760(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1032(%rbp), %rdi       # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-728(%rbp), %rcx        # 8-byte Reload
	movq	-768(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-752(%rbp), %rsi        # 8-byte Reload
	movq	-1152(%rbp), %rdx       # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-760(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1152(%rbp), %rcx       # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-728(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, -1156(%rbp)       # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1032(%rbp), %rdi       # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-936(%rbp), %rcx        # 8-byte Reload
	movq	-744(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-172(%rbp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-736(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1156(%rbp), %eax       # 4-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-720(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-728(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1156(%rbp), %eax       # 4-byte Reload
	movl	-172(%rbp), %r12d       # 4-byte Reload
	cmpl	%r12d, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-984(%rbp), %rdi        # 8-byte Reload
	movq	-944(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-936(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -1157(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1032(%rbp), %rdi       # 8-byte Reload
	movq	-1008(%rbp), %rsi       # 8-byte Reload
	movq	-960(%rbp), %rdx        # 8-byte Reload
	movq	-1000(%rbp), %rcx       # 8-byte Reload
	movq	-952(%rbp), %r8         # 8-byte Reload
	movl	-972(%rbp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1016(%rbp), %rdi       # 8-byte Reload
	movq	-880(%rbp), %rsi        # 8-byte Reload
	movq	-880(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-1024(%rbp), %r8        # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-952(%rbp), %rdi        # 8-byte Reload
	movq	-880(%rbp), %rsi        # 8-byte Reload
	movq	-880(%rbp), %rdx        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-960(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1157(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-944(%rbp), %rdi        # 8-byte Reload
	movq	-944(%rbp), %rsi        # 8-byte Reload
	movq	-944(%rbp), %rcx        # 8-byte Reload
	movq	-936(%rbp), %r8         # 8-byte Reload
	movq	-880(%rbp), %r9         # 8-byte Reload
	movq	-920(%rbp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1157(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-1152(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -704(%rbp)        # 8-byte Spill
	jne	.LBB1_3
	jmp	.LBB1_2
.Ltmp50:
.LBB1_3:                                # %._crit_edge6
	movabsq	$3, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str62, %r8
	movabsq	$0, %rdx
	leaq	.L.str9, %rsi
	movabsq	$2, %r9
	leaq	.L.str54, %r10
	leaq	.L.str7, %r11
	movabsq	$4, %rbx
	leaq	kiss_fft, %r14
	leaq	.L.str61, %r15
	movabsq	$46, %r12
	leaq	.L.str44, %r13
	movq	%rax, -1168(%rbp)       # 8-byte Spill
	leaq	.L.str51, %rax
	movq	%rax, -1176(%rbp)       # 8-byte Spill
	leaq	.L.str60, %rax
	movq	%rax, -1184(%rbp)       # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, -1192(%rbp)       # 8-byte Spill
	movl	$1, %esi
	.loc	1 46 0                  # mma_test_fft.c:46:0
	subq	$16, %rsp
	movq	%rdi, -1200(%rbp)       # 8-byte Spill
	movq	%r12, %rdi
	movl	%esi, -1204(%rbp)       # 4-byte Spill
	movq	%r13, %rsi
	movq	-1176(%rbp), %r12       # 8-byte Reload
	movq	%rdx, -1216(%rbp)       # 8-byte Spill
	movq	%r12, %rdx
	movq	-1184(%rbp), %r13       # 8-byte Reload
	movq	%rcx, -1224(%rbp)       # 8-byte Spill
	movq	%r13, %rcx
	movq	%r8, -1232(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movl	-1204(%rbp), %r12d      # 4-byte Reload
	movq	%r9, -1240(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r15, -1248(%rbp)       # 8-byte Spill
	movq	%rbx, -1256(%rbp)       # 8-byte Spill
	movq	%r11, -1264(%rbp)       # 8-byte Spill
	movq	%r14, -1272(%rbp)       # 8-byte Spill
	movq	%r10, -1280(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1256(%rbp), %rdi       # 8-byte Reload
	movq	-1168(%rbp), %rsi       # 8-byte Reload
	movq	-1272(%rbp), %rdx       # 8-byte Reload
	movq	-1224(%rbp), %rcx       # 8-byte Reload
	movq	-1248(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1192(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1224(%rbp), %rdi       # 8-byte Reload
	movq	-1168(%rbp), %rsi       # 8-byte Reload
	movq	-240(%rbp), %rdx        # 8-byte Reload
	movq	-1224(%rbp), %rcx       # 8-byte Reload
	movq	-1264(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1192(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1240(%rbp), %rdi       # 8-byte Reload
	movq	-1168(%rbp), %rsi       # 8-byte Reload
	movq	-672(%rbp), %rdx        # 8-byte Reload
	movq	-1224(%rbp), %rcx       # 8-byte Reload
	movq	-1280(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1192(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1200(%rbp), %rdi       # 8-byte Reload
	movq	-1168(%rbp), %rsi       # 8-byte Reload
	movq	-688(%rbp), %rdx        # 8-byte Reload
	movq	-1224(%rbp), %rcx       # 8-byte Reload
	movq	-1232(%rbp), %r8        # 8-byte Reload
	movq	-1216(%rbp), %r9        # 8-byte Reload
	movq	-1192(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-240(%rbp), %rdi        # 8-byte Reload
	movq	-672(%rbp), %rsi        # 8-byte Reload
	movq	-688(%rbp), %rdx        # 8-byte Reload
	callq	kiss_fft
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str33, %rdx
	movabsq	$0, %rsi
	leaq	.L.str9, %rdi
	movabsq	$2, %r8
	leaq	free, %r9
	leaq	.L.str64, %r10
	movabsq	$47, %r11
	leaq	.L.str44, %rbx
	leaq	.L.str51, %r14
	leaq	.L.str63, %r15
	movabsq	$49, %r13
	movl	$1, %r12d
	movq	%rax, -1288(%rbp)       # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, -1296(%rbp)       # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, -1304(%rbp)       # 8-byte Spill
	movabsq	$44, %rax
	.loc	1 47 0                  # mma_test_fft.c:47:0
	subq	$16, %rsp
	movq	%rdi, -1312(%rbp)       # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, -1320(%rbp)       # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, -1328(%rbp)       # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, -1336(%rbp)       # 8-byte Spill
	movq	-1328(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1344(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1336(%rbp), %rax       # 8-byte Reload
	movq	%r8, -1352(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -1360(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r14, -1368(%rbp)       # 8-byte Spill
	movq	%r15, -1376(%rbp)       # 8-byte Spill
	movq	%r13, -1384(%rbp)       # 8-byte Spill
	movl	%r12d, -1388(%rbp)      # 4-byte Spill
	movq	%rbx, -1400(%rbp)       # 8-byte Spill
	movq	%r11, -1408(%rbp)       # 8-byte Spill
	movq	%r10, -1416(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-240(%rbp), %rdx        # 8-byte Reload
	movq	-1288(%rbp), %rcx       # 8-byte Reload
	movq	-1304(%rbp), %r8        # 8-byte Reload
	movq	-1320(%rbp), %r9        # 8-byte Reload
	movq	-1312(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-240(%rbp), %rax        # 8-byte Reload
	subq	$16, %rsp
	movq	-1296(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-1288(%rbp), %rcx       # 8-byte Reload
	movq	-1328(%rbp), %r8        # 8-byte Reload
	movq	-1320(%rbp), %r9        # 8-byte Reload
	movq	-1312(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -1424(%rbp)       # 8-byte Spill
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1408(%rbp), %rdi       # 8-byte Reload
	movq	-1400(%rbp), %rsi       # 8-byte Reload
	movq	-1368(%rbp), %rdx       # 8-byte Reload
	movq	-1376(%rbp), %rcx       # 8-byte Reload
	movq	-1384(%rbp), %r8        # 8-byte Reload
	movl	-1388(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1352(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1360(%rbp), %rdx       # 8-byte Reload
	movq	-1288(%rbp), %rcx       # 8-byte Reload
	movq	-1416(%rbp), %r8        # 8-byte Reload
	movq	-1320(%rbp), %r9        # 8-byte Reload
	movq	-1312(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1288(%rbp), %rdi       # 8-byte Reload
	movq	-1344(%rbp), %rsi       # 8-byte Reload
	movq	-1424(%rbp), %rdx       # 8-byte Reload
	movq	-1288(%rbp), %rcx       # 8-byte Reload
	movq	-1328(%rbp), %r8        # 8-byte Reload
	movq	-1320(%rbp), %r9        # 8-byte Reload
	movq	-1312(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1424(%rbp), %rdi       # 8-byte Reload
	callq	free
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str65, %rdx
	leaq	.L.str9, %rsi
	movabsq	$2, %rdi
	leaq	.L.str13, %r8
	movabsq	$3, %r9
	leaq	.L.str12, %r10
	movabsq	$48, %r11
	leaq	.L.str44, %rbx
	leaq	.L.str51, %r14
	leaq	.L.str66, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -1432(%rbp)       # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -1440(%rbp)       # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, -1448(%rbp)       # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, -1456(%rbp)       # 8-byte Spill
	movabsq	$46, %rax
.Ltmp51:
	#DEBUG_VALUE: i <- 0
	.loc	1 48 0                  # mma_test_fft.c:48:0
	subq	$16, %rsp
	movq	%rdi, -1464(%rbp)       # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, -1472(%rbp)       # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, -1480(%rbp)       # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, -1488(%rbp)       # 8-byte Spill
	movq	-1480(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1496(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1488(%rbp), %rax       # 8-byte Reload
	movq	%r8, -1504(%rbp)        # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, -1512(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r14, -1520(%rbp)       # 8-byte Spill
	movq	%r15, -1528(%rbp)       # 8-byte Spill
	movl	%r12d, -1532(%rbp)      # 4-byte Spill
	movq	%r13, -1544(%rbp)       # 8-byte Spill
	movq	%rbx, -1552(%rbp)       # 8-byte Spill
	movq	%r11, -1560(%rbp)       # 8-byte Spill
	movq	%r10, -1568(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1464(%rbp), %rdi       # 8-byte Reload
	movq	-1440(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	movq	-1456(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-172(%rbp), %r12d       # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-1496(%rbp), %rdi       # 8-byte Reload
	movq	-1440(%rbp), %rsi       # 8-byte Reload
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movq	-1448(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-172(%rbp), %r12d       # 4-byte Reload
	cmpl	$0, %r12d
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-1544(%rbp), %rdi       # 8-byte Reload
	movq	-1496(%rbp), %rsi       # 8-byte Reload
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movq	-1480(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -1569(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1560(%rbp), %rdi       # 8-byte Reload
	movq	-1552(%rbp), %rsi       # 8-byte Reload
	movq	-1520(%rbp), %rdx       # 8-byte Reload
	movq	-1528(%rbp), %rcx       # 8-byte Reload
	movq	-1464(%rbp), %r8        # 8-byte Reload
	movl	-1532(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1512(%rbp), %rdi       # 8-byte Reload
	movq	-1432(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movq	-1568(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1464(%rbp), %rdi       # 8-byte Reload
	movq	-1432(%rbp), %rsi       # 8-byte Reload
	movq	-1432(%rbp), %rdx       # 8-byte Reload
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movq	-1504(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1569(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1496(%rbp), %rdi       # 8-byte Reload
	movq	-1496(%rbp), %rsi       # 8-byte Reload
	movq	-1496(%rbp), %rcx       # 8-byte Reload
	movq	-1480(%rbp), %r8        # 8-byte Reload
	movq	-1432(%rbp), %r9        # 8-byte Reload
	movq	-1472(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1569(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-1432(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -1584(%rbp)       # 8-byte Spill
	jne	.LBB1_4
	jmp	.LBB1_5
.LBB1_4:                                # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	-1584(%rbp), %rax       # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str41, %rdx
	movabsq	$0, %rsi
	leaq	.L.str9, %rdi
	movabsq	$2, %r8
	leaq	.L.str12, %r9
	movabsq	$3, %r10
	leaq	.L.str13, %r11
	movabsq	$48, %rbx
	leaq	.L.str44, %r14
	leaq	.L.str68, %r15
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, -1592(%rbp)       # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, -1600(%rbp)       # 8-byte Spill
	leaq	.L.str40, %rax
	movq	%rax, -1608(%rbp)       # 8-byte Spill
	leaq	.L.str10, %rax
	movq	%rax, -1616(%rbp)       # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, -1624(%rbp)       # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, -1632(%rbp)       # 8-byte Spill
	leaq	.L.str15, %rax
	movq	%rax, -1640(%rbp)       # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, -1648(%rbp)       # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, -1656(%rbp)       # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, -1664(%rbp)       # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, -1672(%rbp)       # 8-byte Spill
	leaq	.L.str38, %rax
	movq	%rax, -1680(%rbp)       # 8-byte Spill
	leaq	.L.str67, %rax
	movq	%rax, -1688(%rbp)       # 8-byte Spill
	movabsq	$50, %rax
	movq	%rax, -1696(%rbp)       # 8-byte Spill
	leaq	.L.str34, %rax
	movq	%rax, -1704(%rbp)       # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, -1712(%rbp)       # 8-byte Spill
	leaq	.L.str20, %rax
	movq	%rax, -1720(%rbp)       # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, -1728(%rbp)       # 8-byte Spill
	leaq	.L.str37, %rax
	movq	%rax, -1736(%rbp)       # 8-byte Spill
	movabsq	$37, %rax
	movq	%rax, -1744(%rbp)       # 8-byte Spill
	leaq	.L.str36, %rax
	movq	%rax, -1752(%rbp)       # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, -1760(%rbp)       # 8-byte Spill
	leaq	.L.str62, %rax
	movq	%rax, -1768(%rbp)       # 8-byte Spill
	leaq	.L.str51, %rax
	movq	%rax, -1776(%rbp)       # 8-byte Spill
	movabsq	$-1, %rax
	.loc	1 50 0                  # mma_test_fft.c:50:0
.Ltmp52:
	subq	$16, %rsp
	movq	%rdi, -1784(%rbp)       # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -1792(%rbp)       # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, -1800(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	-1656(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1808(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	%r8, -1816(%rbp)        # 8-byte Spill
	movq	%rbx, %r8
	movq	%r9, -1824(%rbp)        # 8-byte Spill
	movl	%r12d, %r9d
	movl	$1, (%rsp)
	movq	%r13, -1832(%rbp)       # 8-byte Spill
	movq	%r14, -1840(%rbp)       # 8-byte Spill
	movq	%r15, -1848(%rbp)       # 8-byte Spill
	movl	%r12d, -1852(%rbp)      # 4-byte Spill
	movq	%rbx, -1864(%rbp)       # 8-byte Spill
	movq	%r11, -1872(%rbp)       # 8-byte Spill
	movq	%r10, -1880(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rdx       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1664(%rbp), %r8        # 8-byte Reload
	movq	-1808(%rbp), %r9        # 8-byte Reload
	movq	-1776(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1640(%rbp), %r8        # 8-byte Reload
	movq	-1808(%rbp), %r9        # 8-byte Reload
	movq	-1824(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1592(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1824(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1696(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1752(%rbp), %rcx       # 8-byte Reload
	movq	-1728(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1880(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rdx       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1664(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1592(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-688(%rbp), %rdx        # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1768(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1592(%rbp), %rax       # 8-byte Reload
	shlq	$3, %rax
	movq	-688(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-1808(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1888(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1752(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1696(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1736(%rbp), %rcx       # 8-byte Reload
	movq	-1760(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1752(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-688(%rbp), %rax        # 8-byte Reload
	movq	-1592(%rbp), %rcx       # 8-byte Reload
	vmovss	(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	vmovss	%xmm0, -1892(%rbp)      # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	-1808(%rbp), %rdx       # 8-byte Reload
	movq	-1736(%rbp), %rcx       # 8-byte Reload
	movq	-1792(%rbp), %r8        # 8-byte Reload
	movq	-1784(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	subq	$16, %rsp
	movq	-1696(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1680(%rbp), %rcx       # 8-byte Reload
	movq	-1744(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	vmovss	-1892(%rbp), %xmm0      # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rdx       # 8-byte Reload
	movq	-1736(%rbp), %rcx       # 8-byte Reload
	movq	-1792(%rbp), %r8        # 8-byte Reload
	movq	-1784(%rbp), %r9        # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	-1892(%rbp), %xmm0      # 4-byte Reload
	vcvttss2si	%xmm0, %r12d
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1680(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r12d, -1896(%rbp)      # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1696(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1688(%rbp), %rcx       # 8-byte Reload
	movq	-1728(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1592(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1720(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movq	-1592(%rbp), %rax       # 8-byte Reload
	shlq	$2, %rax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	%rcx, %rdx
	movq	-1808(%rbp), %rax       # 8-byte Reload
	movq	%rcx, -1904(%rbp)       # 8-byte Spill
	movq	%rax, %rcx
	movq	-1688(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1696(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1704(%rbp), %rcx       # 8-byte Reload
	movq	-1712(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1904(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1688(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	addq	$16, %rsp
	movl	-1896(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1680(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	-1592(%rbp), %rcx       # 8-byte Reload
	movl	-1896(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, (%rax,%rcx,4)
.Ltmp53:
	.loc	1 48 0                  # mma_test_fft.c:48:0
	subq	$16, %rsp
	movq	-1864(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1640(%rbp), %rcx       # 8-byte Reload
	movq	-1672(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rdx       # 8-byte Reload
	movq	-1792(%rbp), %rcx       # 8-byte Reload
	movq	-1664(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1592(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1656(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1592(%rbp), %rax       # 8-byte Reload
	addq	$1, %rax
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1640(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, -1912(%rbp)       # 8-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1864(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1608(%rbp), %rcx       # 8-byte Reload
	movq	-1648(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1632(%rbp), %rsi       # 8-byte Reload
	movq	-1912(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1640(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movq	-1912(%rbp), %rax       # 8-byte Reload
	movl	%eax, %r12d
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1608(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%r12d, -1916(%rbp)      # 4-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1864(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1800(%rbp), %rcx       # 8-byte Reload
	movq	-1624(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	movl	-172(%rbp), %r9d        # 4-byte Reload
	movl	%r9d, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1616(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1916(%rbp), %r12d      # 4-byte Reload
	movl	%r12d, %esi
	movl	%esi, %edx
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1600(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1608(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movl	-1916(%rbp), %r12d      # 4-byte Reload
	movl	-172(%rbp), %esi        # 4-byte Reload
	cmpl	%esi, %r12d
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	subq	$16, %rsp
	movq	-1832(%rbp), %rdi       # 8-byte Reload
	movq	-1808(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1800(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, -1917(%rbp)        # 1-byte Spill
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1864(%rbp), %rdi       # 8-byte Reload
	movq	-1840(%rbp), %rsi       # 8-byte Reload
	movq	-1824(%rbp), %rdx       # 8-byte Reload
	movq	-1848(%rbp), %rcx       # 8-byte Reload
	movq	-1816(%rbp), %r8        # 8-byte Reload
	movl	-1852(%rbp), %r9d       # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1880(%rbp), %rdi       # 8-byte Reload
	movq	-1792(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1872(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1816(%rbp), %rdi       # 8-byte Reload
	movq	-1792(%rbp), %rsi       # 8-byte Reload
	movq	-1792(%rbp), %rdx       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1824(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1917(%rbp), %al        # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %r12d
	movl	%r12d, %edx
	subq	$16, %rsp
	movq	-1808(%rbp), %rdi       # 8-byte Reload
	movq	-1808(%rbp), %rsi       # 8-byte Reload
	movq	-1808(%rbp), %rcx       # 8-byte Reload
	movq	-1800(%rbp), %r8        # 8-byte Reload
	movq	-1792(%rbp), %r9        # 8-byte Reload
	movq	-1784(%rbp), %r10       # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
	movb	-1917(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	movq	-1912(%rbp), %rcx       # 8-byte Reload
	movq	%rcx, -1584(%rbp)       # 8-byte Spill
	jne	.LBB1_5
	jmp	.LBB1_4
.Ltmp54:
.LBB1_5:                                # %._crit_edge
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str47, %r8
	leaq	.L.str9, %rdx
	movabsq	$52, %rdi
	leaq	.L.str44, %rsi
	leaq	.L.str13, %r9
	leaq	.L.str69, %r10
	movabsq	$2, %r11
	movl	$1, %ebx
	.loc	1 52 0                  # mma_test_fft.c:52:0
	movq	-664(%rbp), %r14        # 8-byte Reload
	movq	%r14, %rsp
	subq	$16, %rsp
	movq	%rdx, -1928(%rbp)       # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, -1936(%rbp)       # 8-byte Spill
	movq	%r10, %rcx
	movq	%r8, -1944(%rbp)        # 8-byte Spill
	movq	%r11, %r8
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%rax, -1952(%rbp)       # 8-byte Spill
	callq	trace_logger_log0
	addq	$16, %rsp
	subq	$16, %rsp
	movq	-1952(%rbp), %rdi       # 8-byte Reload
	movq	-1936(%rbp), %rsi       # 8-byte Reload
	movq	-1936(%rbp), %rdx       # 8-byte Reload
	movq	-1952(%rbp), %rcx       # 8-byte Reload
	movq	-1944(%rbp), %r8        # 8-byte Reload
	movq	-1936(%rbp), %r9        # 8-byte Reload
	movq	-1928(%rbp), %rax       # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	addq	$16, %rsp
.Ltmp55:
.LBB1_6:
	movabsq	$53, %rdi
	leaq	.L.str44, %rsi
	leaq	.L.str47, %rdx
	leaq	.L.str70, %rcx
	movabsq	$1, %r8
	movl	$1, %r9d
	.loc	1 53 0                  # mma_test_fft.c:53:0
	subq	$16, %rsp
	movl	$1, (%rsp)
	callq	trace_logger_log0
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp56:
.Ltmp57:
	.size	store_kernel, .Ltmp57-store_kernel
.Lfunc_end1:
	.file	5 "/workspace/gem5-aladdin/src/aladdin/integration-test/common/../../common/kiss_fft.h"
	.cfi_endproc

	.globl	main
	.align	16, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
.Lfunc_begin2:
	.loc	1 55 0                  # mma_test_fft.c:55:0
# BB#0:
	pushq	%rbp
.Ltmp65:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp66:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp67:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp68:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp69:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp70:
	.cfi_def_cfa_offset 56
	subq	$1384, %rsp             # imm = 0x568
.Ltmp71:
	.cfi_def_cfa_offset 1440
.Ltmp72:
	.cfi_offset %rbx, -56
.Ltmp73:
	.cfi_offset %r12, -48
.Ltmp74:
	.cfi_offset %r13, -40
.Ltmp75:
	.cfi_offset %r14, -32
.Ltmp76:
	.cfi_offset %r15, -24
.Ltmp77:
	.cfi_offset %rbp, -16
	leaq	.L.str80, %rdi
	movabsq	$21, %rsi
	.loc	1 57 0 prologue_end     # mma_test_fft.c:57:0
.Ltmp78:
	callq	trace_logger_write_labelmap
	movabsq	$1, %rsi
	movabsq	$64, %rdi
	movabsq	$40, %rdx
	movabsq	$0, %rax
	leaq	.L.str8, %r8
	leaq	.L.str9, %rcx
	movabsq	$2, %r9
	leaq	malloc, %r10
	leaq	.L.str72, %r11
	movabsq	$58, %rbx
	leaq	.L.str71, %r14
	leaq	.L.str6, %r15
	leaq	.L.str7, %r12
	movabsq	$49, %r13
	movl	$0, %ebp
	movq	%rsi, 1376(%rsp)        # 8-byte Spill
	movl	$1, %esi
.Ltmp79:
	#DEBUG_VALUE: main:num_vals <- 10
	.loc	1 58 0                  # mma_test_fft.c:58:0
	movq	%rdi, 1368(%rsp)        # 8-byte Spill
	movq	%rbx, %rdi
	movl	%esi, 1364(%rsp)        # 4-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1352(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	%rcx, 1344(%rsp)        # 8-byte Spill
	movq	%r12, %rcx
	movq	%r8, 1336(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	%r9, 1328(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r11, 1320(%rsp)        # 8-byte Spill
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	movq	%r10, 1304(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	1376(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movq	1312(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	1312(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$40, %ebp
	movl	%ebp, %edi
	callq	malloc
	movabsq	$1, %rcx
	movabsq	$64, %rdx
	movabsq	$40, %rsi
	movabsq	$0, %rdi
	leaq	.L.str8, %r8
	leaq	.L.str9, %r9
	movabsq	$2, %r10
	leaq	malloc, %r11
	leaq	.L.str72, %rbx
	movabsq	$59, %r14
	leaq	.L.str71, %r15
	leaq	.L.str6, %r12
	leaq	.L.str19, %r13
	movabsq	$49, %rbp
	movq	%rsi, 1296(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1292(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str17, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str7, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	movabsq	$58, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movq	1272(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1232(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1228(%rsp)        # 4-byte Spill
	movq	%rdx, %rsi
	movq	1280(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1216(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	movq	1256(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1200(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1232(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1192(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	1192(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, 1184(%rsp)        # 8-byte Spill
	movq	%r12, 1176(%rsp)        # 8-byte Spill
	movq	%r13, 1168(%rsp)        # 8-byte Spill
	movq	%rbp, 1160(%rsp)        # 8-byte Spill
	movq	%r14, 1152(%rsp)        # 8-byte Spill
	movq	%rbx, 1144(%rsp)        # 8-byte Spill
	movq	%r10, 1136(%rsp)        # 8-byte Spill
	movq	%r11, 1128(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1184(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1292(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1216(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	1192(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1280(%rsp), %rax        # 8-byte Reload
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1216(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	1192(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp80:
	#DEBUG_VALUE: main:store_vals <- [RSP+1120]
	.loc	1 59 0                  # mma_test_fft.c:59:0
	movq	1152(%rsp), %rdi        # 8-byte Reload
	movq	1184(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movl	1292(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1216(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	1192(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1216(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	1192(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$40, %esi
	movl	%esi, %edi
	callq	malloc
.Ltmp81:
	movabsq	$0, %rcx
	movabsq	$1, %rdx
	leaq	.L.str73, %r8
	leaq	.L.str9, %rdi
	movabsq	$60, %r9
	leaq	.L.str71, %r10
	leaq	.L.str6, %r11
	leaq	.L.str46, %rbx
	movabsq	$2, %r14
	movl	$0, %esi
	movl	$1, %ebp
	movabsq	$19134, %r15            # imm = 0x4ABE
	movabsq	$64, %r12
	leaq	.L.str21, %r13
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str19, %rax
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	movabsq	$59, %rax
	movq	%rax, 1096(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rdi, 1088(%rsp)        # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 1084(%rsp)        # 4-byte Spill
	movq	%r12, %rsi
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	movq	1112(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1064(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1064(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1056(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1104(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1048(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1056(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1040(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	1088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 1036(%rsp)        # 4-byte Spill
	movq	%r15, 1024(%rsp)        # 8-byte Spill
	movq	%r12, 1016(%rsp)        # 8-byte Spill
	movq	%r13, 1008(%rsp)        # 8-byte Spill
	movq	%r14, 1000(%rsp)        # 8-byte Spill
	movq	%r10, 992(%rsp)         # 8-byte Spill
	movq	%r11, 984(%rsp)         # 8-byte Spill
	movq	%rbx, 976(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	992(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	1072(%rsp), %r8         # 8-byte Reload
	movl	1084(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	1112(%rsp), %rdx        # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	1056(%rsp), %r9         # 8-byte Reload
	movq	1088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1112(%rsp), %rax        # 8-byte Reload
	movq	1024(%rsp), %rdi        # 8-byte Reload
	movq	1016(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	1056(%rsp), %r9         # 8-byte Reload
	movq	1088(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 968(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp82:
	#DEBUG_VALUE: main:store_loc <- [RSP+968]
	#DEBUG_VALUE: i <- 0
	.loc	1 60 0                  # mma_test_fft.c:60:0
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	992(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movl	1084(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1056(%rsp), %rdx        # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	1056(%rsp), %r9         # 8-byte Reload
	movq	1088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rax        # 8-byte Reload
	movq	%rax, 960(%rsp)         # 8-byte Spill
.Ltmp83:
.LBB2_1:                                # =>This Inner Loop Header: Depth=1
	movq	960(%rsp), %rax         # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str41, %rdx
	movabsq	$0, %rsi
	leaq	.L.str9, %rdi
	movabsq	$2, %r8
	leaq	.L.str73, %r9
	movabsq	$3, %r10
	leaq	.L.str77, %r11
	movabsq	$60, %rbx
	leaq	.L.str71, %r14
	leaq	.L.str76, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 952(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	leaq	.L.str15, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	movabsq	$10, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str8, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	leaq	.L.str14, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str26, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	movabsq	$62, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str75, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str21, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	leaq	.L.str25, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	leaq	.L.str23, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	movabsq	$61, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	leaq	.L.str74, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str17, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str6, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	1 61 0                  # mma_test_fft.c:61:0
.Ltmp84:
	movq	%rax, 760(%rsp)         # 8-byte Spill
	movq	768(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 752(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 744(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 736(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	904(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	760(%rsp), %rax         # 8-byte Reload
	movq	%r8, 720(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 712(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 704(%rsp)         # 8-byte Spill
	movl	%ebp, 700(%rsp)         # 4-byte Spill
	movl	%r12d, 696(%rsp)        # 4-byte Spill
	movq	%r13, 688(%rsp)         # 8-byte Spill
	movq	%r14, 680(%rsp)         # 8-byte Spill
	movq	%rbx, 672(%rsp)         # 8-byte Spill
	movq	%r10, 664(%rsp)         # 8-byte Spill
	movq	%r11, 656(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	712(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	776(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	776(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	952(%rsp), %rax         # 8-byte Reload
	shlq	$2, %rax
	movq	1120(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	728(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	824(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	952(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 644(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	644(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1120(%rsp), %rax        # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movl	644(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, (%rax,%rcx,4)
	.loc	1 62 0                  # mma_test_fft.c:62:0
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	952(%rsp), %rax         # 8-byte Reload
	shlq	$2, %rax
	movq	968(%rsp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	728(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 632(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rax         # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movl	$-1, (%rax,%rcx,4)
.Ltmp85:
	.loc	1 60 0                  # mma_test_fft.c:60:0
	movq	672(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	952(%rsp), %rax         # 8-byte Reload
	addq	$1, %rax
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 624(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	672(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	624(%rsp), %rax         # 8-byte Reload
	cmpq	$10, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 623(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	672(%rsp), %rdi         # 8-byte Reload
	movq	680(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	623(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	752(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	623(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	jne	.LBB2_2
	jmp	.LBB2_1
.Ltmp86:
.LBB2_2:
	movabsq	$3, %rdi
	movabsq	$32, %rsi
	movabsq	$10, %rdx
	movabsq	$0, %rax
	leaq	.L.str8, %r8
	leaq	.L.str9, %rcx
	movabsq	$2, %r9
	movabsq	$64, %r10
	movabsq	$1, %r11
	leaq	.L.str21, %rbx
	leaq	.L.str17, %r14
	movabsq	$4, %r15
	leaq	store_kernel, %r12
	leaq	.L.str44, %r13
	movabsq	$67, %rbp
	movq	%rax, 608(%rsp)         # 8-byte Spill
	leaq	.L.str71, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str77, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	.L.str78, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 576(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 572(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	1 67 0                  # mma_test_fft.c:67:0
	movq	%rdi, 560(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	600(%rsp), %rbp         # 8-byte Reload
	movl	%esi, 556(%rsp)         # 4-byte Spill
	movq	%rbp, %rsi
	movq	592(%rsp), %rbp         # 8-byte Reload
	movq	%rdx, 544(%rsp)         # 8-byte Spill
	movq	%rbp, %rdx
	movq	584(%rsp), %rbp         # 8-byte Reload
	movq	%rcx, 536(%rsp)         # 8-byte Spill
	movq	%rbp, %rcx
	movq	%r8, 528(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	572(%rsp), %ebp         # 4-byte Reload
	movq	%r9, 520(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r13, 512(%rsp)         # 8-byte Spill
	movq	%r12, 504(%rsp)         # 8-byte Spill
	movq	%r14, 496(%rsp)         # 8-byte Spill
	movq	%rbx, 488(%rsp)         # 8-byte Spill
	movq	%r15, 480(%rsp)         # 8-byte Spill
	movq	%r11, 472(%rsp)         # 8-byte Spill
	movq	%r10, 464(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	480(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rdx         # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	608(%rsp), %r9          # 8-byte Reload
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	608(%rsp), %r9          # 8-byte Reload
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	520(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	608(%rsp), %r9          # 8-byte Reload
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	608(%rsp), %r9          # 8-byte Reload
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$10, %edx
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	968(%rsp), %rsi         # 8-byte Reload
	callq	store_kernel
	movabsq	$3, %rdi
	movabsq	$32, %rsi
	movabsq	$10, %rdx
	movabsq	$0, %rax
	leaq	.L.str8, %r8
	leaq	.L.str9, %rcx
	movabsq	$2, %r9
	movabsq	$64, %r10
	movabsq	$1, %r11
	leaq	.L.str21, %rbx
	leaq	.L.str17, %r14
	movabsq	$4, %r15
	leaq	test_stores, %r12
	leaq	.L.str5, %r13
	movabsq	$81, %rbp
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str71, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str77, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	leaq	.L.str29, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 424(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 420(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	1 81 0                  # mma_test_fft.c:81:0
	movq	%rdi, 408(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	448(%rsp), %rbp         # 8-byte Reload
	movl	%esi, 404(%rsp)         # 4-byte Spill
	movq	%rbp, %rsi
	movq	440(%rsp), %rbp         # 8-byte Reload
	movq	%rdx, 392(%rsp)         # 8-byte Spill
	movq	%rbp, %rdx
	movq	432(%rsp), %rbp         # 8-byte Reload
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	movq	%rbp, %rcx
	movq	%r8, 376(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	420(%rsp), %ebp         # 4-byte Reload
	movq	%r9, 368(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r13, 360(%rsp)         # 8-byte Spill
	movq	%r12, 352(%rsp)         # 8-byte Spill
	movq	%r14, 344(%rsp)         # 8-byte Spill
	movq	%rbx, 336(%rsp)         # 8-byte Spill
	movq	%r15, 328(%rsp)         # 8-byte Spill
	movq	%r11, 320(%rsp)         # 8-byte Spill
	movq	%r10, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	360(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	344(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	368(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	408(%rsp), %rdi         # 8-byte Reload
	movq	424(%rsp), %rsi         # 8-byte Reload
	movq	392(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	movq	384(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$10, %edx
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	968(%rsp), %rsi         # 8-byte Reload
	callq	test_stores
	movabsq	$2, %rdi
	movabsq	$64, %rcx
	leaq	.L.str4, %rdx
	movabsq	$0, %rsi
	leaq	.L.str8, %r8
	leaq	.L.str9, %r9
	movabsq	$1, %r10
	leaq	.L.str30, %r11
	movabsq	$3, %rbx
	leaq	fprintf, %r14
	leaq	.L.str24, %r15
	movabsq	$86, %r12
	leaq	.L.str71, %r13
	leaq	.L.str77, %rbp
	movq	%rcx, 304(%rsp)         # 8-byte Spill
	leaq	.L.str31, %rcx
	movq	%rcx, 296(%rsp)         # 8-byte Spill
	movabsq	$49, %rcx
	movl	%eax, 292(%rsp)         # 4-byte Spill
	movl	$0, %eax
	movl	%eax, 288(%rsp)         # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	stdout, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	leaq	.L.str18, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	movabsq	$83, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	.L.str29, %rcx
	movl	%eax, 228(%rsp)         # 4-byte Spill
	movl	292(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movq	272(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 208(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	232(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 200(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	216(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 192(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	movq	%r10, %rcx
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%r8, 176(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	200(%rsp), %rax         # 8-byte Reload
	movq	%r9, 168(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	168(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%rbp, 160(%rsp)         # 8-byte Spill
	movq	%r15, 152(%rsp)         # 8-byte Spill
	movq	%r12, 144(%rsp)         # 8-byte Spill
	movq	%r13, 136(%rsp)         # 8-byte Spill
	movq	%r14, 128(%rsp)         # 8-byte Spill
	movq	%rbx, 120(%rsp)         # 8-byte Spill
	movq	%r10, 112(%rsp)         # 8-byte Spill
	movq	%r11, 104(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp87:
	#DEBUG_VALUE: main:num_failures <- 0
	.loc	1 83 0                  # mma_test_fft.c:83:0
	movq	248(%rsp), %rdi         # 8-byte Reload
	movq	136(%rsp), %rsi         # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	104(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movl	288(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	200(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	stdout, %rax
.Ltmp88:
	.loc	1 86 0                  # mma_test_fft.c:86:0
	movq	272(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	200(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 96(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	144(%rsp), %rdi         # 8-byte Reload
	movq	136(%rsp), %rsi         # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	296(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movl	288(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	200(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	200(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	304(%rsp), %rsi         # 8-byte Reload
	movq	192(%rsp), %rdx         # 8-byte Reload
	movq	200(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	200(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	$.L.str4, %esi
                                        # kill: RSI<def> ESI<kill>
	xorl	%edi, %edi
	movb	%dil, %al
	movq	96(%rsp), %rdi          # 8-byte Reload
	callq	fprintf
	movl	$0, %esi
	movabsq	$1, %rcx
	movabsq	$32, %rdx
	movabsq	$0, %rdi
	leaq	.L.str8, %r8
	leaq	.L.str9, %r9
	movabsq	$88, %r10
	leaq	.L.str71, %r11
	leaq	.L.str77, %rbx
	leaq	.L.str79, %r14
	movl	$1, %ebp
	movabsq	$19134, %r15            # imm = 0x4ABE
	leaq	.L.str31, %r12
	.loc	1 88 0                  # mma_test_fft.c:88:0
	movl	%eax, %eax
	movl	%eax, %r13d
	movq	%rdi, 88(%rsp)          # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 84(%rsp)          # 4-byte Spill
	movq	%rdx, %rsi
	movq	%rdx, 72(%rsp)          # 8-byte Spill
	movq	%r13, %rdx
	movq	%rcx, 64(%rsp)          # 8-byte Spill
	movq	%r8, 56(%rsp)           # 8-byte Spill
	movq	%r12, %r8
	movq	88(%rsp), %r15          # 8-byte Reload
	movq	%r9, 48(%rsp)           # 8-byte Spill
	movq	%r15, %r9
	movq	48(%rsp), %r12          # 8-byte Reload
	movq	%r12, (%rsp)
	movq	%r10, 40(%rsp)          # 8-byte Spill
	movl	%ebp, 36(%rsp)          # 4-byte Spill
	movq	%r11, 24(%rsp)          # 8-byte Spill
	movq	%rbx, 16(%rsp)          # 8-byte Spill
	movq	%r14, 8(%rsp)           # 8-byte Spill
	callq	trace_logger_log_int
	movq	40(%rsp), %rdi          # 8-byte Reload
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	16(%rsp), %rdx          # 8-byte Reload
	movq	8(%rsp), %rcx           # 8-byte Reload
	movq	64(%rsp), %r8           # 8-byte Reload
	movl	84(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	72(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	48(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	84(%rsp), %eax          # 4-byte Reload
	addq	$1384, %rsp             # imm = 0x568
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp89:
.Ltmp90:
	.size	main, .Ltmp90-main
.Lfunc_end2:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI3_0:
	.quad	-4604611780675359464    # double -6.2831853071795862
.LCPI3_1:
	.quad	-4616189618054758400    # double -1
	.text
	.globl	kiss_fft_alloc
	.align	16, 0x90
	.type	kiss_fft_alloc,@function
kiss_fft_alloc:                         # @kiss_fft_alloc
	.cfi_startproc
.Lfunc_begin3:
	.loc	2 340 0                 # kiss_fft.c:340:0
# BB#0:
	pushq	%rbp
.Ltmp98:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp99:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp100:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp101:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp102:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp103:
	.cfi_def_cfa_offset 56
	subq	$3208, %rsp             # imm = 0xC88
.Ltmp104:
	.cfi_def_cfa_offset 3264
.Ltmp105:
	.cfi_offset %rbx, -56
.Ltmp106:
	.cfi_offset %r12, -48
.Ltmp107:
	.cfi_offset %r13, -40
.Ltmp108:
	.cfi_offset %r14, -32
.Ltmp109:
	.cfi_offset %r15, -24
.Ltmp110:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str990, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$2, %r11
	leaq	.L.str1394, %rbx
	movabsq	$3, %r14
	leaq	.L.str1293, %r15
	movabsq	$345, %r12              # imm = 0x159
	leaq	.L.str81, %r13
	leaq	.L.str182, %rbp
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	leaq	.L.str1192, %rax
	movl	%esi, 3196(%rsp)        # 4-byte Spill
	movl	$0, %esi
	movl	%esi, 3192(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3176(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	leaq	.L.str1091, %rax
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	movabsq	$272, %rax              # imm = 0x110
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	movabsq	$342, %rax              # imm = 0x156
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 3104(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 3096(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3088(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3080(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 3072(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3064(%rsp)        # 8-byte Spill
	leaq	.L.str586, %rax
	movq	%rax, 3056(%rsp)        # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 3048(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3040(%rsp)        # 8-byte Spill
	leaq	.L.str20101, %rax
	movq	%rax, 3032(%rsp)        # 8-byte Spill
	leaq	.L.str42123, %rax
	.loc	2 339 0 prologue_end    # kiss_fft.c:339:0
.Ltmp111:
	movl	%esi, 3028(%rsp)        # 4-byte Spill
	movl	%edi, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 3016(%rsp)        # 8-byte Spill
	movq	3040(%rsp), %rax        # 8-byte Reload
	movl	%edi, 3012(%rsp)        # 4-byte Spill
	movq	%rax, %rdi
	movq	3080(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3000(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3000(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2992(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3200(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2984(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2976(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2968(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r12, 2960(%rsp)        # 8-byte Spill
	movq	%rbp, 2952(%rsp)        # 8-byte Spill
	movq	%r13, 2944(%rsp)        # 8-byte Spill
	movq	%r15, 2936(%rsp)        # 8-byte Spill
	movq	%r14, 2928(%rsp)        # 8-byte Spill
	movq	%rbx, 2920(%rsp)        # 8-byte Spill
	movq	%r10, 2912(%rsp)        # 8-byte Spill
	movq	%r11, 2904(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movl	3196(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3040(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kiss_fft_alloc:nfft <- [RSP+3012]
	#DEBUG_VALUE: kiss_fft_alloc:inverse_fft <- [RSP+3196]
	#DEBUG_VALUE: kiss_fft_alloc:mem <- [RSP+2992]
	#DEBUG_VALUE: kiss_fft_alloc:lenmem <- [RSP+2984]
	.loc	2 342 0                 # kiss_fft.c:342:0
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3072(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3048(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3056(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %esi        # 4-byte Reload
	addl	$4294967295, %esi       # imm = 0xFFFFFFFF
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rax        # 8-byte Reload
	movl	%esi, 2900(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2900(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2900(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2888(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3128(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2928(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2888(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2888(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3112(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3136(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	3120(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2880(%rsp), %rax        # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2872(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp112:
	#DEBUG_VALUE: kiss_fft_alloc:memneeded <- [RSP+2872]
	.loc	2 345 0                 # kiss_fft.c:345:0
	movq	2960(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	3144(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	2968(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3168(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2984(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	3176(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2871(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2960(%rsp), %rdi        # 8-byte Reload
	movq	2944(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3184(%rsp), %rcx        # 8-byte Reload
	movq	2904(%rsp), %r8         # 8-byte Reload
	movl	3192(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2928(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2904(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2968(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2920(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2871(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	3200(%rsp), %rdi        # 8-byte Reload
	movq	3200(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2968(%rsp), %r9         # 8-byte Reload
	movq	2912(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2871(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_1
	jmp	.LBB3_2
.Ltmp113:
.LBB3_1:
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str889, %r8
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	malloc, %r9
	leaq	.L.str1596, %r10
	movabsq	$346, %r11              # imm = 0x15A
	leaq	.L.str81, %rbx
	leaq	.L.str1293, %r14
	leaq	.L.str1495, %r15
	movabsq	$49, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	.loc	2 346 0                 # kiss_fft.c:346:0
.Ltmp114:
	movq	%rdi, 2856(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2848(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2840(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 2832(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	%r8, 2824(%rsp)         # 8-byte Spill
	movq	%r12, %r8
	movq	%r9, 2816(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 2808(%rsp)        # 8-byte Spill
	movq	%r10, 2800(%rsp)        # 8-byte Spill
	movl	%r13d, 2796(%rsp)       # 4-byte Spill
	callq	trace_logger_log0
	movq	2856(%rsp), %rdi        # 8-byte Reload
	movq	2832(%rsp), %rsi        # 8-byte Reload
	movq	2816(%rsp), %rdx        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movq	2840(%rsp), %r9         # 8-byte Reload
	movq	2848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2808(%rsp), %rdi        # 8-byte Reload
	movq	2832(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2840(%rsp), %r9         # 8-byte Reload
	movq	2848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2872(%rsp), %rdi        # 8-byte Reload
	callq	malloc
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str1899, %r8
	leaq	.L.str485, %rsi
	movabsq	$347, %rdi              # imm = 0x15B
	leaq	.L.str81, %r9
	leaq	.L.str1293, %r10
	leaq	.L.str1798, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r13d
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str1697, %r12
	movq	%rax, 2784(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 2776(%rsp)        # 8-byte Spill
	movabsq	$346, %rax              # imm = 0x15A
	movq	%rax, 2768(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rdi, 2760(%rsp)        # 8-byte Spill
	movq	%r14, %rdi
	movq	%rsi, 2752(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	movq	2784(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2736(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 2728(%rsp)        # 8-byte Spill
	movq	2776(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2720(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	2736(%rsp), %rax        # 8-byte Reload
	movq	%r9, 2712(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%r13d, 2708(%rsp)       # 4-byte Spill
	movq	%r14, 2696(%rsp)        # 8-byte Spill
	movl	%ebp, 2692(%rsp)        # 4-byte Spill
	movq	%r15, 2680(%rsp)        # 8-byte Spill
	movq	%r12, 2672(%rsp)        # 8-byte Spill
	movq	%rbx, 2664(%rsp)        # 8-byte Spill
	movq	%r10, 2656(%rsp)        # 8-byte Spill
	movq	%r11, 2648(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2672(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2680(%rsp), %rsi        # 8-byte Reload
	movq	2784(%rsp), %rdx        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2784(%rsp), %rax        # 8-byte Reload
	movq	2696(%rsp), %rdi        # 8-byte Reload
	movq	2680(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp115:
	#DEBUG_VALUE: kiss_fft_alloc:st <- [RSP+2640]
	.loc	2 347 0                 # kiss_fft.c:347:0
	movq	2760(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2648(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movl	2692(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2736(%rsp), %rsi        # 8-byte Reload
	movq	2736(%rsp), %rdx        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2736(%rsp), %r9         # 8-byte Reload
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2640(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	jmp	.LBB3_6
.Ltmp116:
.LBB3_2:
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str19100, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str23104, %r8
	movabsq	$3, %r9
	leaq	.L.str22103, %r10
	movabsq	$348, %r11              # imm = 0x15C
	leaq	.L.str81, %rbx
	leaq	.L.str1394, %r14
	leaq	.L.str21102, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	leaq	.L.str20101, %rax
	movq	%rax, 2608(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	.loc	2 348 0                 # kiss_fft.c:348:0
.Ltmp117:
	movq	%rdi, 2592(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2584(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2576(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 2568(%rsp)        # 8-byte Spill
	movq	2576(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2560(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2568(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2552(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2544(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2536(%rsp)        # 8-byte Spill
	movl	%ebp, 2532(%rsp)        # 4-byte Spill
	movl	%r12d, 2528(%rsp)       # 4-byte Spill
	movq	%r13, 2520(%rsp)        # 8-byte Spill
	movq	%r14, 2512(%rsp)        # 8-byte Spill
	movq	%rbx, 2504(%rsp)        # 8-byte Spill
	movq	%r10, 2496(%rsp)        # 8-byte Spill
	movq	%r11, 2488(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2992(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2560(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2487(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2488(%rsp), %rdi        # 8-byte Reload
	movq	2504(%rsp), %rsi        # 8-byte Reload
	movq	2512(%rsp), %rdx        # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2532(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2544(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2487(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2560(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2584(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2487(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2472(%rsp)        # 8-byte Spill
	jne	.LBB3_5
# BB#3:
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str25106, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str27108, %r8
	movabsq	$3, %r9
	leaq	.L.str22103, %r10
	movabsq	$348, %r11              # imm = 0x15C
	leaq	.L.str81, %rbx
	leaq	.L.str23104, %r14
	leaq	.L.str26107, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	leaq	.L.str1091, %rax
	movq	%rax, 2424(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rdi, 2416(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2408(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2400(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	movq	2448(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2384(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2392(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2376(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2368(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2360(%rsp)        # 8-byte Spill
	movl	%ebp, 2356(%rsp)        # 4-byte Spill
	movl	%r12d, 2352(%rsp)       # 4-byte Spill
	movq	%r13, 2344(%rsp)        # 8-byte Spill
	movq	%r14, 2336(%rsp)        # 8-byte Spill
	movq	%rbx, 2328(%rsp)        # 8-byte Spill
	movq	%r10, 2320(%rsp)        # 8-byte Spill
	movq	%r11, 2312(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2424(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2984(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2344(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2304(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2448(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2312(%rsp), %rdi        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movq	2400(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movl	2356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2416(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2440(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2456(%rsp), %rsi        # 8-byte Reload
	movq	2304(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2448(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2304(%rsp), %rax        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	cmpq	%rcx, %rax
	setb	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2344(%rsp), %rdi        # 8-byte Reload
	movq	2384(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2303(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2312(%rsp), %rdi        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movl	2356(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2368(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2464(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2416(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2464(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2303(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2384(%rsp), %rdi        # 8-byte Reload
	movq	2384(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2464(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2303(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2472(%rsp)        # 8-byte Spill
	jne	.LBB3_5
# BB#4:
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str22103, %r8
	leaq	.L.str485, %rdx
	movabsq	$349, %rsi              # imm = 0x15D
	leaq	.L.str81, %rdi
	leaq	.L.str27108, %r9
	leaq	.L.str29110, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str20101, %r12
	leaq	.L.str28109, %r13
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	.loc	2 349 0                 # kiss_fft.c:349:0
	movq	%rdi, 2280(%rsp)        # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	movq	2280(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2264(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 2256(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 2248(%rsp)        # 8-byte Spill
	movq	%r13, %rcx
	movq	2272(%rsp), %r13        # 8-byte Reload
	movq	%r8, 2240(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	%r9, 2232(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 2228(%rsp)        # 4-byte Spill
	movq	%r15, 2216(%rsp)        # 8-byte Spill
	movq	%r12, 2208(%rsp)        # 8-byte Spill
	movq	%r14, 2200(%rsp)        # 8-byte Spill
	movl	%ebx, 2196(%rsp)        # 4-byte Spill
	movq	%r10, 2184(%rsp)        # 8-byte Spill
	movq	%r11, 2176(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2992(%rsp), %rax        # 8-byte Reload
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp118:
	#DEBUG_VALUE: kiss_fft_alloc:st <- [RSP+2168]
	movq	2264(%rsp), %rdi        # 8-byte Reload
	movq	2280(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2196(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2248(%rsp), %rsi        # 8-byte Reload
	movq	2248(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	2248(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2168(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2472(%rsp)        # 8-byte Spill
.Ltmp119:
.LBB3_5:
	movq	2472(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str1899, %r8
	leaq	.L.str485, %rsi
	movabsq	$-1, %rdi
	leaq	.L.str81, %r9
	leaq	.L.str22103, %r10
	leaq	.L.str32113, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$64, %r15
	leaq	.L.str889, %r12
	leaq	.L.str1091, %r13
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	movabsq	$350, %rax              # imm = 0x15E
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str31112, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str30111, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str27108, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str20101, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	leaq	.L.str23104, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	leaq	.L.str1394, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 350 0                 # kiss_fft.c:350:0
	movq	%rdi, 2064(%rsp)        # 8-byte Spill
	movq	%rsi, 2056(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 2048(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2032(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2040(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2024(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2016(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%r14d, 2012(%rsp)       # 4-byte Spill
	movq	%r15, 2000(%rsp)        # 8-byte Spill
	movl	%ebp, 1996(%rsp)        # 4-byte Spill
	movq	%r12, 1984(%rsp)        # 8-byte Spill
	movq	%r13, 1976(%rsp)        # 8-byte Spill
	movq	%rbx, 1968(%rsp)        # 8-byte Spill
	movq	%r10, 1960(%rsp)        # 8-byte Spill
	movq	%r11, 1952(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2072(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	2032(%rsp), %r9         # 8-byte Reload
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2160(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2152(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2136(%rsp), %r8         # 8-byte Reload
	movl	1996(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2000(%rsp), %rsi        # 8-byte Reload
	movq	2872(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	1984(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2984(%rsp), %rax        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	movq	2064(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	1960(%rsp), %rdx        # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	1968(%rsp), %r8         # 8-byte Reload
	movl	1996(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2032(%rsp), %rdi        # 8-byte Reload
	movq	2048(%rsp), %rsi        # 8-byte Reload
	movq	2048(%rsp), %rdx        # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	2024(%rsp), %r8         # 8-byte Reload
	movq	2048(%rsp), %r9         # 8-byte Reload
	movq	2056(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2160(%rsp), %rax        # 8-byte Reload
	movq	%rax, 2632(%rsp)        # 8-byte Spill
.Ltmp120:
.LBB3_6:
	movq	2632(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str34115, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str37118, %r9
	movabsq	$3, %r10
	leaq	.L.str36117, %r11
	movabsq	$352, %rbx              # imm = 0x160
	leaq	.L.str81, %r14
	leaq	.L.str1899, %r15
	leaq	.L.str35116, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str33114, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str1293, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	leaq	.L.str30111, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	leaq	.L.str22103, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 352 0                 # kiss_fft.c:352:0
.Ltmp121:
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	movq	1864(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1848(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1840(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1832(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1920(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1824(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1856(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1816(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1808(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1800(%rsp)        # 8-byte Spill
	movq	%r12, 1792(%rsp)        # 8-byte Spill
	movl	%ebp, 1788(%rsp)        # 4-byte Spill
	movl	%r13d, 1784(%rsp)       # 4-byte Spill
	movq	%r14, 1776(%rsp)        # 8-byte Spill
	movq	%rbx, 1768(%rsp)        # 8-byte Spill
	movq	%r10, 1760(%rsp)        # 8-byte Spill
	movq	%r11, 1752(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1880(%rsp), %r8         # 8-byte Reload
	movq	1824(%rsp), %r9         # 8-byte Reload
	movq	1872(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1888(%rsp), %r8         # 8-byte Reload
	movq	1824(%rsp), %r9         # 8-byte Reload
	movq	1896(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1896(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1768(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1800(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1904(%rsp), %r8         # 8-byte Reload
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1912(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1928(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1751(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1768(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1800(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movl	1788(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1752(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1816(%rsp), %rdi        # 8-byte Reload
	movq	1840(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1751(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %r8         # 8-byte Reload
	movq	1840(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1751(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_13
# BB#7:
	movabsq	$1, %rax
	leaq	.L.str43124, %rcx
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str46127, %r8
	movabsq	$3, %r9
	leaq	.L.str45126, %r10
	movabsq	$357, %r11              # imm = 0x165
	leaq	.L.str81, %rbx
	leaq	.L.str37118, %r14
	leaq	.L.str44125, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str586, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str42123, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	movabsq	$355, %rax              # imm = 0x163
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str41122, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str33114, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	movabsq	$354, %rax              # imm = 0x162
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str39120, %rax
	.loc	2 354 0                 # kiss_fft.c:354:0
.Ltmp122:
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	movq	1624(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1608(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1600(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 1592(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	1632(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1584(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1576(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1560(%rsp)        # 8-byte Spill
	movl	%ebp, 1556(%rsp)        # 4-byte Spill
	movl	%r12d, 1552(%rsp)       # 4-byte Spill
	movq	%r13, 1544(%rsp)        # 8-byte Spill
	movq	%r14, 1536(%rsp)        # 8-byte Spill
	movq	%rbx, 1528(%rsp)        # 8-byte Spill
	movq	%r10, 1520(%rsp)        # 8-byte Spill
	movq	%r11, 1512(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1944(%rsp), %rax        # 8-byte Reload
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, (%rax)
	.loc	2 355 0                 # kiss_fft.c:355:0
	movq	1672(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1672(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1688(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3196(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1944(%rsp), %rax        # 8-byte Reload
	movl	3196(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 4(%rax)
.Ltmp123:
	#DEBUG_VALUE: i <- 0
	.loc	2 357 0                 # kiss_fft.c:357:0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3012(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r12d
	movl	%r12d, %edx
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	1736(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1503(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	1608(%rsp), %r8         # 8-byte Reload
	movl	1556(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1568(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1576(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1503(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1736(%rsp), %rsi        # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1503(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB3_8
	jmp	.LBB3_12
.LBB3_8:                                # %.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str49130, %r8
	leaq	.L.str485, %rdx
	movabsq	$357, %rdi              # imm = 0x165
	leaq	.L.str81, %rsi
	leaq	.L.str45126, %r9
	leaq	.L.str48129, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str47128, %r12
	.loc	2 359 0                 # kiss_fft.c:359:0
.Ltmp124:
	movq	%rsp, %r13
	movl	$1, (%r13)
	movl	$.L.str81, %r13d
                                        # kill: R13<def> R13D<kill>
	movq	%rsi, 1488(%rsp)        # 8-byte Spill
	movl	$.L.str45126, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1480(%rsp)        # 8-byte Spill
	movl	$.L.str47128, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1472(%rsp)        # 8-byte Spill
	movl	$359, %esi              # imm = 0x167
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1464(%rsp)        # 8-byte Spill
	movl	$39, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1456(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1440(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1436(%rsp)        # 4-byte Spill
	movq	%r13, %rsi
	movq	1480(%rsp), %r13        # 8-byte Reload
	movq	%rdx, 1424(%rsp)        # 8-byte Spill
	movq	%r13, %rdx
	movq	1472(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1416(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1456(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1408(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1436(%rsp), %r13d       # 4-byte Reload
	movq	%r9, 1400(%rsp)         # 8-byte Spill
	movl	%r13d, %r9d
	movq	%r14, 1392(%rsp)        # 8-byte Spill
	movl	%ebp, 1388(%rsp)        # 4-byte Spill
	movq	%r15, 1376(%rsp)        # 8-byte Spill
	movq	%r12, 1368(%rsp)        # 8-byte Spill
	movl	%ebx, 1364(%rsp)        # 4-byte Spill
	movq	%r10, 1352(%rsp)        # 8-byte Spill
	movq	%r11, 1344(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	3012(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str586, %ebx
	movl	%ebx, %r8d
	movl	$32, %ebx
	movl	%ebx, %esi
	movl	$1, %ebx
	movl	%ebx, %eax
	movl	1436(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %r9d
	movq	%rax, %rdi
	movq	%rax, %rcx
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	3012(%rsp), %ebx        # 4-byte Reload
	vcvtsi2sdl	%ebx, %xmm0, %xmm0
.Ltmp125:
	.loc	2 357 0                 # kiss_fft.c:357:0
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1376(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1336(%rsp)       # 8-byte Spill
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1440(%rsp), %rdi        # 8-byte Reload
	movq	1488(%rsp), %rsi        # 8-byte Reload
	movq	1400(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movl	1364(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1416(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1448(%rsp), %rax        # 8-byte Reload
	movq	%rax, 1328(%rsp)        # 8-byte Spill
.LBB3_9:                                # =>This Inner Loop Header: Depth=1
	movq	1328(%rsp), %rax        # 8-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str58139, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str60141, %r9
	movabsq	$3, %r10
	leaq	.L.str52133, %r11
	movabsq	$360, %rbx              # imm = 0x168
	leaq	.L.str81, %r14
	leaq	.L.str49130, %r15
	leaq	.L.str59140, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str57138, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str55136, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	movabsq	$359, %rax              # imm = 0x167
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$16, %rax
	vmovsd	.LCPI3_0, %xmm0
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str54135, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	.loc	2 358 0                 # kiss_fft.c:358:0
.Ltmp126:
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str81, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 1192(%rsp)        # 8-byte Spill
	movl	$.L.str49130, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1184(%rsp)        # 8-byte Spill
	movl	$.L.str50131, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1176(%rsp)        # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, 1160(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rdi, 1152(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1168(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1148(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1184(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1136(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1128(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1160(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1120(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1148(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1112(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	vmovsd	%xmm0, 1104(%rsp)       # 8-byte Spill
	movq	%r12, 1096(%rsp)        # 8-byte Spill
	movl	%ebp, 1092(%rsp)        # 4-byte Spill
	movl	%r13d, 1088(%rsp)       # 4-byte Spill
	movq	%r15, 1080(%rsp)        # 8-byte Spill
	movq	%r14, 1072(%rsp)        # 8-byte Spill
	movq	%r10, 1064(%rsp)        # 8-byte Spill
	movq	%r11, 1056(%rsp)        # 8-byte Spill
	movq	%rbx, 1048(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str52133, (%rcx)
	movl	$.L.str51132, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %edi
	movl	$64, %eax
	movl	%eax, %ecx
	movl	1148(%rsp), %eax        # 4-byte Reload
	movl	%eax, %edx
	movl	$1, %r9d
	movl	%r9d, %esi
	movq	%rsi, 1040(%rsp)        # 8-byte Spill
	movq	%rcx, %rsi
	movq	%rdx, 1032(%rsp)        # 8-byte Spill
	movq	1040(%rsp), %r10        # 8-byte Reload
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	movq	%r10, %rcx
	movq	%r10, %r9
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str45126, (%rcx)
	movl	$.L.str384, %eax
	movl	%eax, %r8d
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1032(%rsp), %rdx        # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	1040(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str45126, (%rcx)
	movl	$19134, %eax            # imm = 0x4ABE
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1016(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
.Ltmp127:
	#DEBUG_VALUE: pi <- 3.141593e+00
	.loc	2 359 0                 # kiss_fft.c:359:0
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str53134, %eax
	movl	%eax, %ecx
	movl	$359, %eax              # imm = 0x167
	movl	%eax, %edx
	movl	$33, %eax
	movl	%eax, %r8d
	movq	%rdx, %rdi
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1184(%rsp), %r9         # 8-byte Reload
	movq	%rdx, 1008(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	movl	1148(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1024(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	%rsp, %rsi
	movq	$.L.str485, (%rsi)
	movl	$32, %ebp
	movl	%ebp, %esi
	movq	1016(%rsp), %rdi        # 8-byte Reload
	movq	%rsi, 992(%rsp)         # 8-byte Spill
	movq	%rdx, 984(%rsp)         # 8-byte Spill
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	movl	%eax, 980(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str54135, %eax
	movl	%eax, %ecx
	movl	$39, %eax
	movl	%eax, %r8d
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1168(%rsp), %rsi        # 8-byte Reload
	movq	1184(%rsp), %rdx        # 8-byte Reload
	movl	1148(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	992(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	1032(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	980(%rsp), %eax         # 4-byte Reload
	vcvtsi2sdl	%eax, %xmm0, %xmm0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 968(%rsp)        # 8-byte Spill
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	1104(%rsp), %xmm0       # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1288(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	968(%rsp), %xmm0        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	968(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1104(%rsp), %xmm1       # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	vmovsd	%xmm2, 960(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm0       # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovsd	960(%rsp), %xmm0        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	960(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm1       # 8-byte Reload
	vdivsd	%xmm1, %xmm0, %xmm2
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1152(%rsp), %r9         # 8-byte Reload
	vmovsd	%xmm2, 952(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
.Ltmp128:
	#DEBUG_VALUE: phase <- [RSP+952]
	.loc	2 360 0                 # kiss_fft.c:360:0
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1272(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 948(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	948(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	948(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 947(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	1092(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	947(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1128(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	1192(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	947(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	vmovsd	%xmm0, 936(%rsp)        # 8-byte Spill
	jne	.LBB3_11
.Ltmp129:
# BB#10:                                #   in Loop: Header=BB3_9 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str52133, %r8
	leaq	.L.str485, %rdx
	movabsq	$361, %rsi              # imm = 0x169
	leaq	.L.str81, %rdi
	leaq	.L.str60141, %r9
	leaq	.L.str62143, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str61142, %r12
	movabsq	$-1, %r13
	vmovsd	.LCPI3_1, %xmm0
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	.loc	2 361 0                 # kiss_fft.c:361:0
	movq	%rdi, 904(%rsp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 896(%rsp)         # 8-byte Spill
	movq	904(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%r12, %rcx
	movq	896(%rsp), %rax         # 8-byte Reload
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 856(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r15, 848(%rsp)         # 8-byte Spill
	movq	%r14, 840(%rsp)         # 8-byte Spill
	movq	%r12, 832(%rsp)         # 8-byte Spill
	movq	%r13, 824(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 816(%rsp)        # 8-byte Spill
	movl	%ebp, 812(%rsp)         # 4-byte Spill
	movq	%r10, 800(%rsp)         # 8-byte Spill
	movq	%r11, 792(%rsp)         # 8-byte Spill
	movl	%ebx, 788(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	792(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovsd	816(%rsp), %xmm0        # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	952(%rsp), %xmm0        # 8-byte Reload
	vmovsd	816(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	840(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 776(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
.Ltmp130:
	#DEBUG_VALUE: phase <- [RSP+776]
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	904(%rsp), %rsi         # 8-byte Reload
	movq	856(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movl	788(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	872(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	872(%rsp), %r9          # 8-byte Reload
	movq	880(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovsd	776(%rsp), %xmm0        # 8-byte Reload
	vmovsd	%xmm0, 936(%rsp)        # 8-byte Spill
.Ltmp131:
.LBB3_11:                               #   in Loop: Header=BB3_9 Depth=1
	vmovsd	936(%rsp), %xmm0        # 8-byte Reload
	movabsq	$1, %rax
	leaq	.L.str75156, %rcx
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str49130, %r8
	movabsq	$3, %r9
	leaq	.L.str46127, %r10
	movabsq	$357, %r11              # imm = 0x165
	leaq	.L.str81, %rbx
	leaq	.L.str52133, %r14
	leaq	.L.str76157, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str74155, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	leaq	.L.str586, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	leaq	.L.str51132, %rax
	movq	%rax, 720(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	leaq	.L.str50131, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str72153, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	movabsq	$362, %rax              # imm = 0x16A
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str73154, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str33114, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str69150, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str63144, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	sin, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	leaq	.L.str70151, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	movabsq	$102, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str66147, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str67148, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str68149, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str64145, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	cos, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str65146, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	movabsq	$103, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str60141, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str61142, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 362 0                 # kiss_fft.c:362:0
.Ltmp132:
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movq	480(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 464(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 456(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 448(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 440(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	472(%rsp), %rax         # 8-byte Reload
	movq	%r8, 432(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 424(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	vmovsd	%xmm0, 416(%rsp)        # 8-byte Spill
	movq	%r15, 408(%rsp)         # 8-byte Spill
	movl	%ebp, 404(%rsp)         # 4-byte Spill
	movl	%r12d, 400(%rsp)        # 4-byte Spill
	movq	%r13, 392(%rsp)         # 8-byte Spill
	movq	%r14, 384(%rsp)         # 8-byte Spill
	movq	%rbx, 376(%rsp)         # 8-byte Spill
	movq	%r10, 368(%rsp)         # 8-byte Spill
	movq	%r11, 360(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	768(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	768(%rsp), %r9          # 8-byte Reload
	movq	504(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	504(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	callq	cos
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 352(%rsp)        # 8-byte Spill
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	352(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	352(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 348(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1320(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 336(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	348(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1944(%rsp), %rax        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	vmovss	348(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 264(%rax,%rcx,8)
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	568(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	callq	sin
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 328(%rsp)        # 8-byte Spill
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	600(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	vmovsd	328(%rsp), %xmm0        # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	328(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 324(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	632(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1320(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	456(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1944(%rsp), %rax        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 268(%rax,%rcx,8)
.Ltmp133:
	.loc	2 357 0                 # kiss_fft.c:357:0
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1320(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 304(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	304(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	304(%rsp), %rax         # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 300(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	440(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3012(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	300(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	300(%rsp), %ebp         # 4-byte Reload
	movl	3012(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	768(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 299(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	360(%rsp), %rdi         # 8-byte Reload
	movq	376(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	404(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	368(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	299(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	768(%rsp), %rsi         # 8-byte Reload
	movq	768(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	456(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	299(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	%rcx, 1328(%rsp)        # 8-byte Spill
	jne	.LBB3_12
	jmp	.LBB3_9
.Ltmp134:
.LBB3_12:                               # %._crit_edge
	movabsq	$2, %rax
	movabsq	$64, %rcx
	movabsq	$1, %rdx
	leaq	.L.str77158, %rsi
	movabsq	$0, %rdi
	leaq	.L.str485, %r8
	movabsq	$32, %r9
	leaq	.L.str586, %r10
	movabsq	$3, %r11
	leaq	kf_factor, %rbx
	leaq	.L.str79160, %r14
	movabsq	$365, %r15              # imm = 0x16D
	leaq	.L.str81, %r12
	leaq	.L.str46127, %r13
	leaq	.L.str78159, %rbp
	movq	%rax, 288(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 280(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 276(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 264(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str33114, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	.loc	2 365 0                 # kiss_fft.c:365:0
	movq	%rdi, 224(%rsp)         # 8-byte Spill
	movq	%r15, %rdi
	movl	%esi, 220(%rsp)         # 4-byte Spill
	movq	%r12, %rsi
	movq	%rdx, 208(%rsp)         # 8-byte Spill
	movq	%r13, %rdx
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movq	280(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	200(%rsp), %rax         # 8-byte Reload
	movq	%r8, 184(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	276(%rsp), %eax         # 4-byte Reload
	movq	%r9, 176(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 168(%rsp)         # 8-byte Spill
	movq	%r12, 160(%rsp)         # 8-byte Spill
	movq	%r13, 152(%rsp)         # 8-byte Spill
	movq	%rbp, 144(%rsp)         # 8-byte Spill
	movq	%r14, 136(%rsp)         # 8-byte Spill
	movq	%rbx, 128(%rsp)         # 8-byte Spill
	movq	%r10, 120(%rsp)         # 8-byte Spill
	movq	%r11, 112(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	232(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	256(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	168(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movl	276(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	176(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	192(%rsp), %rsi         # 8-byte Reload
	movq	104(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	3012(%rsp), %edi        # 4-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	callq	kf_factor
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str36117, %r8
	leaq	.L.str485, %rsi
	movabsq	$366, %rdi              # imm = 0x16E
	leaq	.L.str81, %r9
	leaq	.L.str46127, %r10
	leaq	.L.str80161, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	.loc	2 366 0                 # kiss_fft.c:366:0
	movq	%rsi, 96(%rsp)          # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 88(%rsp)          # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 80(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 72(%rsp)           # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 68(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	96(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp135:
.LBB3_13:
	movabsq	$1, %rax
	movabsq	$64, %rsi
	leaq	.L.str33114, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %rcx
	movabsq	$367, %rdi              # imm = 0x16F
	leaq	.L.str81, %rdx
	leaq	.L.str36117, %r10
	leaq	.L.str81162, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	.loc	2 367 0                 # kiss_fft.c:367:0
	movq	%rsi, 56(%rsp)          # 8-byte Spill
	movq	%rdx, %rsi
	movq	%r10, %rdx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 40(%rsp)           # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 32(%rsp)           # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movl	%ebp, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	56(%rsp), %rsi          # 8-byte Reload
	movq	1944(%rsp), %rdx        # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	48(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1944(%rsp), %rax        # 8-byte Reload
	addq	$3208, %rsp             # imm = 0xC88
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp136:
.Ltmp137:
	.size	kiss_fft_alloc, .Ltmp137-kiss_fft_alloc
.Lfunc_end3:
	.cfi_endproc

	.globl	kiss_fft_stride
	.align	16, 0x90
	.type	kiss_fft_stride,@function
kiss_fft_stride:                        # @kiss_fft_stride
	.cfi_startproc
.Lfunc_begin4:
	.loc	2 372 0                 # kiss_fft.c:372:0
# BB#0:
	pushq	%rbp
.Ltmp145:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp146:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp147:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp148:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp149:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp150:
	.cfi_def_cfa_offset 56
	subq	$1464, %rsp             # imm = 0x5B8
.Ltmp151:
	.cfi_def_cfa_offset 1520
.Ltmp152:
	.cfi_offset %rbx, -56
.Ltmp153:
	.cfi_offset %r12, -48
.Ltmp154:
	.cfi_offset %r13, -40
.Ltmp155:
	.cfi_offset %r14, -32
.Ltmp156:
	.cfi_offset %r15, -24
.Ltmp157:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str283, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$2, %r11
	leaq	.L.str116, %rbx
	movabsq	$3, %r14
	leaq	.L.str115, %r15
	movabsq	$373, %r12              # imm = 0x175
	leaq	.L.str112, %r13
	leaq	.L.str182, %rbp
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str85, %rax
	movl	%ecx, 1452(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 1448(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str114, %rax
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	leaq	.L.str113, %rax
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	leaq	.L.str121, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	.loc	2 371 0 prologue_end    # kiss_fft.c:371:0
.Ltmp158:
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	movq	1392(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1360(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1352(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	1360(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1344(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1456(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 1340(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	1368(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1328(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1320(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r12, 1312(%rsp)        # 8-byte Spill
	movq	%r13, 1304(%rsp)        # 8-byte Spill
	movq	%rbp, 1296(%rsp)        # 8-byte Spill
	movq	%r15, 1288(%rsp)        # 8-byte Spill
	movq	%r14, 1280(%rsp)        # 8-byte Spill
	movq	%rbx, 1272(%rsp)        # 8-byte Spill
	movq	%r10, 1264(%rsp)        # 8-byte Spill
	movq	%r11, 1256(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1424(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1424(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	1452(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	1392(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kiss_fft_stride:st <- [RSP+1360]
	#DEBUG_VALUE: kiss_fft_stride:fin <- [RSP+1352]
	#DEBUG_VALUE: kiss_fft_stride:fout <- [RSP+1344]
	#DEBUG_VALUE: kiss_fft_stride:in_stride <- [RSP+1452]
	.loc	2 373 0                 # kiss_fft.c:373:0
.Ltmp159:
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	1448(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1256(%rsp), %rdi        # 8-byte Reload
	movq	1424(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1456(%rsp), %rdi        # 8-byte Reload
	movq	1424(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rax        # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	cmpq	%rcx, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1432(%rsp), %rdi        # 8-byte Reload
	movq	1456(%rsp), %rsi        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1255(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movl	1448(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	1320(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1256(%rsp), %rdi        # 8-byte Reload
	movq	1320(%rsp), %rsi        # 8-byte Reload
	movq	1320(%rsp), %rdx        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1255(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1456(%rsp), %rdi        # 8-byte Reload
	movq	1456(%rsp), %rsi        # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	1320(%rsp), %r9         # 8-byte Reload
	movq	1264(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1255(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB4_1
	jmp	.LBB4_2
.Ltmp160:
.LBB4_1:
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str118, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	malloc, %r9
	leaq	.L.str1596, %r10
	movabsq	$376, %r11              # imm = 0x178
	leaq	.L.str112, %rbx
	leaq	.L.str115, %r14
	leaq	.L.str1495, %r15
	movabsq	$49, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	.loc	2 376 0                 # kiss_fft.c:376:0
.Ltmp161:
	movq	%rdi, 1144(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 1136(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 1128(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	movq	1168(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1112(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1120(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1104(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1096(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1088(%rsp)        # 8-byte Spill
	movq	%r12, 1080(%rsp)        # 8-byte Spill
	movl	%ebp, 1076(%rsp)        # 4-byte Spill
	movl	%r13d, 1072(%rsp)       # 4-byte Spill
	movq	%r14, 1064(%rsp)        # 8-byte Spill
	movq	%rbx, 1056(%rsp)        # 8-byte Spill
	movq	%r10, 1048(%rsp)        # 8-byte Spill
	movq	%r11, 1040(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movl	1076(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rax        # 8-byte Reload
	movl	(%rax), %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 1036(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movl	1076(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1036(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1192(%rsp), %rsi        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1036(%rsp), %ebp        # 4-byte Reload
	movslq	%ebp, %rax
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1076(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1216(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1024(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	1232(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1080(%rsp), %r8         # 8-byte Reload
	movl	1076(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1096(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1112(%rsp), %rsi        # 8-byte Reload
	movq	1016(%rsp), %rdx        # 8-byte Reload
	movq	1240(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1016(%rsp), %rdi        # 8-byte Reload
	callq	malloc
	movabsq	$6, %rdi
	movabsq	$64, %rcx
	movabsq	$1, %rdx
	leaq	.L.str117, %rsi
	movabsq	$0, %r8
	leaq	.L.str485, %r9
	movabsq	$5, %r10
	leaq	.L.str104, %r11
	movabsq	$4, %rbx
	movabsq	$32, %r14
	leaq	.L.str121, %r15
	movabsq	$3, %r12
	leaq	.L.str384, %r13
	movabsq	$2, %rbp
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str114, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$7, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	kf_work, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	movabsq	$377, %rax              # imm = 0x179
	movq	%rax, 960(%rsp)         # 8-byte Spill
	leaq	.L.str112, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str115, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	leaq	.L.str119, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 928(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 924(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$376, %rax              # imm = 0x178
	movq	%rax, 880(%rsp)         # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	movq	904(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 864(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 860(%rsp)         # 4-byte Spill
	movq	%rcx, %rsi
	movq	1008(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 848(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	848(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 840(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	888(%rsp), %rax         # 8-byte Reload
	movq	%r8, 832(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	832(%rsp), %rax         # 8-byte Reload
	movq	%r9, 824(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%rbp, 816(%rsp)         # 8-byte Spill
	movq	%r15, 808(%rsp)         # 8-byte Spill
	movq	%r12, 800(%rsp)         # 8-byte Spill
	movq	%r13, 792(%rsp)         # 8-byte Spill
	movq	%r14, 784(%rsp)         # 8-byte Spill
	movq	%rbx, 776(%rsp)         # 8-byte Spill
	movq	%r10, 768(%rsp)         # 8-byte Spill
	movq	%r11, 760(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	952(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movl	924(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	1008(%rsp), %rdx        # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1008(%rsp), %rax        # 8-byte Reload
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 752(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp162:
	#DEBUG_VALUE: tmpbuf <- [RSP+752]
	.loc	2 377 0                 # kiss_fft.c:377:0
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	952(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movl	924(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	832(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	784(%rsp), %rsi         # 8-byte Reload
	movq	816(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	832(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 744(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	952(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movl	924(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	976(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1452(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	784(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	840(%rsp), %rsi         # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	832(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	$1, %esi
	movl	%esi, %edx
	movq	752(%rsp), %rdi         # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movl	1452(%rsp), %ecx        # 4-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	callq	kf_work
.Ltmp163:
	movabsq	$3, %rax
	movabsq	$64, %rdx
	movabsq	$1, %rsi
	leaq	.L.str25106, %rdi
	movabsq	$0, %r8
	leaq	.L.str485, %r9
	movabsq	$2, %r10
	leaq	.L.str1495, %r11
	leaq	.L.str113, %rbx
	movabsq	$4, %r14
	leaq	memcpy, %r15
	leaq	.L.str122, %r12
	movabsq	$378, %r13              # imm = 0x17A
	leaq	.L.str112, %rbp
	leaq	.L.str115, %rcx
	movq	%rax, 736(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 720(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 716(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 704(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	movabsq	$44, %rax
	.loc	2 378 0                 # kiss_fft.c:378:0
	movq	%rdi, 616(%rsp)         # 8-byte Spill
	movq	%r13, %rdi
	movl	%esi, 612(%rsp)         # 4-byte Spill
	movq	%rbp, %rsi
	movq	%rdx, 600(%rsp)         # 8-byte Spill
	movq	%rcx, %rdx
	movq	%rax, 592(%rsp)         # 8-byte Spill
	movq	624(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%r8, 576(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	716(%rsp), %eax         # 4-byte Reload
	movq	%r9, 568(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r13, 560(%rsp)         # 8-byte Spill
	movq	%rbp, 552(%rsp)         # 8-byte Spill
	movq	%r12, 544(%rsp)         # 8-byte Spill
	movq	%r15, 536(%rsp)         # 8-byte Spill
	movq	%r14, 528(%rsp)         # 8-byte Spill
	movq	%r10, 520(%rsp)         # 8-byte Spill
	movq	%r11, 512(%rsp)         # 8-byte Spill
	movq	%rbx, 504(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 496(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	552(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movl	716(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	664(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 492(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	552(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	716(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	492(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	664(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	492(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 480(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	552(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	716(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	520(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	480(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 472(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	616(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	552(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movl	716(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	520(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	1008(%rsp), %rdx        # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movq	576(%rsp), %r9          # 8-byte Reload
	movq	568(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	callq	memcpy
	movabsq	$1, %rcx
	movabsq	$64, %rdx
	leaq	.L.str1495, %r8
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r9
	leaq	free, %r10
	leaq	.L.str124, %r11
	movabsq	$379, %rbx              # imm = 0x17B
	leaq	.L.str112, %r14
	leaq	.L.str115, %r15
	leaq	.L.str123, %r12
	movabsq	$49, %r13
	movl	$0, %ebp
	movq	%rsi, 464(%rsp)         # 8-byte Spill
	movl	$1, %esi
	movq	%rax, 456(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rax
	.loc	2 379 0                 # kiss_fft.c:379:0
	movq	%rax, 440(%rsp)         # 8-byte Spill
	movq	448(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 432(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 428(%rsp)         # 4-byte Spill
	movq	%rdx, %rsi
	movq	456(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 416(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 408(%rsp)         # 8-byte Spill
	movq	440(%rsp), %rax         # 8-byte Reload
	movq	%r8, 400(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	464(%rsp), %rax         # 8-byte Reload
	movq	%r9, 392(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, 384(%rsp)         # 8-byte Spill
	movq	%r12, 376(%rsp)         # 8-byte Spill
	movq	%r14, 368(%rsp)         # 8-byte Spill
	movq	%r13, 360(%rsp)         # 8-byte Spill
	movl	%ebp, 356(%rsp)         # 4-byte Spill
	movq	%rbx, 344(%rsp)         # 8-byte Spill
	movq	%r10, 336(%rsp)         # 8-byte Spill
	movq	%r11, 328(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	368(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	360(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	392(%rsp), %rdi         # 8-byte Reload
	movq	416(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	464(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	408(%rsp), %rdi         # 8-byte Reload
	movq	416(%rsp), %rsi         # 8-byte Reload
	movq	1008(%rsp), %rdx        # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	400(%rsp), %r8          # 8-byte Reload
	movq	464(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1008(%rsp), %rdi        # 8-byte Reload
	callq	free
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str1899, %r8
	leaq	.L.str485, %rdx
	movabsq	$380, %rdi              # imm = 0x17C
	leaq	.L.str112, %rsi
	leaq	.L.str115, %r9
	leaq	.L.str125, %r10
	movabsq	$2, %r11
	movl	$0, %ebp
	movl	$1, %r14d
	.loc	2 380 0                 # kiss_fft.c:380:0
	movq	%rdx, 320(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 312(%rsp)         # 8-byte Spill
	movq	%r10, %rcx
	movq	%r8, 304(%rsp)          # 8-byte Spill
	movq	%r11, %r8
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 296(%rsp)         # 8-byte Spill
	movl	%r14d, 292(%rsp)        # 4-byte Spill
	callq	trace_logger_log0
	movq	296(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	296(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	312(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB4_3
.Ltmp164:
.LBB4_2:
	movabsq	$6, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str117, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %r8
	movabsq	$5, %r9
	leaq	.L.str110, %r10
	movabsq	$4, %r11
	movabsq	$32, %rbx
	leaq	.L.str121, %r14
	movabsq	$3, %r15
	leaq	.L.str384, %r12
	movabsq	$2, %r13
	leaq	.L.str114, %rbp
	movq	%rax, 280(%rsp)         # 8-byte Spill
	leaq	.L.str113, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movabsq	$7, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	kf_work, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	movabsq	$381, %rax              # imm = 0x17D
	movq	%rax, 240(%rsp)         # 8-byte Spill
	leaq	.L.str112, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	leaq	.L.str116, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str126, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 208(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 204(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 184(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	.loc	2 381 0                 # kiss_fft.c:381:0
.Ltmp165:
	movq	%rax, 176(%rsp)         # 8-byte Spill
	movq	240(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 168(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	232(%rsp), %rax         # 8-byte Reload
	movl	%esi, 164(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	224(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 152(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	%r10, %rcx
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%r8, 136(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	204(%rsp), %eax         # 4-byte Reload
	movq	%r9, 128(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 120(%rsp)         # 8-byte Spill
	movq	%r15, 112(%rsp)         # 8-byte Spill
	movq	%r12, 104(%rsp)         # 8-byte Spill
	movq	%r13, 96(%rsp)          # 8-byte Spill
	movq	%r14, 88(%rsp)          # 8-byte Spill
	movq	%rbx, 80(%rsp)          # 8-byte Spill
	movq	%r10, 72(%rsp)          # 8-byte Spill
	movq	%r11, 64(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	144(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 56(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	240(%rsp), %rdi         # 8-byte Reload
	movq	232(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	216(%rsp), %rcx         # 8-byte Reload
	movq	192(%rsp), %r8          # 8-byte Reload
	movl	204(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	144(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	272(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	1352(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1452(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	80(%rsp), %rsi          # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	88(%rsp), %r8           # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	168(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	152(%rsp), %r8          # 8-byte Reload
	movq	208(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	$1, %eax
	movl	%eax, %edx
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movl	1452(%rsp), %ecx        # 4-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	callq	kf_work
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str1899, %r8
	leaq	.L.str485, %rdi
	movabsq	$-1, %r9
	leaq	.L.str112, %r10
	leaq	.L.str116, %r11
	leaq	.L.str127, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 48(%rsp)          # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 40(%rsp)          # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 32(%rsp)          # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 24(%rsp)           # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	40(%rsp), %rsi          # 8-byte Reload
	movq	40(%rsp), %rdx          # 8-byte Reload
	movq	32(%rsp), %rcx          # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movq	48(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp166:
.LBB4_3:
	movabsq	$383, %rdi              # imm = 0x17F
	leaq	.L.str112, %rsi
	leaq	.L.str1899, %rdx
	leaq	.L.str35116, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 383 0                 # kiss_fft.c:383:0
	movl	$1, (%rsp)
	movl	%eax, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$1464, %rsp             # imm = 0x5B8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp167:
.Ltmp168:
	.size	kiss_fft_stride, .Ltmp168-kiss_fft_stride
.Lfunc_end4:
	.cfi_endproc

	.globl	kiss_fft
	.align	16, 0x90
	.type	kiss_fft,@function
kiss_fft:                               # @kiss_fft
	.cfi_startproc
.Lfunc_begin5:
	.loc	2 386 0                 # kiss_fft.c:386:0
# BB#0:
	pushq	%rbp
.Ltmp176:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp177:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp178:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp179:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp180:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp181:
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
.Ltmp182:
	.cfi_def_cfa_offset 288
.Ltmp183:
	.cfi_offset %rbx, -56
.Ltmp184:
	.cfi_offset %r12, -48
.Ltmp185:
	.cfi_offset %r13, -40
.Ltmp186:
	.cfi_offset %r14, -32
.Ltmp187:
	.cfi_offset %r15, -24
.Ltmp188:
	.cfi_offset %rbp, -16
	movabsq	$4, %rax
	movabsq	$32, %rcx
	movabsq	$1, %r8
	movabsq	$0, %r9
	leaq	.L.str384, %r10
	leaq	.L.str485, %r11
	movabsq	$3, %rbx
	movabsq	$64, %r14
	leaq	.L.str113, %r15
	movabsq	$2, %r12
	leaq	.L.str114, %r13
	leaq	.L.str177, %rbp
	movq	%rax, 224(%rsp)         # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	kiss_fft_stride, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	leaq	.L.str112, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	movabsq	$387, %rax              # imm = 0x183
	movq	%rax, 192(%rsp)         # 8-byte Spill
	leaq	.L.str175, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	.L.str176, %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 160(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 156(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 144(%rsp)         # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	.loc	2 385 0 prologue_end    # kiss_fft.c:385:0
.Ltmp189:
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 132(%rsp)         # 4-byte Spill
	movq	%r14, %rsi
	movq	%rax, 120(%rsp)         # 8-byte Spill
	movq	136(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 112(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 104(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movq	%rbp, %r8
	movq	%r9, 88(%rsp)           # 8-byte Spill
	movq	%r11, (%rsp)
	movq	%r13, 80(%rsp)          # 8-byte Spill
	movq	%rbp, 72(%rsp)          # 8-byte Spill
	movq	%r12, 64(%rsp)          # 8-byte Spill
	movq	%r15, 56(%rsp)          # 8-byte Spill
	movq	%r14, 48(%rsp)          # 8-byte Spill
	movq	%rbx, 40(%rsp)          # 8-byte Spill
	movq	%r10, 32(%rsp)          # 8-byte Spill
	movq	%r11, 24(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	120(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kiss_fft:cfg <- [RSP+136]
	#DEBUG_VALUE: kiss_fft:fin <- [RSP+160]
	#DEBUG_VALUE: kiss_fft:fout <- [RSP+112]
	.loc	2 387 0                 # kiss_fft.c:387:0
	movq	192(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movl	156(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	160(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	40(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	96(%rsp), %rcx          # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	224(%rsp), %rdi         # 8-byte Reload
	movq	104(%rsp), %rsi         # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	32(%rsp), %r8           # 8-byte Reload
	movq	88(%rsp), %r9           # 8-byte Reload
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	$1, %ecx
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	160(%rsp), %rsi         # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	callq	kiss_fft_stride
.Ltmp190:
	movabsq	$388, %rdi              # imm = 0x184
	leaq	.L.str175, %rsi
	leaq	.L.str182, %rdx
	leaq	.L.str85, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %r10d
	.loc	2 388 0                 # kiss_fft.c:388:0
	movl	$1, (%rsp)
	movl	%r10d, 20(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	addq	$232, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp191:
.Ltmp192:
	.size	kiss_fft, .Ltmp192-kiss_fft
.Lfunc_end5:
	.cfi_endproc

	.globl	kiss_fft_cleanup
	.align	16, 0x90
	.type	kiss_fft_cleanup,@function
kiss_fft_cleanup:                       # @kiss_fft_cleanup
	.cfi_startproc
.Lfunc_begin6:
	.loc	2 392 0                 # kiss_fft.c:392:0
# BB#0:
	subq	$24, %rsp
.Ltmp194:
	.cfi_def_cfa_offset 32
	movabsq	$394, %rdi              # imm = 0x18A
	leaq	.L.str178, %rsi
	leaq	.L.str182, %rdx
	leaq	.L.str179, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 394 0 prologue_end    # kiss_fft.c:394:0
.Ltmp195:
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$24, %rsp
	ret
.Ltmp196:
.Ltmp197:
	.size	kiss_fft_cleanup, .Ltmp197-kiss_fft_cleanup
.Lfunc_end6:
	.cfi_endproc

	.globl	kiss_fft_next_fast_size
	.align	16, 0x90
	.type	kiss_fft_next_fast_size,@function
kiss_fft_next_fast_size:                # @kiss_fft_next_fast_size
	.cfi_startproc
.Lfunc_begin7:
	.loc	2 397 0                 # kiss_fft.c:397:0
# BB#0:
	pushq	%rbp
.Ltmp205:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp206:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp207:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp208:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp209:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp210:
	.cfi_def_cfa_offset 56
	subq	$1832, %rsp             # imm = 0x728
.Ltmp211:
	.cfi_def_cfa_offset 1888
.Ltmp212:
	.cfi_offset %rbx, -56
.Ltmp213:
	.cfi_offset %r12, -48
.Ltmp214:
	.cfi_offset %r13, -40
.Ltmp215:
	.cfi_offset %r14, -32
.Ltmp216:
	.cfi_offset %r15, -24
.Ltmp217:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str182163, %r8
	leaq	.L.str485, %rdx
	movabsq	$398, %rsi              # imm = 0x18E
	leaq	.L.str180, %r9
	leaq	.L.str182, %r10
	leaq	.L.str181, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
	movabsq	$24601, %r15            # imm = 0x6019
	movabsq	$32, %r12
	leaq	.L.str82, %r13
	.loc	2 396 0 prologue_end    # kiss_fft.c:396:0
.Ltmp218:
	movq	%rsi, 1824(%rsp)        # 8-byte Spill
	movl	%edi, %esi
                                        # kill: RSI<def> ESI<kill>
	movl	%edi, 1820(%rsp)        # 4-byte Spill
	movq	%r15, %rdi
	movq	%rsi, 1808(%rsp)        # 8-byte Spill
	movq	%r12, %rsi
	movq	1808(%rsp), %r15        # 8-byte Reload
	movq	%rdx, 1800(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	%rcx, 1792(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	%r8, 1784(%rsp)         # 8-byte Spill
	movq	%r13, %r8
	movq	1792(%rsp), %r12        # 8-byte Reload
	movq	%r9, 1776(%rsp)         # 8-byte Spill
	movq	%r12, %r9
	movq	1800(%rsp), %r13        # 8-byte Reload
	movq	%r13, (%rsp)
	movl	%r14d, 1772(%rsp)       # 4-byte Spill
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movl	%ebp, 1756(%rsp)        # 4-byte Spill
	movq	%r11, 1744(%rsp)        # 8-byte Spill
	movq	%rbx, 1736(%rsp)        # 8-byte Spill
	movq	%r10, 1728(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	#DEBUG_VALUE: kiss_fft_next_fast_size:n <- [RSP+1820]
	.loc	2 398 0                 # kiss_fft.c:398:0
	movq	1824(%rsp), %rdi        # 8-byte Reload
	movq	1776(%rsp), %rsi        # 8-byte Reload
	movq	1728(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1736(%rsp), %r8         # 8-byte Reload
	movl	1756(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1792(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movq	1792(%rsp), %r9         # 8-byte Reload
	movq	1800(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1820(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1724(%rsp)        # 4-byte Spill
.Ltmp219:
.LBB7_1:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_2 Depth 2
                                        #     Child Loop BB7_4 Depth 2
                                        #     Child Loop BB7_6 Depth 2
	movl	1724(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str788, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str184, %r9
	movabsq	$3, %r10
	leaq	.L.str94, %r11
	movabsq	$400, %rbx              # imm = 0x190
	leaq	.L.str180, %r14
	leaq	.L.str182163, %r15
	leaq	.L.str183, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1704(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rcx
	movq	%rcx, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 1680(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rcx
	movq	%rcx, 1664(%rsp)        # 8-byte Spill
	movabsq	$23, %rcx
	movq	%rcx, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str182, %rcx
	movq	%rcx, 1648(%rsp)        # 8-byte Spill
	leaq	.L.str82, %rcx
	movq	%rcx, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str34115, %rcx
	movq	%rcx, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str88, %rcx
	movq	%rcx, 1624(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1616(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 399 0                 # kiss_fft.c:399:0
.Ltmp220:
	movq	%rcx, 1608(%rsp)        # 8-byte Spill
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1600(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1592(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1584(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1576(%rsp)         # 8-byte Spill
	movq	1608(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1564(%rsp)        # 4-byte Spill
	movq	%r15, 1552(%rsp)        # 8-byte Spill
	movq	%r12, 1544(%rsp)        # 8-byte Spill
	movl	%ebp, 1540(%rsp)        # 4-byte Spill
	movl	%r13d, 1536(%rsp)       # 4-byte Spill
	movq	%r14, 1528(%rsp)        # 8-byte Spill
	movq	%rbx, 1520(%rsp)        # 8-byte Spill
	movq	%r10, 1512(%rsp)        # 8-byte Spill
	movq	%r11, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1624(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1820(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1712(%rsp), %r9         # 8-byte Reload
	movq	1648(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1648(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp221:
	#DEBUG_VALUE: m <- [RSP+1564]
	.loc	2 400 0                 # kiss_fft.c:400:0
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	andl	$1, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1500(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1500(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1696(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1500(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1712(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1499(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1528(%rsp), %rsi        # 8-byte Reload
	movq	1552(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1576(%rsp), %r8         # 8-byte Reload
	movl	1540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1499(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1712(%rsp), %rdi        # 8-byte Reload
	movq	1712(%rsp), %rsi        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1499(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1564(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1492(%rsp)        # 4-byte Spill
	jne	.LBB7_2
	jmp	.LBB7_3
.Ltmp222:
.LBB7_2:                                # %.lr.ph
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1492(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str118, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str184, %r9
	movabsq	$3, %r10
	leaq	.L.str94, %r11
	movabsq	$400, %rbx              # imm = 0x190
	leaq	.L.str180, %r14
	leaq	.L.str186, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1480(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rcx
	movq	%rcx, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 1456(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rcx
	movq	%rcx, 1440(%rsp)        # 8-byte Spill
	movabsq	$23, %rcx
	movl	%eax, 1436(%rsp)        # 4-byte Spill
	movl	$2, %eax
	movq	%rcx, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str185, %rcx
	movq	%rcx, 1416(%rsp)        # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 1408(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rcx
	movq	%rcx, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str182163, %rcx
	movq	%rcx, 1392(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1384(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 1376(%rsp)        # 8-byte Spill
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1368(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1360(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1352(%rsp)        # 8-byte Spill
	movq	%r11, %rdx
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1344(%rsp)         # 8-byte Spill
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1336(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1332(%rsp)        # 4-byte Spill
	movq	%r15, 1320(%rsp)        # 8-byte Spill
	movl	%ebp, 1316(%rsp)        # 4-byte Spill
	movl	%r12d, 1312(%rsp)       # 4-byte Spill
	movq	%r13, 1304(%rsp)        # 8-byte Spill
	movq	%r14, 1296(%rsp)        # 8-byte Spill
	movq	%rbx, 1288(%rsp)        # 8-byte Spill
	movq	%r10, 1280(%rsp)        # 8-byte Spill
	movq	%r11, 1272(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movq	1480(%rsp), %r9         # 8-byte Reload
	movq	1392(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1480(%rsp), %r9         # 8-byte Reload
	movq	1272(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1272(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1436(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1332(%rsp), %ebp        # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1268(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp223:
	#DEBUG_VALUE: m <- [RSP+1268]
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1268(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1268(%rsp), %eax        # 4-byte Reload
	andl	$1, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 1264(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1264(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1472(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1264(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1304(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1263(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1296(%rsp), %rsi        # 8-byte Reload
	movq	1272(%rsp), %rdx        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movl	1316(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1344(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1263(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1480(%rsp), %rsi        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1360(%rsp), %r9         # 8-byte Reload
	movq	1368(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1263(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1268(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1492(%rsp)        # 4-byte Spill
	jne	.LBB7_2
.Ltmp224:
.LBB7_3:                                # %.loopexit
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	1492(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str1697, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str190, %r9
	movabsq	$3, %r10
	leaq	.L.str189, %r11
	movabsq	$401, %rbx              # imm = 0x191
	leaq	.L.str180, %r14
	leaq	.L.str184, %r15
	leaq	.L.str188, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1248(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1240(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rcx
	movq	%rcx, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 1216(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 1212(%rsp)        # 4-byte Spill
	movl	$3, %eax
	movq	%rcx, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str187, %rcx
	movq	%rcx, 1192(%rsp)        # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str182163, %rcx
	movq	%rcx, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rcx
	movq	%rcx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rcx
	movq	%rcx, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str94, %rcx
	movq	%rcx, 1152(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1144(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 401 0                 # kiss_fft.c:401:0
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1128(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1120(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 1112(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1104(%rsp)         # 8-byte Spill
	movq	1136(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1096(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1092(%rsp)        # 4-byte Spill
	movq	%r15, 1080(%rsp)        # 8-byte Spill
	movq	%r12, 1072(%rsp)        # 8-byte Spill
	movl	%ebp, 1068(%rsp)        # 4-byte Spill
	movl	%r13d, 1064(%rsp)       # 4-byte Spill
	movq	%r14, 1056(%rsp)        # 8-byte Spill
	movq	%rbx, 1048(%rsp)        # 8-byte Spill
	movq	%r10, 1040(%rsp)        # 8-byte Spill
	movq	%r11, 1032(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1248(%rsp), %r9         # 8-byte Reload
	movq	1152(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1248(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1176(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1040(%rsp), %rdx        # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1212(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1092(%rsp), %ebp        # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 1028(%rsp)        # 4-byte Spill
	movq	%rcx, %rdx
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1028(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1028(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1248(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1027(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	1056(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movl	1068(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	1120(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1120(%rsp), %rsi        # 8-byte Reload
	movq	1120(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1096(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1027(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1248(%rsp), %rdi        # 8-byte Reload
	movq	1248(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	1120(%rsp), %r9         # 8-byte Reload
	movq	1128(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1027(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1212(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, 1020(%rsp)        # 4-byte Spill
	jne	.LBB7_4
	jmp	.LBB7_5
.LBB7_4:                                # %.lr.ph4
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1020(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str105, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str190, %r9
	movabsq	$3, %r10
	leaq	.L.str189, %r11
	movabsq	$401, %rbx              # imm = 0x191
	leaq	.L.str180, %r14
	leaq	.L.str192, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1008(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rcx
	movq	%rcx, 992(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 984(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 980(%rsp)         # 4-byte Spill
	movl	$3, %eax
	movq	%rcx, 968(%rsp)         # 8-byte Spill
	leaq	.L.str104, %rcx
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	leaq	.L.str191, %rcx
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	leaq	.L.str187, %rcx
	movq	%rcx, 928(%rsp)         # 8-byte Spill
	leaq	.L.str184, %rcx
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 904(%rsp)         # 8-byte Spill
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 896(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 872(%rsp)          # 8-byte Spill
	movq	904(%rsp), %r8          # 8-byte Reload
	movq	%r9, 864(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 860(%rsp)         # 4-byte Spill
	movq	%r15, 848(%rsp)         # 8-byte Spill
	movl	%ebp, 844(%rsp)         # 4-byte Spill
	movl	%r12d, 840(%rsp)        # 4-byte Spill
	movq	%r13, 832(%rsp)         # 8-byte Spill
	movq	%r14, 824(%rsp)         # 8-byte Spill
	movq	%rbx, 816(%rsp)         # 8-byte Spill
	movq	%r10, 808(%rsp)         # 8-byte Spill
	movq	%r11, 800(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	1008(%rsp), %r9         # 8-byte Reload
	movq	920(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	1008(%rsp), %r9         # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	800(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	980(%rsp), %eax         # 4-byte Reload
	cltd
	movl	860(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 796(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp225:
	#DEBUG_VALUE: m <- [RSP+796]
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	796(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	796(%rsp), %eax         # 4-byte Reload
	cltd
	movl	860(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 792(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	792(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	792(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 791(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	824(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movl	844(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	888(%rsp), %rsi         # 8-byte Reload
	movq	888(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	791(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	888(%rsp), %r9          # 8-byte Reload
	movq	896(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	791(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	796(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 1020(%rsp)        # 4-byte Spill
	jne	.LBB7_4
.Ltmp226:
.LBB7_5:                                # %.loopexit2
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	1020(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str25106, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str88, %r9
	movabsq	$3, %r10
	leaq	.L.str195, %r11
	movabsq	$402, %rbx              # imm = 0x192
	leaq	.L.str180, %r14
	leaq	.L.str190, %r15
	leaq	.L.str194, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 760(%rsp)         # 8-byte Spill
	leaq	.L.str24105, %rcx
	movq	%rcx, 752(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 740(%rsp)         # 4-byte Spill
	movl	$5, %eax
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	leaq	.L.str193, %rcx
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 712(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	leaq	.L.str184, %rcx
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	leaq	.L.str187, %rcx
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	leaq	.L.str104, %rcx
	movq	%rcx, 680(%rsp)         # 8-byte Spill
	leaq	.L.str189, %rcx
	movq	%rcx, 672(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 402 0                 # kiss_fft.c:402:0
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 648(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 640(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 632(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 624(%rsp)          # 8-byte Spill
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	%r9, 616(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 612(%rsp)         # 4-byte Spill
	movq	%r15, 600(%rsp)         # 8-byte Spill
	movq	%r12, 592(%rsp)         # 8-byte Spill
	movl	%ebp, 588(%rsp)         # 4-byte Spill
	movl	%r13d, 584(%rsp)        # 4-byte Spill
	movq	%r14, 576(%rsp)         # 8-byte Spill
	movq	%rbx, 568(%rsp)         # 8-byte Spill
	movq	%r10, 560(%rsp)         # 8-byte Spill
	movq	%r11, 552(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	776(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	704(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	740(%rsp), %eax         # 4-byte Reload
	cltd
	movl	612(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 548(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	548(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	548(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	776(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 547(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movl	588(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	640(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	640(%rsp), %rsi         # 8-byte Reload
	movq	640(%rsp), %rdx         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	616(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	547(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	776(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	640(%rsp), %r9          # 8-byte Reload
	movq	648(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	547(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	740(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 540(%rsp)         # 4-byte Spill
	jne	.LBB7_6
	jmp	.LBB7_7
.LBB7_6:                                # %.lr.ph7
                                        #   Parent Loop BB7_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	540(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str110, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str88, %r9
	movabsq	$3, %r10
	leaq	.L.str195, %r11
	movabsq	$402, %rbx              # imm = 0x192
	leaq	.L.str180, %r14
	leaq	.L.str197, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 528(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 520(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rcx
	movq	%rcx, 512(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 504(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movl	%eax, 500(%rsp)         # 4-byte Spill
	movl	$5, %eax
	movq	%rcx, 488(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rcx
	movq	%rcx, 480(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 472(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 464(%rsp)         # 8-byte Spill
	leaq	.L.str196, %rcx
	movq	%rcx, 456(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 448(%rsp)         # 8-byte Spill
	leaq	.L.str193, %rcx
	movq	%rcx, 440(%rsp)         # 8-byte Spill
	leaq	.L.str190, %rcx
	movq	%rcx, 432(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 424(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 416(%rsp)         # 8-byte Spill
	movq	424(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 408(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 400(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 392(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 384(%rsp)          # 8-byte Spill
	movq	416(%rsp), %r8          # 8-byte Reload
	movq	%r9, 376(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 372(%rsp)         # 4-byte Spill
	movq	%r15, 360(%rsp)         # 8-byte Spill
	movl	%ebp, 356(%rsp)         # 4-byte Spill
	movl	%r12d, 352(%rsp)        # 4-byte Spill
	movq	%r13, 344(%rsp)         # 8-byte Spill
	movq	%r14, 336(%rsp)         # 8-byte Spill
	movq	%rbx, 328(%rsp)         # 8-byte Spill
	movq	%r10, 320(%rsp)         # 8-byte Spill
	movq	%r11, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	movq	312(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	312(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	500(%rsp), %eax         # 4-byte Reload
	cltd
	movl	372(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 308(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp227:
	#DEBUG_VALUE: m <- [RSP+308]
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %eax         # 4-byte Reload
	cltd
	movl	372(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 304(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	304(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	520(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	304(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	528(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 303(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	312(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	303(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	528(%rsp), %rdi         # 8-byte Reload
	movq	528(%rsp), %rsi         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	303(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 540(%rsp)         # 4-byte Spill
	jne	.LBB7_6
.Ltmp228:
.LBB7_7:                                # %._crit_edge
                                        #   in Loop: Header=BB7_1 Depth=1
	movl	540(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str141, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str182163, %r9
	movabsq	$3, %r10
	leaq	.L.str37118, %r11
	movabsq	$403, %rbx              # imm = 0x193
	leaq	.L.str180, %r14
	leaq	.L.str88, %r15
	leaq	.L.str199, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str34115, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	leaq	.L.str140, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	movabsq	$405, %rcx              # imm = 0x195
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	.L.str198, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	.L.str190, %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	leaq	.L.str193, %rcx
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rcx
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	leaq	.L.str195, %rcx
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 403 0                 # kiss_fft.c:403:0
.Ltmp229:
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	movq	176(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 160(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 152(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 144(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 136(%rsp)          # 8-byte Spill
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	%r9, 128(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 124(%rsp)         # 4-byte Spill
	movq	%r15, 112(%rsp)         # 8-byte Spill
	movq	%r12, 104(%rsp)         # 8-byte Spill
	movl	%ebp, 100(%rsp)         # 4-byte Spill
	movl	%r13d, 96(%rsp)         # 4-byte Spill
	movq	%r14, 88(%rsp)          # 8-byte Spill
	movq	%rbx, 80(%rsp)          # 8-byte Spill
	movq	%r10, 72(%rsp)          # 8-byte Spill
	movq	%r11, 64(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	192(%rsp), %r8          # 8-byte Reload
	movq	288(%rsp), %r9          # 8-byte Reload
	movq	184(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	288(%rsp), %r9          # 8-byte Reload
	movq	208(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	208(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	124(%rsp), %eax         # 4-byte Reload
	cmpl	$2, %eax
	setl	%al
.Ltmp230:
	.loc	2 405 0                 # kiss_fft.c:405:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 63(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	240(%rsp), %rdi         # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rdx         # 8-byte Reload
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %ebp        # 4-byte Reload
	addl	$1, %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 56(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp231:
	#DEBUG_VALUE: kiss_fft_next_fast_size:n <- [RSP+56]
	.loc	2 403 0                 # kiss_fft.c:403:0
	movq	80(%rsp), %rdi          # 8-byte Reload
	movq	88(%rsp), %rsi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	104(%rsp), %rcx         # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movl	100(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	152(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	64(%rsp), %r8           # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	152(%rsp), %rsi         # 8-byte Reload
	movq	152(%rsp), %rdx         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	128(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	63(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	288(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	288(%rsp), %rcx         # 8-byte Reload
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	152(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	63(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movl	56(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, 1724(%rsp)        # 4-byte Spill
	jne	.LBB7_8
	jmp	.LBB7_1
.Ltmp232:
.LBB7_8:
	movabsq	$1, %rax
	movabsq	$32, %rsi
	leaq	.L.str140, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %rcx
	movabsq	$407, %rdi              # imm = 0x197
	leaq	.L.str180, %rdx
	leaq	.L.str37118, %r10
	leaq	.L.str39120, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	.loc	2 407 0                 # kiss_fft.c:407:0
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%rdx, %rsi
	movq	%r10, %rdx
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 32(%rsp)           # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 24(%rsp)           # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movl	%ebp, 12(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movl	1564(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	16(%rsp), %rcx          # 8-byte Reload
	movq	32(%rsp), %r8           # 8-byte Reload
	movq	24(%rsp), %r9           # 8-byte Reload
	movq	40(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1564(%rsp), %eax        # 4-byte Reload
	addq	$1832, %rsp             # imm = 0x728
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp233:
.Ltmp234:
	.size	kiss_fft_next_fast_size, .Ltmp234-kiss_fft_next_fast_size
.Lfunc_end7:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_factor,@function
kf_factor:                              # @kf_factor
	.cfi_startproc
.Lfunc_begin8:
	.loc	2 310 0                 # kiss_fft.c:310:0
# BB#0:
	pushq	%rbp
.Ltmp242:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp243:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp244:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp245:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp246:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp247:
	.cfi_def_cfa_offset 56
	subq	$1608, %rsp             # imm = 0x648
.Ltmp248:
	.cfi_def_cfa_offset 1664
.Ltmp249:
	.cfi_offset %rbx, -56
.Ltmp250:
	.cfi_offset %r12, -48
.Ltmp251:
	.cfi_offset %r13, -40
.Ltmp252:
	.cfi_offset %r14, -32
.Ltmp253:
	.cfi_offset %r15, -24
.Ltmp254:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: kf_factor:facbuf <- RSI
	#DEBUG_VALUE: kf_factor:n <- EDI
	movl	$4, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str86, %r8
	leaq	.L.str485, %r9
	movabsq	$316, %r10              # imm = 0x13C
	leaq	.L.str79160, %r11
	leaq	.L.str182, %rbx
	leaq	.L.str85, %r14
	movabsq	$2, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rcx, 1600(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rcx
	movq	%rcx, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rcx
	movq	%rcx, 1576(%rsp)        # 8-byte Spill
	leaq	floor, %rcx
	movq	%rcx, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str84, %rcx
	movq	%rcx, 1560(%rsp)        # 8-byte Spill
	movabsq	$313, %rcx              # imm = 0x139
	movq	%rcx, 1552(%rsp)        # 8-byte Spill
	movabsq	$49, %rcx
	movq	%rcx, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rcx
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	leaq	sqrt, %rcx
	movq	%rcx, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str83, %rcx
	.loc	2 309 0 prologue_end    # kiss_fft.c:309:0
.Ltmp255:
	movl	%eax, 1524(%rsp)        # 4-byte Spill
	movl	%edi, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str82, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 1504(%rsp)        # 8-byte Spill
.Ltmp256:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+1504]
	movl	$24601, %esi            # imm = 0x6019
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1496(%rsp)        # 8-byte Spill
	movl	$32, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1488(%rsp)        # 8-byte Spill
	movl	$1, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 1480(%rsp)        # 8-byte Spill
	xorl	%esi, %esi
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	movl	%esi, %eax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	movq	1496(%rsp), %rax        # 8-byte Reload
	movl	%edi, 1460(%rsp)        # 4-byte Spill
.Ltmp257:
	#DEBUG_VALUE: kf_factor:n <- [RSP+1460]
	movq	%rax, %rdi
	movq	1488(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1456(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1512(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1448(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1480(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1440(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1472(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1432(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1464(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1424(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movl	%r12d, 1420(%rsp)       # 4-byte Spill
	movq	%r13, 1408(%rsp)        # 8-byte Spill
	movq	%r15, 1400(%rsp)        # 8-byte Spill
	movl	%ebp, 1396(%rsp)        # 4-byte Spill
	movq	%r14, 1384(%rsp)        # 8-byte Spill
	movq	%rbx, 1376(%rsp)        # 8-byte Spill
	movq	%r10, 1368(%rsp)        # 8-byte Spill
	movq	%r11, 1360(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp258:
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str89, %ebp
	movl	%ebp, %r8d
	movl	$64, %ebp
	movl	%ebp, %esi
	movq	1496(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_ptr
.Ltmp259:
	#DEBUG_VALUE: kf_factor:p <- 4
	.loc	2 313 0                 # kiss_fft.c:313:0
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str79160, %ebp
	movl	%ebp, %esi
	movl	$.L.str182, %ebp
	movl	%ebp, %edx
	movl	$.L.str283, %ebp
	movl	%ebp, %ecx
	movl	$313, %ebp              # imm = 0x139
	movl	%ebp, %edi
	movl	$39, %ebp
	movl	%ebp, %r8d
	movl	1456(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1488(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1464(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	1460(%rsp), %ebp        # 4-byte Reload
	vcvtsi2sdl	%ebp, %xmm0, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1352(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	1352(%rsp), %xmm0       # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	1352(%rsp), %xmm0       # 8-byte Reload
	callq	sqrt
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1344(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1544(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1568(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	1344(%rsp), %xmm0       # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
                                        # implicit-def: XMM0
	vmovsd	1344(%rsp), %xmm1       # 8-byte Reload
	vroundsd	$1, %xmm1, %xmm0, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	vmovsd	%xmm0, 1336(%rsp)       # 8-byte Spill
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1424(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
.Ltmp260:
	#DEBUG_VALUE: kf_factor:floor_sqrt <- [RSP+1336]
	.loc	2 316 0                 # kiss_fft.c:316:0
	movq	1368(%rsp), %rdi        # 8-byte Reload
	movq	1360(%rsp), %rsi        # 8-byte Reload
	movq	1376(%rsp), %rdx        # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	1396(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1600(%rsp), %rdi        # 8-byte Reload
	movq	1448(%rsp), %rsi        # 8-byte Reload
	movq	1448(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movq	1448(%rsp), %r9         # 8-byte Reload
	movq	1424(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1504(%rsp), %rax        # 8-byte Reload
	movl	1524(%rsp), %ebp        # 4-byte Reload
	movl	1460(%rsp), %r12d       # 4-byte Reload
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movl	%ebp, 1324(%rsp)        # 4-byte Spill
	movl	%r12d, 1320(%rsp)       # 4-byte Spill
.Ltmp261:
.LBB8_1:                                # %.outer
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_2 Depth 2
	movl	1320(%rsp), %eax        # 4-byte Reload
	movl	1324(%rsp), %ecx        # 4-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movabsq	$1, %rsi
	leaq	.L.str990, %rdi
	movabsq	$0, %r8
	leaq	.L.str485, %r9
	movabsq	$2, %r10
	leaq	.L.str94, %r11
	movabsq	$3, %rbx
	leaq	.L.str88, %r14
	movabsq	$317, %r15              # imm = 0x13D
	leaq	.L.str79160, %r12
	leaq	.L.str86, %r13
	leaq	.L.str93, %rbp
	movl	%eax, 1316(%rsp)        # 4-byte Spill
	movl	$0, %eax
	movl	%eax, 1312(%rsp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rdx, 1304(%rsp)        # 8-byte Spill
	movabsq	$19134, %rdx            # imm = 0x4ABE
	movq	%rdx, 1296(%rsp)        # 8-byte Spill
	movabsq	$32, %rdx
	movq	%rdx, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rdx
	movq	%rdx, 1280(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rdx
	movq	%rdx, 1272(%rsp)        # 8-byte Spill
	movabsq	$46, %rdx
	movq	%rdx, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str92, %rdx
	movq	%rdx, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str90, %rdx
	movq	%rdx, 1248(%rsp)        # 8-byte Spill
	movabsq	$18, %rdx
	movq	%rdx, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str182, %rdx
	movq	%rdx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str82, %rdx
	movq	%rdx, 1224(%rsp)        # 8-byte Spill
	leaq	.L.str25106, %rdx
	movq	%rdx, 1216(%rsp)        # 8-byte Spill
	movabsq	$-1, %rdx
	movq	%rdx, 1208(%rsp)        # 8-byte Spill
	movabsq	$48, %rdx
	movq	%rdx, 1200(%rsp)        # 8-byte Spill
	movabsq	$4, %rdx
	movq	%rdx, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str91, %rdx
	movq	%rdx, 1184(%rsp)        # 8-byte Spill
	movabsq	$64, %rdx
	movq	%rdx, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str87, %rdx
	movq	%rdx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str89, %rdx
	movq	%rdx, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str28109, %rdx
	.loc	2 317 0                 # kiss_fft.c:317:0
.Ltmp262:
	movq	%rdx, 1152(%rsp)        # 8-byte Spill
	movq	1208(%rsp), %rdx        # 8-byte Reload
	movq	%rdi, 1144(%rsp)        # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rsi, 1136(%rsp)        # 8-byte Spill
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%r8, 1128(%rsp)         # 8-byte Spill
	movq	1168(%rsp), %r8         # 8-byte Reload
	movl	%ecx, 1124(%rsp)        # 4-byte Spill
	movq	%r8, %rcx
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	%eax, 1120(%rsp)        # 4-byte Spill
	movl	1312(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1112(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1104(%rsp)        # 8-byte Spill
	movq	%r12, 1096(%rsp)        # 8-byte Spill
	movq	%r13, 1088(%rsp)        # 8-byte Spill
	movq	%rbp, 1080(%rsp)        # 8-byte Spill
	movq	%r14, 1072(%rsp)        # 8-byte Spill
	movq	%rbx, 1064(%rsp)        # 8-byte Spill
	movq	%r10, 1056(%rsp)        # 8-byte Spill
	movq	%r11, 1048(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1160(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1176(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1192(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1208(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1072(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1460(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	1136(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1232(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	1124(%rsp), %esi        # 4-byte Reload
	idivl	%esi
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movl	%edx, 1044(%rsp)        # 4-byte Spill
	movq	%rcx, %rdx
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1044(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1044(%rsp), %eax        # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1136(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1043(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1104(%rsp), %rdi        # 8-byte Reload
	movq	1096(%rsp), %rsi        # 8-byte Reload
	movq	1088(%rsp), %rdx        # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movl	1312(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1064(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1072(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1128(%rsp), %rsi        # 8-byte Reload
	movq	1128(%rsp), %rdx        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1043(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1136(%rsp), %rdi        # 8-byte Reload
	movq	1136(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1144(%rsp), %r8         # 8-byte Reload
	movq	1128(%rsp), %r9         # 8-byte Reload
	movq	1112(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1043(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movl	1124(%rsp), %eax        # 4-byte Reload
	movl	%eax, 1036(%rsp)        # 4-byte Spill
	jne	.LBB8_6
.LBB8_2:                                # %.lr.ph
                                        #   Parent Loop BB8_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movl	1036(%rsp), %eax        # 4-byte Reload
	movl	$2, %ecx
	.loc	2 318 0                 # kiss_fft.c:318:0
.Ltmp263:
	movq	%rsp, %rdx
	movl	$1, (%rdx)
	movl	$.L.str79160, %esi
	movl	%esi, %edx
	movl	$.L.str94, %esi
	movl	%esi, %edi
	movl	$.L.str95, %esi
	movl	%esi, %r8d
	movl	$48, %esi
	movl	%esi, %r9d
	movq	$-1, %r10
	xorl	%esi, %esi
	movq	%rdi, 1024(%rsp)        # 8-byte Spill
	movq	%r10, %rdi
	movl	%esi, 1020(%rsp)        # 4-byte Spill
	movq	%rdx, %rsi
	movq	1024(%rsp), %r10        # 8-byte Reload
	movq	%rdx, 1008(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movl	%ecx, 1004(%rsp)        # 4-byte Spill
	movq	%r8, %rcx
	movq	%r8, 992(%rsp)          # 8-byte Spill
	movq	%r9, %r8
	movl	1020(%rsp), %r9d        # 4-byte Reload
	movl	%eax, 988(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str86, (%rcx)
	movl	$.L.str90, %eax
	movl	%eax, %r8d
	movl	$2, %eax
	movl	%eax, %ecx
	movl	$32, %eax
	movl	%eax, %edx
	movl	1020(%rsp), %eax        # 4-byte Reload
	movl	%eax, %esi
	movl	$1, %r9d
	movl	%r9d, %edi
	movq	%rdi, 976(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 968(%rsp)         # 8-byte Spill
	movq	%rdx, %rsi
	movq	968(%rsp), %r10         # 8-byte Reload
	movq	%rdx, 960(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	976(%rsp), %r11         # 8-byte Reload
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r11, %r9
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str97, (%rcx)
	movl	$.L.str96, %eax
	movl	%eax, %r8d
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	$.L.str97, %eax
	movl	%eax, %r8d
	movl	988(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebx
	movl	%ebx, %ecx
	movq	%rsp, %rdx
	movq	$.L.str97, (%rdx)
	movl	$19134, %ebx            # imm = 0x4ABE
	movl	%ebx, %edi
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	976(%rsp), %r9          # 8-byte Reload
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	movq	%r9, %rcx
	movq	992(%rsp), %r10         # 8-byte Reload
	movq	%r8, 936(%rsp)          # 8-byte Spill
	movq	%r10, %r8
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str98, %eax
	movl	%eax, %ecx
	movl	$318, %eax              # imm = 0x13E
	movl	%eax, %edi
	movl	$3, %eax
	movl	%eax, %edx
	movq	1008(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	%rdx, 928(%rsp)         # 8-byte Spill
	movq	%r8, %rdx
	movq	928(%rsp), %r8          # 8-byte Reload
	movl	1020(%rsp), %r9d        # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movl	$.L.str99, %eax
	movl	%eax, %r8d
	movl	$6, %eax
	movl	%eax, %edi
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movl	$.L.str384, %eax
	movl	%eax, %ecx
	movl	$5, %eax
	movl	%eax, %edi
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movl	$4, %eax
	movl	%eax, %ecx
	movq	%rcx, %rdi
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	912(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movl	$.L.str100, %eax
	movl	%eax, %r8d
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	968(%rsp), %rsi         # 8-byte Reload
	movq	968(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	960(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	968(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	988(%rsp), %eax         # 4-byte Reload
	subl	$4, %eax
	movl	$2, %ebx
	movl	%eax, 908(%rsp)         # 4-byte Spill
	movl	%ebx, 904(%rsp)         # 4-byte Spill
	je	.LBB8_5
	jmp	.LBB8_8
.LBB8_8:                                # %.lr.ph
                                        #   in Loop: Header=BB8_2 Depth=2
	movl	988(%rsp), %eax         # 4-byte Reload
	subl	$2, %eax
	movl	%eax, 900(%rsp)         # 4-byte Spill
	jne	.LBB8_4
	jmp	.LBB8_3
.LBB8_3:                                #   in Loop: Header=BB8_2 Depth=2
	movl	$3, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str97, %r8
	leaq	.L.str485, %rsi
	movabsq	$320, %rdi              # imm = 0x140
	leaq	.L.str79160, %r9
	leaq	.L.str99, %r10
	leaq	.L.str101, %r11
	movabsq	$2, %rbx
	movl	$0, %ebp
	movl	$1, %r14d
.Ltmp264:
	#DEBUG_VALUE: kf_factor:p <- 3
	.loc	2 320 0                 # kiss_fft.c:320:0
	movq	%rsi, 888(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 880(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 864(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 860(%rsp)         # 4-byte Spill
	movl	%r14d, 856(%rsp)        # 4-byte Spill
	callq	trace_logger_log0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	880(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	880(%rsp), %r9          # 8-byte Reload
	movq	888(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	860(%rsp), %eax         # 4-byte Reload
	movl	%eax, 904(%rsp)         # 4-byte Spill
	jmp	.LBB8_5
.LBB8_4:                                #   in Loop: Header=BB8_2 Depth=2
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str97, %r8
	leaq	.L.str485, %rdx
	movabsq	$321, %rsi              # imm = 0x141
	leaq	.L.str79160, %rdi
	leaq	.L.str100, %r9
	leaq	.L.str102, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str1697, %r12
	leaq	.L.str95, %r13
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	2 321 0                 # kiss_fft.c:321:0
	movq	%rdi, 832(%rsp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 824(%rsp)         # 8-byte Spill
	movq	832(%rsp), %rax         # 8-byte Reload
	movq	%rsi, 816(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 808(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 800(%rsp)         # 8-byte Spill
	movq	%r12, %rcx
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%r8, 792(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 784(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 776(%rsp)         # 8-byte Spill
	movl	%ebp, 772(%rsp)         # 4-byte Spill
	movq	%r15, 760(%rsp)         # 8-byte Spill
	movq	%r12, 752(%rsp)         # 8-byte Spill
	movq	%r13, 744(%rsp)         # 8-byte Spill
	movl	%ebx, 740(%rsp)         # 4-byte Spill
	movq	%r10, 728(%rsp)         # 8-byte Spill
	movq	%r11, 720(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	988(%rsp), %ebx         # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	988(%rsp), %ebx         # 4-byte Reload
	addl	$2, %ebx
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 716(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp265:
	#DEBUG_VALUE: kf_factor:p <- [RSP+716]
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	832(%rsp), %rsi         # 8-byte Reload
	movq	784(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movl	740(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	800(%rsp), %rsi         # 8-byte Reload
	movq	800(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	800(%rsp), %r9          # 8-byte Reload
	movq	808(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	716(%rsp), %ebx         # 4-byte Reload
	movl	%ebx, 904(%rsp)         # 4-byte Spill
.Ltmp266:
.LBB8_5:                                # %.backedge
                                        #   in Loop: Header=BB8_2 Depth=2
	movl	904(%rsp), %eax         # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str24105, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str94, %r9
	movabsq	$3, %r10
	leaq	.L.str88, %r11
	movabsq	$317, %rbx              # imm = 0x13D
	leaq	.L.str79160, %r14
	leaq	.L.str97, %r15
	leaq	.L.str106, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 704(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 696(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 688(%rsp)         # 8-byte Spill
	leaq	.L.str105, %rcx
	movq	%rcx, 680(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 672(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 664(%rsp)         # 8-byte Spill
	leaq	.L.str92, %rcx
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	leaq	.L.str96, %rcx
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movabsq	$18, %rcx
	movq	%rcx, 640(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rcx
	movq	%rcx, 632(%rsp)         # 8-byte Spill
	leaq	.L.str103, %rcx
	movq	%rcx, 624(%rsp)         # 8-byte Spill
	movabsq	$323, %rcx              # imm = 0x143
	movq	%rcx, 616(%rsp)         # 8-byte Spill
	movabsq	$50, %rcx
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 600(%rsp)         # 8-byte Spill
	leaq	.L.str104, %rcx
	movq	%rcx, 592(%rsp)         # 8-byte Spill
	leaq	.L.str788, %rcx
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movabsq	$47, %rcx
	.loc	2 323 0                 # kiss_fft.c:323:0
.Ltmp267:
	movq	%rcx, 576(%rsp)         # 8-byte Spill
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str79160, %ecx
                                        # kill: RCX<def> ECX<kill>
	movl	%eax, 572(%rsp)         # 4-byte Spill
	movl	$.L.str97, %eax
                                        # kill: RAX<def> EAX<kill>
	movq	%rsi, 560(%rsp)         # 8-byte Spill
	movl	$.L.str103, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rsi, 552(%rsp)         # 8-byte Spill
	movl	$48, %esi
                                        # kill: RSI<def> ESI<kill>
	movq	%rax, 544(%rsp)         # 8-byte Spill
	movq	$-1, %rax
	movq	%rsi, 536(%rsp)         # 8-byte Spill
	xorl	%esi, %esi
	movq	%rdi, 528(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 524(%rsp)         # 4-byte Spill
	movq	%rcx, %rsi
	movq	544(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 512(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	552(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 504(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	536(%rsp), %rax         # 8-byte Reload
	movq	%r8, 496(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	524(%rsp), %eax         # 4-byte Reload
	movq	%r9, 488(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movq	%r15, 480(%rsp)         # 8-byte Spill
	movl	%r13d, 476(%rsp)        # 4-byte Spill
	movq	%r12, 464(%rsp)         # 8-byte Spill
	movl	%ebp, 460(%rsp)         # 4-byte Spill
	movq	%r14, 448(%rsp)         # 8-byte Spill
	movq	%rbx, 440(%rsp)         # 8-byte Spill
	movq	%r10, 432(%rsp)         # 8-byte Spill
	movq	%r11, 424(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str94, (%rcx)
	movl	$.L.str384, %eax
	movl	%eax, %ecx
	movl	$3, %eax
	movl	%eax, %edx
	movl	$32, %eax
	movl	%eax, %esi
	movl	$2, %eax
	movl	%eax, %edi
	movl	524(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r8d
	movl	$1, %r9d
	movl	%r9d, %r10d
	movq	%rdi, 416(%rsp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rsi, 408(%rsp)         # 8-byte Spill
	movq	416(%rsp), %r11         # 8-byte Reload
	movq	%rdx, 400(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	%rcx, 392(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	392(%rsp), %rbx         # 8-byte Reload
	movq	%r8, 384(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movq	%r10, %r9
	movq	%r10, 376(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str99, (%rcx)
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	376(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movq	$.L.str100, (%rcx)
	movl	$.L.str1697, %eax
	movl	%eax, %r8d
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	384(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movl	572(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %ecx
	movq	%rsp, %rdx
	movq	$.L.str100, (%rdx)
	movl	$19134, %ebp            # imm = 0x4ABE
	movl	%ebp, %edi
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 368(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	384(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rcx
	movl	$1, (%rcx)
	movl	$.L.str104, %eax
	movl	%eax, %ecx
	movl	$323, %eax              # imm = 0x143
	movl	%eax, %edi
	movl	$39, %eax
	movl	%eax, %r8d
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movl	524(%rsp), %r9d         # 4-byte Reload
	callq	trace_logger_log0
	movq	%rsp, %rcx
	movq	$.L.str485, (%rcx)
	movq	376(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	552(%rsp), %r8          # 8-byte Reload
	movq	384(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_int
                                        # implicit-def: XMM0
	movl	572(%rsp), %eax         # 4-byte Reload
	vcvtsi2sdl	%eax, %xmm0, %xmm0
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	%xmm0, 360(%rsp)        # 8-byte Spill
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	1336(%rsp), %xmm0       # 8-byte Reload
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	600(%rsp), %rsi         # 8-byte Reload
	vmovsd	360(%rsp), %xmm0        # 8-byte Reload
	movq	704(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	528(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	360(%rsp), %xmm0        # 8-byte Reload
	vmovsd	1336(%rsp), %xmm1       # 8-byte Reload
	vucomisd	%xmm1, %xmm0
	seta	%al
	.loc	2 324 0                 # kiss_fft.c:324:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 359(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
.Ltmp268:
	#DEBUG_VALUE: kf_factor:p <- [RSP+1316]
	.loc	2 323 0                 # kiss_fft.c:323:0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	572(%rsp), %r9d         # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	359(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	359(%rsp), %al          # 1-byte Reload
	testb	%al, %al
	movl	1316(%rsp), %ebp        # 4-byte Reload
	movl	572(%rsp), %r13d        # 4-byte Reload
	cmovel	%r13d, %ebp
.Ltmp269:
	.loc	2 317 0                 # kiss_fft.c:317:0
	movl	%ebp, %eax
	movl	%eax, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 352(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	352(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	352(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%edx, %eax
	movl	%eax, %ecx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movl	%edx, 348(%rsp)         # 4-byte Spill
	movq	%rcx, %rdx
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	664(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	348(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	348(%rsp), %eax         # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 347(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	464(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movl	460(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	432(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	560(%rsp), %rsi         # 8-byte Reload
	movq	560(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	347(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	560(%rsp), %r9          # 8-byte Reload
	movq	528(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	347(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movl	352(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, 1036(%rsp)        # 4-byte Spill
	jne	.LBB8_6
	jmp	.LBB8_2
.Ltmp270:
.LBB8_6:                                # %._crit_edge
                                        #   in Loop: Header=BB8_1 Depth=1
	movl	1036(%rsp), %eax        # 4-byte Reload
	movabsq	$1, %rcx
	leaq	.L.str110, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str1899, %r9
	movabsq	$3, %r10
	leaq	.L.str86, %r11
	movabsq	$329, %rbx              # imm = 0x149
	leaq	.L.str79160, %r14
	leaq	.L.str88, %r15
	leaq	.L.str111, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 336(%rsp)         # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 328(%rsp)         # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 320(%rsp)         # 8-byte Spill
	leaq	.L.str25106, %rcx
	movq	%rcx, 312(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 304(%rsp)         # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 296(%rsp)         # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 288(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rcx
	movq	%rcx, 280(%rsp)         # 8-byte Spill
	movabsq	$328, %rcx              # imm = 0x148
	movq	%rcx, 272(%rsp)         # 8-byte Spill
	leaq	.L.str109, %rcx
	movq	%rcx, 264(%rsp)         # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rcx
	movq	%rcx, 248(%rsp)         # 8-byte Spill
	leaq	.L.str87, %rcx
	movq	%rcx, 240(%rsp)         # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 232(%rsp)         # 8-byte Spill
	leaq	.L.str91, %rcx
	movq	%rcx, 224(%rsp)         # 8-byte Spill
	movabsq	$327, %rcx              # imm = 0x147
	movq	%rcx, 216(%rsp)         # 8-byte Spill
	leaq	.L.str108, %rcx
	movq	%rcx, 208(%rsp)         # 8-byte Spill
	leaq	.L.str92, %rcx
	movq	%rcx, 200(%rsp)         # 8-byte Spill
	movabsq	$326, %rcx              # imm = 0x146
	movq	%rcx, 192(%rsp)         # 8-byte Spill
	movabsq	$15, %rcx
	movq	%rcx, 184(%rsp)         # 8-byte Spill
	leaq	.L.str90, %rcx
	movq	%rcx, 176(%rsp)         # 8-byte Spill
	leaq	.L.str96, %rcx
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	leaq	.L.str97, %rcx
	movq	%rcx, 160(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 152(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 326 0                 # kiss_fft.c:326:0
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	152(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	%r8, 112(%rsp)          # 8-byte Spill
	movq	144(%rsp), %r8          # 8-byte Reload
	movq	%r9, 104(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 100(%rsp)         # 4-byte Spill
	movq	%r15, 88(%rsp)          # 8-byte Spill
	movq	%r12, 80(%rsp)          # 8-byte Spill
	movl	%ebp, 76(%rsp)          # 4-byte Spill
	movl	%r13d, 72(%rsp)         # 4-byte Spill
	movq	%r14, 64(%rsp)          # 8-byte Spill
	movq	%rbx, 56(%rsp)          # 8-byte Spill
	movq	%r10, 48(%rsp)          # 8-byte Spill
	movq	%r11, 40(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	336(%rsp), %r9          # 8-byte Reload
	movq	160(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	336(%rsp), %r9          # 8-byte Reload
	movq	40(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	40(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	192(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	312(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1316(%rsp), %eax        # 4-byte Reload
	cltd
	movl	100(%rsp), %ebp         # 4-byte Reload
	idivl	%ebp
	movl	%eax, %edx
                                        # kill: RDX<def> EDX<kill>
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 36(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp271:
	#DEBUG_VALUE: kf_factor:n <- [RSP+36]
	.loc	2 327 0                 # kiss_fft.c:327:0
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp272:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+24]
	movq	216(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	208(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movl	100(%rsp), %eax         # 4-byte Reload
	movl	%eax, (%rcx)
	.loc	2 328 0                 # kiss_fft.c:328:0
	movq	272(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	248(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	240(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp273:
	#DEBUG_VALUE: kf_factor:facbuf <- [RSP+16]
	movq	272(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, 4(%rcx)
	.loc	2 329 0                 # kiss_fft.c:329:0
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	36(%rsp), %eax          # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	36(%rsp), %eax          # 4-byte Reload
	cmpl	$1, %eax
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	328(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 15(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	128(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	128(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	336(%rsp), %rdi         # 8-byte Reload
	movq	336(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	movq	136(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	16(%rsp), %rcx          # 8-byte Reload
	movl	100(%rsp), %ebp         # 4-byte Reload
	movl	36(%rsp), %r13d         # 4-byte Reload
	movq	%rcx, 1328(%rsp)        # 8-byte Spill
	movl	%ebp, 1324(%rsp)        # 4-byte Spill
	movl	%r13d, 1320(%rsp)       # 4-byte Spill
	jne	.LBB8_1
.Ltmp274:
# BB#7:
	movabsq	$330, %rdi              # imm = 0x14A
	leaq	.L.str79160, %rsi
	leaq	.L.str1899, %rdx
	leaq	.L.str35116, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 330 0                 # kiss_fft.c:330:0
	movl	$1, (%rsp)
	movl	%eax, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$1608, %rsp             # imm = 0x648
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp275:
.Ltmp276:
	.size	kf_factor, .Ltmp276-kf_factor
.Lfunc_end8:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_work,@function
kf_work:                                # @kf_work
	.cfi_startproc
.Lfunc_begin9:
	.loc	2 246 0                 # kiss_fft.c:246:0
# BB#0:
	pushq	%rbp
.Ltmp284:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp285:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp286:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp287:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp288:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp289:
	.cfi_def_cfa_offset 56
	subq	$2984, %rsp             # imm = 0xBA8
.Ltmp290:
	.cfi_def_cfa_offset 3040
.Ltmp291:
	.cfi_offset %rbx, -56
.Ltmp292:
	.cfi_offset %r12, -48
.Ltmp293:
	.cfi_offset %r13, -40
.Ltmp294:
	.cfi_offset %r14, -32
.Ltmp295:
	.cfi_offset %r15, -24
.Ltmp296:
	.cfi_offset %rbp, -16
	#DEBUG_VALUE: kf_work:Fout <- RDI
	movabsq	$1, %rax
	leaq	.L.str1697, %r10
	movabsq	$0, %r11
	leaq	.L.str485, %rbx
	movabsq	$2, %r14
	leaq	.L.str132, %r15
	movabsq	$3, %r12
	leaq	.L.str131, %r13
	movabsq	$276, %rbp              # imm = 0x114
	movq	%rax, 2976(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 2968(%rsp)        # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	leaq	.L.str130, %rax
	movl	%ecx, 2956(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 2952(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 2944(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2936(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2928(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 2920(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2912(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2904(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2896(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 2888(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 2872(%rsp)        # 8-byte Spill
	movabsq	$250, %rax
	movq	%rax, 2864(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2856(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 2848(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2840(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 2832(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2824(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 2816(%rsp)        # 8-byte Spill
	movabsq	$249, %rax
	movq	%rax, 2808(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2800(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 2792(%rsp)        # 8-byte Spill
	leaq	.L.str128, %rax
	movq	%rax, 2784(%rsp)        # 8-byte Spill
	movabsq	$248, %rax
	movq	%rax, 2776(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 2768(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 2760(%rsp)        # 8-byte Spill
	leaq	.L.str121, %rax
	movq	%rax, 2752(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	leaq	.L.str139, %rax
	.loc	2 239 0 prologue_end    # kiss_fft.c:239:0
.Ltmp297:
	movq	%rax, 2736(%rsp)        # 8-byte Spill
	movq	2768(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2728(%rsp)        # 8-byte Spill
.Ltmp298:
	#DEBUG_VALUE: kf_work:Fout <- [RSP+2728]
	movq	%rax, %rdi
	movq	2896(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2720(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	2728(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2712(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	2976(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 2708(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	2880(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2696(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2688(%rsp)         # 8-byte Spill
	movq	%r11, %r9
	movq	%rbx, (%rsp)
	movq	%r13, 2680(%rsp)        # 8-byte Spill
	movq	%rbx, 2672(%rsp)        # 8-byte Spill
	movq	%r14, 2664(%rsp)        # 8-byte Spill
	movq	%r15, 2656(%rsp)        # 8-byte Spill
	movq	%r12, 2648(%rsp)        # 8-byte Spill
	movq	%rbp, 2640(%rsp)        # 8-byte Spill
	movq	%r10, 2632(%rsp)        # 8-byte Spill
	movq	%r11, 2624(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2720(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2956(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2784(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2760(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	#DEBUG_VALUE: kf_work:Fout <- [RSP+2728]
	#DEBUG_VALUE: kf_work:f <- [RSP+2720]
	#DEBUG_VALUE: kf_work:fstride <- [RSP+2712]
	#DEBUG_VALUE: kf_work:in_stride <- [RSP+2956]
	#DEBUG_VALUE: kf_work:factors <- [RSP+2696]
	#DEBUG_VALUE: kf_work:st <- [RSP+2688]
.Ltmp299:
	#DEBUG_VALUE: kf_work:Fout_beg <- [RSP+2728]
	.loc	2 248 0                 # kiss_fft.c:248:0
	movq	2776(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2816(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rdx        # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2784(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2696(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2816(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp300:
	#DEBUG_VALUE: kf_work:factors <- [RSP+2616]
	movq	2776(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2832(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2784(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2696(%rsp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 2612(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2832(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp301:
	#DEBUG_VALUE: kf_work:p <- [RSP+2612]
	.loc	2 249 0                 # kiss_fft.c:249:0
	movq	2808(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2792(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2664(%rsp), %rdx        # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2784(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2696(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2792(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp302:
	#DEBUG_VALUE: kf_work:factors <- [RSP+2600]
	movq	2808(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2920(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2616(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2816(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2696(%rsp), %rax        # 8-byte Reload
	movl	4(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 2596(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2920(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp303:
	#DEBUG_VALUE: kf_work:m <- [RSP+2596]
	.loc	2 250 0                 # kiss_fft.c:250:0
	movq	2864(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2848(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2612(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2832(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2920(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %esi        # 4-byte Reload
	movl	2612(%rsp), %edi        # 4-byte Reload
	imull	%edi, %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rax        # 8-byte Reload
	movl	%esi, 2592(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2848(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2864(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2592(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2848(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2592(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2584(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2864(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2888(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2880(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2584(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	2728(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2896(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2576(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2888(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp304:
	#DEBUG_VALUE: kf_work:Fout_end <- [RSP+2576]
	.loc	2 276 0                 # kiss_fft.c:276:0
	movq	2640(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2632(%rsp), %rcx        # 8-byte Reload
	movq	2904(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rdx        # 8-byte Reload
	movq	2624(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2928(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2920(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %esi        # 4-byte Reload
	cmpl	$1, %esi
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	2936(%rsp), %rdi        # 8-byte Reload
	movq	2976(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2575(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2640(%rsp), %rdi        # 8-byte Reload
	movq	2968(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2944(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movl	2952(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2648(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2680(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2664(%rsp), %rdi        # 8-byte Reload
	movq	2624(%rsp), %rsi        # 8-byte Reload
	movq	2624(%rsp), %rdx        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2656(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2575(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	2976(%rsp), %rdi        # 8-byte Reload
	movq	2976(%rsp), %rsi        # 8-byte Reload
	movq	2976(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2624(%rsp), %r9         # 8-byte Reload
	movq	2672(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2575(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB9_2
.Ltmp305:
# BB#1:                                 # %.preheader3
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str135, %r8
	leaq	.L.str485, %rdx
	movabsq	$287, %rsi              # imm = 0x11F
	leaq	.L.str120, %rdi
	leaq	.L.str132, %r9
	leaq	.L.str134, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str25106, %r12
	movabsq	$32, %r13
	movq	%rax, 2560(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 2552(%rsp)        # 8-byte Spill
	movabsq	$289, %rax              # imm = 0x121
	movq	%rax, 2544(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2536(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 2528(%rsp)        # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 2520(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 2512(%rsp)        # 8-byte Spill
	movabsq	$288, %rax              # imm = 0x120
	movq	%rax, 2504(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2496(%rsp)        # 8-byte Spill
	leaq	.L.str121, %rax
	movq	%rax, 2488(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 2480(%rsp)        # 8-byte Spill
	leaq	.L.str104, %rax
	movq	%rax, 2472(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	.loc	2 287 0                 # kiss_fft.c:287:0
.Ltmp306:
	movq	%rdi, 2464(%rsp)        # 8-byte Spill
	movq	%rsi, %rdi
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	movq	2464(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2448(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 2440(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2472(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2432(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2536(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2424(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2416(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2408(%rsp)        # 8-byte Spill
	movl	%ebp, 2404(%rsp)        # 4-byte Spill
	movq	%r15, 2392(%rsp)        # 8-byte Spill
	movq	%r12, 2384(%rsp)        # 8-byte Spill
	movq	%r13, 2376(%rsp)        # 8-byte Spill
	movl	%ebx, 2372(%rsp)        # 4-byte Spill
	movq	%r10, 2360(%rsp)        # 8-byte Spill
	movq	%r11, 2352(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	2612(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2376(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2612(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2472(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2344(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2448(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2416(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rcx        # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movl	2372(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	2344(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2472(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2344(%rsp), %rax        # 8-byte Reload
	movq	2712(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 288 0                 # kiss_fft.c:288:0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2480(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2336(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2504(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2416(%rsp), %rdx        # 8-byte Reload
	movq	2520(%rsp), %rcx        # 8-byte Reload
	movq	2536(%rsp), %r8         # 8-byte Reload
	movl	2372(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2956(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2376(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2488(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2956(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2520(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2328(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2504(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2416(%rsp), %rdx        # 8-byte Reload
	movq	2528(%rsp), %rcx        # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movl	2372(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	2328(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2520(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2328(%rsp), %rax        # 8-byte Reload
	movq	2712(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 289 0                 # kiss_fft.c:289:0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2320(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2544(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2416(%rsp), %rdx        # 8-byte Reload
	movq	2384(%rsp), %rcx        # 8-byte Reload
	movq	2536(%rsp), %r8         # 8-byte Reload
	movl	2372(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2376(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 287 0                 # kiss_fft.c:287:0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2392(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2448(%rsp), %rdi        # 8-byte Reload
	movq	2464(%rsp), %rsi        # 8-byte Reload
	movq	2416(%rsp), %rdx        # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2372(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2560(%rsp), %rdi        # 8-byte Reload
	movq	2432(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2424(%rsp), %r8         # 8-byte Reload
	movq	2432(%rsp), %r9         # 8-byte Reload
	movq	2440(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2720(%rsp), %rax        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	movq	%rcx, 2296(%rsp)        # 8-byte Spill
	jmp	.LBB9_4
.Ltmp307:
.LBB9_2:                                # %.preheader
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str137, %r8
	leaq	.L.str485, %rdx
	movabsq	$278, %rdi              # imm = 0x116
	leaq	.L.str120, %rsi
	leaq	.L.str131, %r9
	leaq	.L.str136, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str28109, %r12
	leaq	.L.str107, %r13
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	movabsq	$279, %rax              # imm = 0x117
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	leaq	.L.str121, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	.loc	2 279 0                 # kiss_fft.c:279:0
.Ltmp308:
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	movq	2272(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2232(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2224(%rsp)        # 8-byte Spill
	movq	%rdx, 2216(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	%rcx, 2208(%rsp)        # 8-byte Spill
	movq	%r13, %rcx
	movq	2240(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2200(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2192(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2184(%rsp)        # 8-byte Spill
	movl	%ebp, 2180(%rsp)        # 4-byte Spill
	movq	%r15, 2168(%rsp)        # 8-byte Spill
	movq	%r13, 2160(%rsp)        # 8-byte Spill
	movq	%r12, 2152(%rsp)        # 8-byte Spill
	movl	%ebx, 2148(%rsp)        # 4-byte Spill
	movq	%r10, 2136(%rsp)        # 8-byte Spill
	movq	%r11, 2128(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movl	2956(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2956(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	movq	2184(%rsp), %rdi        # 8-byte Reload
	movq	2168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2160(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2272(%rsp), %rdi        # 8-byte Reload
	movq	2224(%rsp), %rsi        # 8-byte Reload
	movq	2192(%rsp), %rdx        # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movl	2148(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2128(%rsp), %rdi        # 8-byte Reload
	movq	2168(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2168(%rsp), %rsi        # 8-byte Reload
	movq	2120(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2160(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	2712(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	.loc	2 278 0                 # kiss_fft.c:278:0
	movq	2184(%rsp), %rdi        # 8-byte Reload
	movq	2168(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2232(%rsp), %rdi        # 8-byte Reload
	movq	2224(%rsp), %rsi        # 8-byte Reload
	movq	2192(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2128(%rsp), %r8         # 8-byte Reload
	movl	2148(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2288(%rsp), %rdi        # 8-byte Reload
	movq	2208(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2200(%rsp), %r8         # 8-byte Reload
	movq	2208(%rsp), %r9         # 8-byte Reload
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2720(%rsp), %rax        # 8-byte Reload
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	movq	%rcx, 2096(%rsp)        # 8-byte Spill
.LBB9_3:                                # =>This Inner Loop Header: Depth=1
	movq	2096(%rsp), %rax        # 8-byte Reload
	movq	2104(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str43124, %rsi
	movabsq	$0, %rdi
	leaq	.L.str485, %r8
	movabsq	$2, %r9
	leaq	.L.str137, %r10
	movabsq	$3, %r11
	leaq	.L.str145, %rbx
	movabsq	$280, %r14              # imm = 0x118
	leaq	.L.str120, %r15
	leaq	.L.str144, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 2064(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 2056(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2048(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rax
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2032(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2024(%rsp)        # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	leaq	.L.str138, %rax
	movq	%rax, 2008(%rsp)        # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 2000(%rsp)        # 8-byte Spill
	movabsq	$279, %rax              # imm = 0x117
	movq	%rax, 1992(%rsp)        # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 1984(%rsp)        # 8-byte Spill
	movabsq	$278, %rax              # imm = 0x116
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	leaq	.L.str143, %rax
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1960(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1952(%rsp)        # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str131, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str139, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	movq	1904(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1880(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1872(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 1864(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	2008(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1856(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1896(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1848(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 1840(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1832(%rsp)        # 8-byte Spill
	movq	%r12, 1824(%rsp)        # 8-byte Spill
	movl	%ebp, 1820(%rsp)        # 4-byte Spill
	movl	%r13d, 1816(%rsp)       # 4-byte Spill
	movq	%r14, 1808(%rsp)        # 8-byte Spill
	movq	%rbx, 1800(%rsp)        # 8-byte Spill
	movq	%r10, 1792(%rsp)        # 8-byte Spill
	movq	%r11, 1784(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2720(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1888(%rsp), %r8         # 8-byte Reload
	movq	1864(%rsp), %r9         # 8-byte Reload
	movq	1912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1880(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movq	1864(%rsp), %r9         # 8-byte Reload
	movq	1792(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1856(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1792(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1904(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	1896(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1920(%rsp), %r8         # 8-byte Reload
	movq	1864(%rsp), %r9         # 8-byte Reload
	movq	1912(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1880(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	1864(%rsp), %r9         # 8-byte Reload
	movq	1792(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2088(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1792(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1936(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1856(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1856(%rsp), %rax        # 8-byte Reload
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	1936(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2088(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	1952(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1776(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1856(%rsp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1864(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1760(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1984(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1768(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1760(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1984(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2088(%rsp), %rax        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, (%rax)
	.loc	2 279 0                 # kiss_fft.c:279:0
	movq	1992(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2024(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2112(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2000(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1856(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2112(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	1856(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1864(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1752(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2016(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp309:
	#DEBUG_VALUE: kf_work:f <- [RSP+1752]
	.loc	2 280 0                 # kiss_fft.c:280:0
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	2064(%rsp), %rcx        # 8-byte Reload
	movq	2024(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1864(%rsp), %rdx        # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2088(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2088(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp310:
	#DEBUG_VALUE: kf_work:Fout <- [RSP+1744]
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	2048(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	2576(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2056(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2072(%rsp), %rsi        # 8-byte Reload
	movq	1744(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1744(%rsp), %rax        # 8-byte Reload
	movq	2576(%rsp), %rcx        # 8-byte Reload
	cmpq	%rcx, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2080(%rsp), %rdi        # 8-byte Reload
	movq	1864(%rsp), %rsi        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1872(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1743(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	1832(%rsp), %rsi        # 8-byte Reload
	movq	1792(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	1840(%rsp), %r8         # 8-byte Reload
	movl	1820(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1880(%rsp), %rsi        # 8-byte Reload
	movq	1880(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1880(%rsp), %rsi        # 8-byte Reload
	movq	1880(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1792(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1743(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1864(%rsp), %rsi        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1872(%rsp), %r8         # 8-byte Reload
	movq	1880(%rsp), %r9         # 8-byte Reload
	movq	1848(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1743(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1744(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2104(%rsp)        # 8-byte Spill
	movq	%rdx, 2096(%rsp)        # 8-byte Spill
	jne	.LBB9_5
	jmp	.LBB9_3
.Ltmp311:
.LBB9_4:                                # =>This Inner Loop Header: Depth=1
	movq	2296(%rsp), %rax        # 8-byte Reload
	movq	2304(%rsp), %rcx        # 8-byte Reload
	movabsq	$6, %rdi
	movabsq	$64, %rdx
	movabsq	$1, %rsi
	leaq	.L.str117, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$5, %r11
	leaq	.L.str788, %rbx
	movabsq	$4, %r14
	movabsq	$32, %r15
	leaq	.L.str121, %r12
	movabsq	$3, %r13
	leaq	.L.str19100, %rbp
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	movabsq	$2, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str146, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str148, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	movabsq	$7, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	kf_work, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	movabsq	$287, %rax              # imm = 0x11F
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str135, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str149, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1648(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1644(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str53134, %rax
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str132, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str147, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	leaq	.L.str139, %rax
	.loc	2 287 0                 # kiss_fft.c:287:0
.Ltmp312:
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	movq	1592(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1560(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1680(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1556(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1664(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1544(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1712(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1584(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1528(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1644(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1520(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1512(%rsp)        # 8-byte Spill
	movq	%rbp, 1504(%rsp)        # 8-byte Spill
	movq	%r12, 1496(%rsp)        # 8-byte Spill
	movq	%r13, 1488(%rsp)        # 8-byte Spill
	movq	%r14, 1480(%rsp)        # 8-byte Spill
	movq	%rbx, 1472(%rsp)        # 8-byte Spill
	movq	%r10, 1464(%rsp)        # 8-byte Spill
	movq	%r11, 1456(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	2720(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1648(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1520(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1576(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1592(%rsp), %rdi        # 8-byte Reload
	movq	1680(%rsp), %rsi        # 8-byte Reload
	movq	1664(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movl	1644(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1608(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1648(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1520(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1616(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1728(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1672(%rsp), %rdi        # 8-byte Reload
	movq	1680(%rsp), %rsi        # 8-byte Reload
	movq	1664(%rsp), %rdx        # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movl	1644(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1696(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1688(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1648(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1728(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1504(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2956(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1480(%rsp), %rdi        # 8-byte Reload
	movq	1512(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1456(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	2600(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1544(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1528(%rsp), %r8         # 8-byte Reload
	movq	1520(%rsp), %r9         # 8-byte Reload
	movq	1464(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1728(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdx        # 8-byte Reload
	movl	2956(%rsp), %ecx        # 4-byte Reload
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	2688(%rsp), %r9         # 8-byte Reload
	callq	kf_work
	movabsq	$1, %rdx
	leaq	.L.str54135, %rsi
	movabsq	$0, %rdi
	leaq	.L.str485, %r8
	movabsq	$2, %r9
	leaq	.L.str135, %r10
	movabsq	$3, %r11
	leaq	.L.str145, %rbx
	movabsq	$289, %r14              # imm = 0x121
	leaq	.L.str120, %r15
	leaq	.L.str150, %rcx
	movl	$0, %eax
	movl	$1, %ebp
	movabsq	$19134, %r12            # imm = 0x4ABE
	movabsq	$64, %r13
	movq	%rcx, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str53134, %rcx
	movq	%rcx, 1440(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rcx
	movq	%rcx, 1432(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str148, %rcx
	movq	%rcx, 1416(%rsp)        # 8-byte Spill
	leaq	.L.str25106, %rcx
	movq	%rcx, 1408(%rsp)        # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str147, %rcx
	movq	%rcx, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str146, %rcx
	movq	%rcx, 1384(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rcx
	movq	%rcx, 1376(%rsp)        # 8-byte Spill
	movabsq	$288, %rcx              # imm = 0x120
	.loc	2 288 0                 # kiss_fft.c:288:0
	movq	%rdi, 1368(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1360(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 1352(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1344(%rsp)         # 8-byte Spill
	movq	1400(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1336(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1332(%rsp)        # 4-byte Spill
	movl	%ebp, 1328(%rsp)        # 4-byte Spill
	movq	%r12, 1320(%rsp)        # 8-byte Spill
	movq	%r13, 1312(%rsp)        # 8-byte Spill
	movq	%r15, 1304(%rsp)        # 8-byte Spill
	movq	%r10, 1296(%rsp)        # 8-byte Spill
	movq	%r11, 1288(%rsp)        # 8-byte Spill
	movq	%rbx, 1280(%rsp)        # 8-byte Spill
	movq	%r14, 1272(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	2320(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2320(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1536(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1320(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1264(%rsp)        # 8-byte Spill
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp313:
	#DEBUG_VALUE: kf_work:f <- [RSP+1264]
	.loc	2 289 0                 # kiss_fft.c:289:0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	1400(%rsp), %r8         # 8-byte Reload
	movl	1332(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	2312(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1408(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	1728(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2312(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1728(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1320(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1256(%rsp)        # 8-byte Spill
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp314:
	#DEBUG_VALUE: kf_work:Fout <- [RSP+1256]
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movl	1332(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	2576(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1432(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	1256(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %rdx        # 8-byte Reload
	cmpq	%rdx, %rcx
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	1320(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 1255(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1304(%rsp), %rsi        # 8-byte Reload
	movq	1296(%rsp), %rdx        # 8-byte Reload
	movq	1448(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1332(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1368(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1255(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	1352(%rsp), %rsi        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1360(%rsp), %r8         # 8-byte Reload
	movq	1368(%rsp), %r9         # 8-byte Reload
	movq	1344(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	1255(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1256(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2304(%rsp)        # 8-byte Spill
	movq	%rdx, 2296(%rsp)        # 8-byte Spill
	jne	.LBB9_5
	jmp	.LBB9_4
.Ltmp315:
.LBB9_5:                                # %.loopexit
	.loc	2 295 0                 # kiss_fft.c:295:0
	movq	%rsp, %rax
	movl	$1, (%rax)
	movl	$.L.str120, %ecx
	movl	%ecx, %esi
	movl	$.L.str145, %ecx
	movl	%ecx, %edx
	movl	$.L.str151, %ecx
                                        # kill: RCX<def> ECX<kill>
	movl	$295, %edi              # imm = 0x127
                                        # kill: RDI<def> EDI<kill>
	movl	$3, %r8d
	movl	%r8d, %eax
	xorl	%r8d, %r8d
	movl	%r8d, 1248(%rsp)        # 4-byte Spill
	movq	%rax, %r8
	movl	1248(%rsp), %r9d        # 4-byte Reload
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str152, %r9d
	movl	%r9d, %r8d
	movl	$10, %r9d
	movl	%r9d, %edi
	movl	$1, %r9d
	movl	%r9d, %eax
	movl	1248(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ecx
	movq	%rcx, %rsi
	movq	%rcx, %rdx
	movq	%rcx, 1232(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str384, %r10d
	movl	%r10d, %eax
	movl	$9, %r10d
	movl	%r10d, %edi
	movl	$32, %r10d
	movl	%r10d, %ecx
	movl	$5, %r10d
	movl	%r10d, %edx
	movq	%rcx, %rsi
	movq	%rdx, 1216(%rsp)        # 8-byte Spill
	movq	1232(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	%rax, %r8
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str153, %r10d
	movl	%r10d, %r8d
	movl	$8, %r10d
	movl	%r10d, %edi
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1232(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$7, %r10d
	movl	%r10d, %edi
	movl	$4, %r10d
	movl	%r10d, %eax
	movq	1208(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str154, %r10d
	movl	%r10d, %r8d
	movl	$6, %r10d
	movl	%r10d, %edi
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1232(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	1208(%rsp), %rsi        # 8-byte Reload
	movq	1240(%rsp), %rdx        # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str155, %r10d
	movl	%r10d, %r8d
	movq	1192(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1232(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$2, %r10d
	movl	%r10d, %eax
	movq	1240(%rsp), %rdi        # 8-byte Reload
	movq	1208(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str156, %r10d
	movl	%r10d, %r8d
	movq	1184(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1232(%rsp), %rdx        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movl	2612(%rsp), %r10d       # 4-byte Reload
	movl	%r10d, %r11d
	movl	%r11d, %edx
	movq	%rsp, %rax
	movq	$.L.str485, (%rax)
	movl	$.L.str687, %r11d
	movl	%r11d, %r8d
	movq	1224(%rsp), %rdi        # 8-byte Reload
	movq	1208(%rsp), %rsi        # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_int
	movl	2612(%rsp), %r10d       # 4-byte Reload
	addl	$-2, %r10d
	movl	%r10d, %eax
	subl	$3, %r10d
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	movl	%r10d, 1172(%rsp)       # 4-byte Spill
	ja	.LBB9_10
# BB#12:                                # %.loopexit
	movq	1176(%rsp), %rax        # 8-byte Reload
	movq	.LJTI9_0(,%rax,8), %rcx
	jmpq	*%rcx
.LBB9_6:
	movabsq	$4, %rdi
	movabsq	$32, %rsi
	movabsq	$1, %rax
	leaq	.L.str889, %r8
	movabsq	$0, %rcx
	leaq	.L.str485, %rdx
	movabsq	$3, %r9
	movabsq	$64, %r10
	leaq	.L.str117, %r11
	movabsq	$2, %rbx
	leaq	.L.str133, %r14
	leaq	.L.str129, %r15
	movabsq	$5, %r12
	leaq	kf_bfly2, %r13
	leaq	.L.str158, %rbp
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	movabsq	$296, %rax              # imm = 0x128
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str155, %rax
	movq	%rax, 1136(%rsp)        # 8-byte Spill
	leaq	.L.str157, %rax
	movq	%rax, 1128(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 1120(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1116(%rsp)        # 4-byte Spill
	movl	$1, %esi
	.loc	2 296 0                 # kiss_fft.c:296:0
.Ltmp316:
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	movq	1152(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1096(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1144(%rsp), %rax        # 8-byte Reload
	movl	%esi, 1092(%rsp)        # 4-byte Spill
	movq	%rax, %rsi
	movq	1136(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1080(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1128(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1072(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1104(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1064(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1116(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1056(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 1048(%rsp)        # 8-byte Spill
	movq	%r13, 1040(%rsp)        # 8-byte Spill
	movq	%r14, 1032(%rsp)        # 8-byte Spill
	movq	%r15, 1024(%rsp)        # 8-byte Spill
	movq	%r12, 1016(%rsp)        # 8-byte Spill
	movq	%rbx, 1008(%rsp)        # 8-byte Spill
	movq	%r10, 1000(%rsp)        # 8-byte Spill
	movq	%r11, 992(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	1016(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	1040(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	1072(%rsp), %r9         # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	1072(%rsp), %r9         # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1008(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movq	1072(%rsp), %r9         # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	1000(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	1072(%rsp), %r9         # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2596(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	1096(%rsp), %rdi        # 8-byte Reload
	movq	1120(%rsp), %rsi        # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1064(%rsp), %r8         # 8-byte Reload
	movq	1072(%rsp), %r9         # 8-byte Reload
	movq	1080(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movl	2596(%rsp), %ecx        # 4-byte Reload
	callq	kf_bfly2
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str160, %r8
	leaq	.L.str485, %rdi
	movabsq	$296, %r9               # imm = 0x128
	leaq	.L.str120, %r10
	leaq	.L.str155, %r11
	leaq	.L.str159, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 984(%rsp)         # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 976(%rsp)         # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 968(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 960(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 956(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	976(%rsp), %rsi         # 8-byte Reload
	movq	976(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	976(%rsp), %r9          # 8-byte Reload
	movq	984(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_7:
	movabsq	$4, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str57138, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %r8
	movabsq	$3, %r9
	leaq	.L.str117, %r10
	movabsq	$2, %r11
	leaq	.L.str133, %rbx
	leaq	.L.str129, %r14
	movabsq	$5, %r15
	leaq	kf_bfly3, %r12
	leaq	.L.str162, %r13
	movabsq	$297, %rbp              # imm = 0x129
	movq	%rax, 944(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	leaq	.L.str154, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str161, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 912(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 908(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 896(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	.loc	2 297 0                 # kiss_fft.c:297:0
	movq	%rdi, 864(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	%rax, 856(%rsp)         # 8-byte Spill
	movq	936(%rsp), %rax         # 8-byte Reload
	movl	%esi, 852(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	928(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 840(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	840(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 832(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%r8, 824(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	908(%rsp), %eax         # 4-byte Reload
	movq	%r9, 816(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 808(%rsp)         # 8-byte Spill
	movq	%r15, 800(%rsp)         # 8-byte Spill
	movq	%r12, 792(%rsp)         # 8-byte Spill
	movq	%r13, 784(%rsp)         # 8-byte Spill
	movq	%r14, 776(%rsp)         # 8-byte Spill
	movq	%rbx, 768(%rsp)         # 8-byte Spill
	movq	%r10, 760(%rsp)         # 8-byte Spill
	movq	%r11, 752(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movl	2596(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %eax        # 4-byte Reload
	movslq	%eax, %rcx
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 744(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	808(%rsp), %rdi         # 8-byte Reload
	movq	936(%rsp), %rsi         # 8-byte Reload
	movq	928(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	792(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	832(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	776(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	752(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	768(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	816(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	944(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movq	912(%rsp), %r9          # 8-byte Reload
	movq	824(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	callq	kf_bfly3
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str160, %r8
	leaq	.L.str485, %rsi
	movabsq	$297, %rdi              # imm = 0x129
	leaq	.L.str120, %r9
	leaq	.L.str154, %r10
	leaq	.L.str163, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rsi, 736(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 728(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 720(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 712(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 708(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	720(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_8:
	movabsq	$4, %rdi
	movabsq	$64, %rax
	movabsq	$1, %rcx
	leaq	.L.str164, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %r8
	movabsq	$3, %r9
	leaq	.L.str117, %r10
	movabsq	$2, %r11
	leaq	.L.str133, %rbx
	leaq	.L.str129, %r14
	movabsq	$5, %r15
	leaq	kf_bfly4, %r12
	leaq	.L.str166, %r13
	movabsq	$298, %rbp              # imm = 0x12A
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str153, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str165, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 664(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 660(%rsp)         # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 648(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 640(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	.loc	2 298 0                 # kiss_fft.c:298:0
	movq	%rdi, 616(%rsp)         # 8-byte Spill
	movq	%rbp, %rdi
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movq	688(%rsp), %rax         # 8-byte Reload
	movl	%esi, 604(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	680(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 592(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 584(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	608(%rsp), %rax         # 8-byte Reload
	movq	%r8, 576(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	660(%rsp), %eax         # 4-byte Reload
	movq	%r9, 568(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 560(%rsp)         # 8-byte Spill
	movq	%r15, 552(%rsp)         # 8-byte Spill
	movq	%r12, 544(%rsp)         # 8-byte Spill
	movq	%r13, 536(%rsp)         # 8-byte Spill
	movq	%r14, 528(%rsp)         # 8-byte Spill
	movq	%rbx, 520(%rsp)         # 8-byte Spill
	movq	%r10, 512(%rsp)         # 8-byte Spill
	movq	%r11, 504(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movl	2596(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	632(%rsp), %rsi         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2596(%rsp), %eax        # 4-byte Reload
	movslq	%eax, %rcx
	movq	640(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	584(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 496(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	592(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	680(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	660(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	552(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	584(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	568(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	696(%rsp), %rsi         # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	592(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	movq	576(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	callq	kf_bfly4
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str160, %r8
	leaq	.L.str485, %rsi
	movabsq	$298, %rdi              # imm = 0x12A
	leaq	.L.str120, %r9
	leaq	.L.str153, %r10
	leaq	.L.str167, %r11
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rsi, 488(%rsp)         # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 480(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	%rcx, 472(%rsp)         # 8-byte Spill
	movq	%r11, %rcx
	movq	%r8, 464(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 460(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	472(%rsp), %rdi         # 8-byte Reload
	movq	480(%rsp), %rsi         # 8-byte Reload
	movq	480(%rsp), %rdx         # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	464(%rsp), %r8          # 8-byte Reload
	movq	480(%rsp), %r9          # 8-byte Reload
	movq	488(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_9:
	movabsq	$4, %rdi
	movabsq	$32, %rsi
	movabsq	$1, %rax
	leaq	.L.str889, %r8
	movabsq	$0, %rcx
	leaq	.L.str485, %rdx
	movabsq	$3, %r9
	movabsq	$64, %r10
	leaq	.L.str117, %r11
	movabsq	$2, %rbx
	leaq	.L.str133, %r14
	leaq	.L.str129, %r15
	movabsq	$5, %r12
	leaq	kf_bfly5, %r13
	leaq	.L.str169, %rbp
	movq	%rax, 448(%rsp)         # 8-byte Spill
	movabsq	$299, %rax              # imm = 0x12B
	movq	%rax, 440(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	leaq	.L.str152, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	leaq	.L.str168, %rax
	movq	%rax, 416(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 408(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 404(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	2 299 0                 # kiss_fft.c:299:0
	movq	%rax, 392(%rsp)         # 8-byte Spill
	movq	440(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 384(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	432(%rsp), %rax         # 8-byte Reload
	movl	%esi, 380(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	424(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 368(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	416(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 360(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	392(%rsp), %rax         # 8-byte Reload
	movq	%r8, 352(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	404(%rsp), %eax         # 4-byte Reload
	movq	%r9, 344(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 336(%rsp)         # 8-byte Spill
	movq	%r13, 328(%rsp)         # 8-byte Spill
	movq	%r14, 320(%rsp)         # 8-byte Spill
	movq	%r15, 312(%rsp)         # 8-byte Spill
	movq	%r12, 304(%rsp)         # 8-byte Spill
	movq	%rbx, 296(%rsp)         # 8-byte Spill
	movq	%r10, 288(%rsp)         # 8-byte Spill
	movq	%r11, 280(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	360(%rsp), %r9          # 8-byte Reload
	movq	368(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	448(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	360(%rsp), %r9          # 8-byte Reload
	movq	368(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	296(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	360(%rsp), %r9          # 8-byte Reload
	movq	368(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	288(%rsp), %rsi         # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	360(%rsp), %r9          # 8-byte Reload
	movq	368(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2596(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	408(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	352(%rsp), %r8          # 8-byte Reload
	movq	360(%rsp), %r9          # 8-byte Reload
	movq	368(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movl	2596(%rsp), %ecx        # 4-byte Reload
	callq	kf_bfly5
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str160, %r8
	leaq	.L.str485, %rdi
	movabsq	$299, %r9               # imm = 0x12B
	leaq	.L.str120, %r10
	leaq	.L.str152, %r11
	leaq	.L.str170, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 272(%rsp)         # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 264(%rsp)         # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 256(%rsp)         # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 248(%rsp)          # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 244(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	256(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	256(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	272(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	jmp	.LBB9_11
.LBB9_10:
	movabsq	$5, %rdi
	movabsq	$32, %rax
	movabsq	$1, %rcx
	leaq	.L.str687, %r8
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$4, %r9
	leaq	.L.str889, %r10
	movabsq	$3, %r11
	movabsq	$64, %rbx
	leaq	.L.str117, %r14
	movabsq	$2, %r15
	leaq	.L.str133, %r12
	leaq	.L.str129, %r13
	movabsq	$6, %rbp
	movq	%rax, 232(%rsp)         # 8-byte Spill
	leaq	kf_bfly_generic, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str172, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	movabsq	$300, %rax              # imm = 0x12C
	movq	%rax, 208(%rsp)         # 8-byte Spill
	leaq	.L.str120, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	.L.str156, %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	leaq	.L.str171, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	movabsq	$49, %rax
	movq	%rsi, 176(%rsp)         # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 172(%rsp)         # 4-byte Spill
	movl	$1, %esi
	.loc	2 300 0                 # kiss_fft.c:300:0
	movq	%rax, 160(%rsp)         # 8-byte Spill
	movq	208(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 152(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	200(%rsp), %rax         # 8-byte Reload
	movl	%esi, 148(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 136(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	184(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 128(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	160(%rsp), %rax         # 8-byte Reload
	movq	%r8, 120(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	172(%rsp), %eax         # 4-byte Reload
	movq	%r9, 112(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%rbp, 104(%rsp)         # 8-byte Spill
	movq	%r15, 96(%rsp)          # 8-byte Spill
	movq	%r14, 88(%rsp)          # 8-byte Spill
	movq	%r12, 80(%rsp)          # 8-byte Spill
	movq	%r13, 72(%rsp)          # 8-byte Spill
	movq	%rbx, 64(%rsp)          # 8-byte Spill
	movq	%r10, 56(%rsp)          # 8-byte Spill
	movq	%r11, 48(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	104(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	72(%rsp), %r8           # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	48(%rsp), %rdi          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	88(%rsp), %r8           # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movl	2596(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	112(%rsp), %rdi         # 8-byte Reload
	movq	232(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	56(%rsp), %r8           # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	2612(%rsp), %eax        # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	232(%rsp), %rsi         # 8-byte Reload
	movq	128(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	136(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2728(%rsp), %rdi        # 8-byte Reload
	movq	2712(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movl	2596(%rsp), %ecx        # 4-byte Reload
	movl	2612(%rsp), %r8d        # 4-byte Reload
	callq	kf_bfly_generic
	movabsq	$1, %rdx
	movabsq	$0, %rsi
	leaq	.L.str160, %r8
	leaq	.L.str485, %rdi
	movabsq	$300, %r9               # imm = 0x12C
	leaq	.L.str120, %r10
	leaq	.L.str156, %r11
	leaq	.L.str173, %rcx
	movabsq	$2, %rbx
	movl	$0, %eax
	movl	$1, %ebp
	movq	%rdi, 40(%rsp)          # 8-byte Spill
	movq	%r9, %rdi
	movq	%rsi, 32(%rsp)          # 8-byte Spill
	movq	%r10, %rsi
	movq	%rdx, 24(%rsp)          # 8-byte Spill
	movq	%r11, %rdx
	movq	%r8, 16(%rsp)           # 8-byte Spill
	movq	%rbx, %r8
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%ebp, 12(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	32(%rsp), %r9           # 8-byte Reload
	movq	40(%rsp), %r10          # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp317:
.LBB9_11:
	movabsq	$302, %rdi              # imm = 0x12E
	leaq	.L.str120, %rsi
	leaq	.L.str160, %rdx
	leaq	.L.str174, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 302 0                 # kiss_fft.c:302:0
	movl	$1, (%rsp)
	movl	%eax, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$2984, %rsp             # imm = 0xBA8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp318:
.Ltmp319:
	.size	kf_work, .Ltmp319-kf_work
.Lfunc_end9:
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.align	8
.LJTI9_0:
	.quad	.LBB9_6
	.quad	.LBB9_7
	.quad	.LBB9_8
	.quad	.LBB9_9

	.text
	.align	16, 0x90
	.type	kf_bfly_generic,@function
kf_bfly_generic:                        # @kf_bfly_generic
	.cfi_startproc
.Lfunc_begin10:
	.loc	2 205 0                 # kiss_fft.c:205:0
# BB#0:
	pushq	%rbp
.Ltmp327:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp328:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp329:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp330:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp331:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp332:
	.cfi_def_cfa_offset 56
	subq	$3512, %rsp             # imm = 0xDB8
.Ltmp333:
	.cfi_def_cfa_offset 3568
.Ltmp334:
	.cfi_offset %rbx, -56
.Ltmp335:
	.cfi_offset %r12, -48
.Ltmp336:
	.cfi_offset %r13, -40
.Ltmp337:
	.cfi_offset %r14, -32
.Ltmp338:
	.cfi_offset %r15, -24
.Ltmp339:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$64, %r9
	leaq	.L.str889, %r10
	movabsq	$0, %r11
	leaq	.L.str485, %rbx
	movabsq	$2, %r14
	leaq	malloc, %r15
	leaq	.L.str1596, %r12
	movabsq	$211, %r13
	leaq	.L.str172, %rbp
	movq	%rax, 3504(%rsp)        # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 3496(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 3488(%rsp)        # 8-byte Spill
	movabsq	$49, %rax
	movl	%ecx, 3484(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 3480(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 3472(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3464(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 3456(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 3448(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 3440(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3432(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3424(%rsp)        # 8-byte Spill
	leaq	.L.str379, %rax
	movq	%rax, 3416(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3408(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 3400(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 3392(%rsp)        # 8-byte Spill
	movabsq	$209, %rax
	movq	%rax, 3384(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 3376(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 3368(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3360(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3352(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 3344(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 3336(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 199 0 prologue_end    # kiss_fft.c:199:0
.Ltmp340:
	movq	%rax, 3328(%rsp)        # 8-byte Spill
	movq	3352(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3320(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 3312(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	3320(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3304(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3504(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 3300(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	3328(%rsp), %rax        # 8-byte Reload
	movl	%r8d, 3296(%rsp)        # 4-byte Spill
	movq	%rax, %r8
	movq	%r9, 3288(%rsp)         # 8-byte Spill
	movq	%r11, %r9
	movq	%rbx, (%rsp)
	movq	%r13, 3280(%rsp)        # 8-byte Spill
	movq	%r14, 3272(%rsp)        # 8-byte Spill
	movq	%r15, 3264(%rsp)        # 8-byte Spill
	movq	%r12, 3256(%rsp)        # 8-byte Spill
	movq	%rbp, 3248(%rsp)        # 8-byte Spill
	movq	%rbx, 3240(%rsp)        # 8-byte Spill
	movq	%r10, 3232(%rsp)        # 8-byte Spill
	movq	%r11, 3224(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3336(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3368(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3484(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3344(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3352(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3416(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly_generic:Fout <- [RSP+3320]
	#DEBUG_VALUE: kf_bfly_generic:fstride <- [RSP+3312]
	#DEBUG_VALUE: kf_bfly_generic:st <- [RSP+3304]
	#DEBUG_VALUE: kf_bfly_generic:m <- [RSP+3484]
	#DEBUG_VALUE: kf_bfly_generic:p <- [RSP+3296]
	.loc	2 209 0                 # kiss_fft.c:209:0
	movq	3384(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3392(%rsp), %rcx        # 8-byte Reload
	movq	3360(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3448(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3224(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3224(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3368(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3384(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3400(%rsp), %rcx        # 8-byte Reload
	movq	3376(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3392(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	%esi, %edi
	movl	%edi, %edx
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rcx        # 8-byte Reload
	movl	%esi, 3220(%rsp)        # 4-byte Spill
	movq	%rcx, %rsi
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3400(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp341:
	#DEBUG_VALUE: kf_bfly_generic:Norig <- [RSP+3220]
	.loc	2 211 0                 # kiss_fft.c:211:0
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3456(%rsp), %rcx        # 8-byte Reload
	movq	3408(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3424(%rsp), %rsi        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3416(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3208(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3232(%rsp), %rcx        # 8-byte Reload
	movq	3432(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3448(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3440(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3208(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3456(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3208(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3464(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3232(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3280(%rsp), %rdi        # 8-byte Reload
	movq	3248(%rsp), %rsi        # 8-byte Reload
	movq	3496(%rsp), %rdx        # 8-byte Reload
	movq	3488(%rsp), %rcx        # 8-byte Reload
	movq	3472(%rsp), %r8         # 8-byte Reload
	movl	3480(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3272(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3264(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3256(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3504(%rsp), %rdi        # 8-byte Reload
	movq	3288(%rsp), %rsi        # 8-byte Reload
	movq	3200(%rsp), %rdx        # 8-byte Reload
	movq	3504(%rsp), %rcx        # 8-byte Reload
	movq	3232(%rsp), %r8         # 8-byte Reload
	movq	3224(%rsp), %r9         # 8-byte Reload
	movq	3240(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3200(%rsp), %rdi        # 8-byte Reload
	callq	malloc
.Ltmp342:
	movabsq	$1, %rcx
	leaq	.L.str1495, %rdx
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r8
	leaq	.L.str382, %r9
	movabsq	$3, %r10
	leaq	.L.str381, %r11
	movabsq	$213, %rbx
	leaq	.L.str172, %r14
	leaq	.L.str182, %r15
	leaq	.L.str380, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 3192(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3176(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	movabsq	$211, %rax
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	movq	3184(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3104(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	3144(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3096(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3192(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3088(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	%rcx, 3080(%rsp)        # 8-byte Spill
	movq	3128(%rsp), %rax        # 8-byte Reload
	movq	%r8, 3072(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	3096(%rsp), %rax        # 8-byte Reload
	movq	%r9, 3064(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movq	%r15, 3056(%rsp)        # 8-byte Spill
	movq	%r12, 3048(%rsp)        # 8-byte Spill
	movl	%ebp, 3044(%rsp)        # 4-byte Spill
	movl	%r13d, 3040(%rsp)       # 4-byte Spill
	movq	%r14, 3032(%rsp)        # 8-byte Spill
	movq	%rbx, 3024(%rsp)        # 8-byte Spill
	movq	%r10, 3016(%rsp)        # 8-byte Spill
	movq	%r11, 3008(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3120(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3136(%rsp), %rcx        # 8-byte Reload
	movq	3112(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3144(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3128(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rax        # 8-byte Reload
	movq	3184(%rsp), %rdi        # 8-byte Reload
	movq	3144(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 3000(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp343:
	#DEBUG_VALUE: kf_bfly_generic:scratch <- [RSP+3000]
	#DEBUG_VALUE: kf_bfly_generic:u <- 0
	.loc	2 213 0                 # kiss_fft.c:213:0
	movq	3024(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3088(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3072(%rsp), %rdi        # 8-byte Reload
	movq	3176(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3096(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3176(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3168(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	3184(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2999(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	3024(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3048(%rsp), %rcx        # 8-byte Reload
	movq	3072(%rsp), %r8         # 8-byte Reload
	movl	3044(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3016(%rsp), %rdi        # 8-byte Reload
	movq	3096(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3008(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3072(%rsp), %rdi        # 8-byte Reload
	movq	3096(%rsp), %rsi        # 8-byte Reload
	movq	3096(%rsp), %rdx        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3064(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2999(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	3080(%rsp), %rdi        # 8-byte Reload
	movq	3080(%rsp), %rsi        # 8-byte Reload
	movq	3080(%rsp), %rcx        # 8-byte Reload
	movq	3088(%rsp), %r8         # 8-byte Reload
	movq	3096(%rsp), %r9         # 8-byte Reload
	movq	3104(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2999(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB10_1
	jmp	.LBB10_11
.Ltmp344:
.LBB10_1:                               # %.preheader.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str384165, %r8
	leaq	.L.str485, %rdx
	movabsq	$213, %rdi
	leaq	.L.str172, %rsi
	leaq	.L.str381, %r9
	leaq	.L.str383, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str25106, %r12
	movabsq	$32, %r13
	movq	%rax, 2984(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 2976(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2968(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 2952(%rsp)        # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 2944(%rsp)        # 8-byte Spill
	leaq	.L.str379, %rax
	movq	%rax, 2936(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2928(%rsp)        # 8-byte Spill
	movabsq	$225, %rax
	movq	%rax, 2920(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2912(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 2904(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 2896(%rsp)        # 8-byte Spill
	movabsq	$224, %rax
	movq	%rax, 2888(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	leaq	.L.str104, %rax
	movq	%rax, 2872(%rsp)        # 8-byte Spill
	movabsq	$222, %rax
	movq	%rax, 2864(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 2856(%rsp)        # 8-byte Spill
	movabsq	$215, %rax
	.loc	2 215 0                 # kiss_fft.c:215:0
.Ltmp345:
	movq	%rdi, 2848(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2840(%rsp)        # 8-byte Spill
	movq	%rdx, 2832(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2856(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2824(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2912(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2816(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2808(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r13, 2800(%rsp)        # 8-byte Spill
	movl	%ebp, 2796(%rsp)        # 4-byte Spill
	movq	%r14, 2784(%rsp)        # 8-byte Spill
	movq	%r12, 2776(%rsp)        # 8-byte Spill
	movq	%r15, 2768(%rsp)        # 8-byte Spill
	movl	%ebx, 2764(%rsp)        # 4-byte Spill
	movq	%r10, 2752(%rsp)        # 8-byte Spill
	movq	%r11, 2744(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
.Ltmp346:
	.loc	2 222 0                 # kiss_fft.c:222:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2743(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2864(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2872(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$0, %ebx
	setg	%al
	.loc	2 224 0                 # kiss_fft.c:224:0
.Ltmp347:
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2872(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2742(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2888(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	movq	2880(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2896(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rcx        # 8-byte Reload
	.loc	2 225 0                 # kiss_fft.c:225:0
.Ltmp348:
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2728(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2904(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2920(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2944(%rsp), %rcx        # 8-byte Reload
	movq	2912(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rdx        # 8-byte Reload
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	2928(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2936(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3296(%rsp), %ebx        # 4-byte Reload
	cmpl	$1, %ebx
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2824(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2944(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2727(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2952(%rsp), %rcx        # 8-byte Reload
	movq	2960(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rcx
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2712(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2952(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2776(%rsp), %rcx        # 8-byte Reload
	movq	2960(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2800(%rsp), %rsi        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2976(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	3484(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rcx
.Ltmp349:
	.loc	2 213 0                 # kiss_fft.c:213:0
	movq	2784(%rsp), %rdi        # 8-byte Reload
	movq	2768(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2704(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2848(%rsp), %rdi        # 8-byte Reload
	movq	2840(%rsp), %rsi        # 8-byte Reload
	movq	2808(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2764(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2824(%rsp), %rdi        # 8-byte Reload
	movq	2984(%rsp), %rsi        # 8-byte Reload
	movq	2984(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2816(%rsp), %r8         # 8-byte Reload
	movq	2984(%rsp), %r9         # 8-byte Reload
	movq	2832(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2984(%rsp), %rcx        # 8-byte Reload
	movq	%rcx, 2696(%rsp)        # 8-byte Spill
.LBB10_2:                               # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_3 Depth 2
                                        #     Child Loop BB10_6 Depth 2
                                        #       Child Loop BB10_8 Depth 3
	movq	2696(%rsp), %rax        # 8-byte Reload
	movabsq	$0, %rcx
	movabsq	$1, %rdx
	leaq	.L.str1697, %r8
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str184, %r9
	movabsq	$3, %r10
	leaq	.L.str94, %r11
	movabsq	$215, %rbx
	leaq	.L.str172, %r14
	leaq	.L.str384165, %r15
	leaq	.L.str388, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	leaq	.L.str385, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	leaq	.L.str381, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	leaq	.L.str386, %rax
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	leaq	.L.str387, %rax
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 215 0                 # kiss_fft.c:215:0
.Ltmp350:
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	movq	2624(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2608(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2600(%rsp)        # 8-byte Spill
	movq	%r14, %rsi
	movq	%rdx, 2592(%rsp)        # 8-byte Spill
	movq	%r15, %rdx
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2584(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2616(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2576(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2568(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2560(%rsp)        # 8-byte Spill
	movq	%r12, 2552(%rsp)        # 8-byte Spill
	movq	%r14, 2544(%rsp)        # 8-byte Spill
	movl	%ebp, 2540(%rsp)        # 4-byte Spill
	movl	%r13d, 2536(%rsp)       # 4-byte Spill
	movq	%rbx, 2528(%rsp)        # 8-byte Spill
	movq	%r10, 2520(%rsp)        # 8-byte Spill
	movq	%r11, 2512(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2608(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2640(%rsp), %r8         # 8-byte Reload
	movq	2592(%rsp), %r9         # 8-byte Reload
	movq	2632(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	2592(%rsp), %r9         # 8-byte Reload
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2680(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2544(%rsp), %rsi        # 8-byte Reload
	movq	2560(%rsp), %rdx        # 8-byte Reload
	movq	2552(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movl	2540(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2584(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2512(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2608(%rsp), %rdi        # 8-byte Reload
	movq	2584(%rsp), %rsi        # 8-byte Reload
	movq	2584(%rsp), %rdx        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2568(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2743(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2592(%rsp), %rdi        # 8-byte Reload
	movq	2592(%rsp), %rsi        # 8-byte Reload
	movq	2592(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movq	2584(%rsp), %r9         # 8-byte Reload
	movq	2600(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2743(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2504(%rsp)        # 8-byte Spill
	movq	%rdx, 2496(%rsp)        # 8-byte Spill
	jne	.LBB10_3
	jmp	.LBB10_4
.LBB10_3:                               # %.lr.ph
                                        #   Parent Loop BB10_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	2496(%rsp), %rax        # 8-byte Reload
	movq	2504(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str75156, %rsi
	movabsq	$0, %rdi
	leaq	.L.str485, %r8
	movabsq	$2, %r9
	leaq	.L.str94, %r10
	movabsq	$3, %r11
	leaq	.L.str184, %rbx
	movabsq	$215, %r14
	leaq	.L.str172, %r15
	leaq	.L.str186, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2488(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2480(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2472(%rsp)        # 8-byte Spill
	leaq	.L.str74155, %rax
	movq	%rax, 2464(%rsp)        # 8-byte Spill
	leaq	.L.str379, %rax
	movq	%rax, 2456(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	leaq	.L.str390, %rax
	movq	%rax, 2432(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 2424(%rsp)        # 8-byte Spill
	leaq	.L.str392, %rax
	movq	%rax, 2416(%rsp)        # 8-byte Spill
	leaq	.L.str391, %rax
	movq	%rax, 2408(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 2400(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	leaq	.L.str389, %rax
	movq	%rax, 2384(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 2360(%rsp)        # 8-byte Spill
	movabsq	$216, %rax
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	leaq	.L.str98, %rax
	movq	%rax, 2344(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2336(%rsp)        # 8-byte Spill
	leaq	.L.str110, %rax
	movq	%rax, 2328(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2320(%rsp)        # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	movabsq	$44, %rax
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	leaq	.L.str385, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	leaq	.L.str384165, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 216 0                 # kiss_fft.c:216:0
.Ltmp351:
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	movq	2248(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2232(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2224(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 2216(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	2384(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2208(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2240(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2200(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2192(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 2184(%rsp)        # 8-byte Spill
	movq	%r12, 2176(%rsp)        # 8-byte Spill
	movl	%ebp, 2172(%rsp)        # 4-byte Spill
	movl	%r13d, 2168(%rsp)       # 4-byte Spill
	movq	%r14, 2160(%rsp)        # 8-byte Spill
	movq	%rbx, 2152(%rsp)        # 8-byte Spill
	movq	%r10, 2144(%rsp)        # 8-byte Spill
	movq	%r11, 2136(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2248(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2408(%rsp), %rcx        # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2256(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	2216(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2144(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2272(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2208(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3000(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2128(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3320(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2216(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2120(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2328(%rsp), %rcx        # 8-byte Reload
	movq	2304(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2120(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2120(%rsp), %rax        # 8-byte Reload
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2328(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2304(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2128(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2128(%rsp), %rax        # 8-byte Reload
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2368(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2112(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2328(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3320(%rsp), %rax        # 8-byte Reload
	movq	2488(%rsp), %rcx        # 8-byte Reload
	movq	(%rax,%rcx,8), %rdx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 2096(%rsp)        # 8-byte Spill
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2368(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2352(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2344(%rsp), %rcx        # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2104(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2096(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2368(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3000(%rsp), %rax        # 8-byte Reload
	movq	2208(%rsp), %rcx        # 8-byte Reload
	movq	2096(%rsp), %rdx        # 8-byte Reload
	movq	%rdx, (%rax,%rcx,8)
.Ltmp352:
	.loc	2 215 0                 # kiss_fft.c:215:0
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2432(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2208(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2208(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2416(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2712(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2400(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2408(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2488(%rsp), %rax        # 8-byte Reload
	movq	2712(%rsp), %rcx        # 8-byte Reload
	addq	%rcx, %rax
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2416(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	2424(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	2088(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2432(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2088(%rsp), %rax        # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 2076(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	2448(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2456(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2076(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2076(%rsp), %ebp        # 4-byte Reload
	movl	3296(%rsp), %r13d       # 4-byte Reload
	cmpl	%r13d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	2480(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2075(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2160(%rsp), %rdi        # 8-byte Reload
	movq	2184(%rsp), %rsi        # 8-byte Reload
	movq	2144(%rsp), %rdx        # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2172(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2136(%rsp), %rdi        # 8-byte Reload
	movq	2232(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2192(%rsp), %rdi        # 8-byte Reload
	movq	2232(%rsp), %rsi        # 8-byte Reload
	movq	2232(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2144(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2075(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	2216(%rsp), %rdi        # 8-byte Reload
	movq	2216(%rsp), %rsi        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2224(%rsp), %r8         # 8-byte Reload
	movq	2232(%rsp), %r9         # 8-byte Reload
	movq	2200(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2075(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	movq	2088(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %rdx        # 8-byte Reload
	movq	%rcx, 2504(%rsp)        # 8-byte Spill
	movq	%rdx, 2496(%rsp)        # 8-byte Spill
	jne	.LBB10_4
	jmp	.LBB10_3
.Ltmp353:
.LBB10_4:                               # %.loopexit
                                        #   in Loop: Header=BB10_2 Depth=1
	movabsq	$1, %rax
	leaq	.L.str104, %r8
	movabsq	$0, %rcx
	leaq	.L.str485, %rdx
	movabsq	$2, %rsi
	leaq	.L.str387, %rdi
	movabsq	$3, %r9
	leaq	.L.str393, %r10
	movabsq	$222, %r11
	leaq	.L.str172, %rbx
	leaq	.L.str184, %r14
	leaq	.L.str188, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	.loc	2 222 0                 # kiss_fft.c:222:0
.Ltmp354:
	movq	%rdi, 2064(%rsp)        # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 2056(%rsp)        # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 2048(%rsp)        # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 2040(%rsp)        # 8-byte Spill
	movq	%r15, %rcx
	movq	2056(%rsp), %r11        # 8-byte Reload
	movq	%r8, 2032(%rsp)         # 8-byte Spill
	movq	%r11, %r8
	movq	%r9, 2024(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	movq	%r10, 2008(%rsp)        # 8-byte Spill
	movl	%r12d, 2004(%rsp)       # 4-byte Spill
	callq	trace_logger_log0
	movq	2024(%rsp), %rdi        # 8-byte Reload
	movq	2040(%rsp), %rsi        # 8-byte Reload
	movq	2040(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2056(%rsp), %rdi        # 8-byte Reload
	movq	2040(%rsp), %rsi        # 8-byte Reload
	movq	2040(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2742(%rsp), %r13b       # 1-byte Reload
	andb	$1, %r13b
	movzbl	%r13b, %ebp
	movl	%ebp, %edx
	movq	2016(%rsp), %rdi        # 8-byte Reload
	movq	2016(%rsp), %rsi        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	2040(%rsp), %r9         # 8-byte Reload
	movq	2048(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movb	2742(%rsp), %r13b       # 1-byte Reload
	testb	$1, %r13b
	jne	.LBB10_5
	jmp	.LBB10_10
.LBB10_5:                               # %.lr.ph8
                                        #   in Loop: Header=BB10_2 Depth=1
	movl	$0, %eax
	movabsq	$1, %rcx
	movabsq	$0, %rdx
	leaq	.L.str395, %r8
	leaq	.L.str485, %rsi
	movabsq	$222, %rdi
	leaq	.L.str172, %r9
	leaq	.L.str393, %r10
	leaq	.L.str394, %r11
	movabsq	$2, %rbx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str142, %r12
	leaq	.L.str19100, %r13
	movq	%rcx, 1992(%rsp)        # 8-byte Spill
	movabsq	$224, %rcx
	movq	%rcx, 1984(%rsp)        # 8-byte Spill
	movabsq	$27, %rcx
	.loc	2 224 0                 # kiss_fft.c:224:0
.Ltmp355:
	movq	%rcx, 1976(%rsp)        # 8-byte Spill
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1968(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1960(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 1952(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	%r12, %rcx
	movq	%r8, 1944(%rsp)         # 8-byte Spill
	movq	1976(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1936(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1932(%rsp)        # 4-byte Spill
	movq	%r14, 1920(%rsp)        # 8-byte Spill
	movq	%r15, 1912(%rsp)        # 8-byte Spill
	movl	%ebp, 1908(%rsp)        # 4-byte Spill
	movq	%r12, 1896(%rsp)        # 8-byte Spill
	movq	%r13, 1888(%rsp)        # 8-byte Spill
	movq	%rbx, 1880(%rsp)        # 8-byte Spill
	movq	%r10, 1872(%rsp)        # 8-byte Spill
	movq	%r11, 1864(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1992(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	2728(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1888(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2728(%rsp), %rcx        # 8-byte Reload
	movq	(%rcx), %rdx
.Ltmp356:
	.loc	2 222 0                 # kiss_fft.c:222:0
	movq	1920(%rsp), %rdi        # 8-byte Reload
	movq	1912(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1856(%rsp)        # 8-byte Spill
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1896(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1968(%rsp), %rdi        # 8-byte Reload
	movq	1936(%rsp), %rsi        # 8-byte Reload
	movq	1872(%rsp), %rdx        # 8-byte Reload
	movq	1864(%rsp), %rcx        # 8-byte Reload
	movq	1880(%rsp), %r8         # 8-byte Reload
	movl	1932(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1992(%rsp), %rdi        # 8-byte Reload
	movq	1952(%rsp), %rsi        # 8-byte Reload
	movq	1952(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	1944(%rsp), %r8         # 8-byte Reload
	movq	1952(%rsp), %r9         # 8-byte Reload
	movq	1960(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2688(%rsp), %rcx        # 8-byte Reload
	movl	1932(%rsp), %eax        # 4-byte Reload
	movq	%rcx, 1848(%rsp)        # 8-byte Spill
	movl	%eax, 1844(%rsp)        # 4-byte Spill
.LBB10_6:                               #   Parent Loop BB10_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB10_8 Depth 3
	movl	1844(%rsp), %eax        # 4-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str105, %r8
	movabsq	$0, %rsi
	leaq	.L.str485, %rdi
	movabsq	$2, %r9
	leaq	.L.str398, %r10
	movabsq	$3, %r11
	leaq	.L.str402, %rbx
	movabsq	$225, %r14
	leaq	.L.str172, %r15
	leaq	.L.str395, %r12
	leaq	.L.str401, %r13
	movl	$0, %ebp
	movl	%eax, 1840(%rsp)        # 4-byte Spill
	movl	$1, %eax
	movq	%rcx, 1832(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str142, %rcx
	movq	%rcx, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str43124, %rcx
	movq	%rcx, 1808(%rsp)        # 8-byte Spill
	movabsq	$224, %rcx
	movq	%rcx, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str400, %rcx
	movq	%rcx, 1792(%rsp)        # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 1784(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rcx
	movq	%rcx, 1768(%rsp)        # 8-byte Spill
	movabsq	$44, %rcx
	movq	%rcx, 1760(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rcx
	movq	%rcx, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str396, %rcx
	movq	%rcx, 1744(%rsp)        # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 1736(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str399, %rcx
	movq	%rcx, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str393, %rcx
	movq	%rcx, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rcx
	movq	%rcx, 1696(%rsp)        # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 1688(%rsp)        # 8-byte Spill
	movabsq	$48, %rcx
	movq	%rcx, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str385, %rcx
	movq	%rcx, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str397, %rcx
	.loc	2 223 0                 # kiss_fft.c:223:0
.Ltmp357:
	movq	%rcx, 1664(%rsp)        # 8-byte Spill
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	%rdi, 1656(%rsp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 1648(%rsp)        # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 1640(%rsp)        # 8-byte Spill
	movq	%r12, %rdx
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 1632(%rsp)         # 8-byte Spill
	movq	1680(%rsp), %r8         # 8-byte Reload
	movq	%r9, 1624(%rsp)         # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 1620(%rsp)        # 4-byte Spill
	movq	%r15, 1608(%rsp)        # 8-byte Spill
	movq	%r12, 1600(%rsp)        # 8-byte Spill
	movq	%r14, 1592(%rsp)        # 8-byte Spill
	movq	%r13, 1584(%rsp)        # 8-byte Spill
	movl	%ebp, 1580(%rsp)        # 4-byte Spill
	movq	%rbx, 1568(%rsp)        # 8-byte Spill
	movq	%r10, 1560(%rsp)        # 8-byte Spill
	movq	%r11, 1552(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1744(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1688(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1680(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1560(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	1704(%rsp), %r8         # 8-byte Reload
	movq	1640(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %eax        # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1728(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1720(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1712(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp358:
	#DEBUG_VALUE: twidx <- 0
	.loc	2 224 0                 # kiss_fft.c:224:0
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	1736(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1744(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1752(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1832(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3320(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1544(%rsp)        # 8-byte Spill
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1760(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1536(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1800(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1536(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1856(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	3320(%rsp), %rcx        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1856(%rsp), %rsi        # 8-byte Reload
	movq	%rsi, (%rcx,%rdx,8)
.Ltmp359:
	#DEBUG_VALUE: kf_bfly_generic:q <- 1
	.loc	2 225 0                 # kiss_fft.c:225:0
	movq	1592(%rsp), %rdi        # 8-byte Reload
	movq	1608(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1624(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1552(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1624(%rsp), %rdi        # 8-byte Reload
	movq	1648(%rsp), %rsi        # 8-byte Reload
	movq	1648(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2727(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1640(%rsp), %rsi        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	1632(%rsp), %r8         # 8-byte Reload
	movq	1648(%rsp), %r9         # 8-byte Reload
	movq	1656(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2727(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB10_7
	jmp	.LBB10_9
.LBB10_7:                               # %.lr.ph5
                                        #   in Loop: Header=BB10_6 Depth=2
	movabsq	$1, %rax
	movl	$0, %ecx
	movabsq	$0, %rdx
	leaq	.L.str404, %r8
	leaq	.L.str485, %rsi
	movabsq	$225, %rdi
	leaq	.L.str172, %r9
	leaq	.L.str402, %r10
	leaq	.L.str403, %r11
	movabsq	$2, %rbx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str53134, %r12
	leaq	.L.str129, %r13
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str396, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	movabsq	$229, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str147, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	movabsq	$226, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	.loc	2 226 0                 # kiss_fft.c:226:0
.Ltmp360:
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	movq	1440(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1424(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 1416(%rsp)        # 8-byte Spill
	movq	%r9, %rsi
	movq	%rdx, 1408(%rsp)        # 8-byte Spill
	movq	%r10, %rdx
	movq	1456(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 1404(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	1432(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1392(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	1404(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1384(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r14, 1376(%rsp)        # 8-byte Spill
	movq	%r15, 1368(%rsp)        # 8-byte Spill
	movl	%ebp, 1364(%rsp)        # 4-byte Spill
	movq	%r12, 1352(%rsp)        # 8-byte Spill
	movq	%r13, 1344(%rsp)        # 8-byte Spill
	movq	%rbx, 1336(%rsp)        # 8-byte Spill
	movq	%r10, 1328(%rsp)        # 8-byte Spill
	movq	%r11, 1320(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	3312(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	.loc	2 229 0                 # kiss_fft.c:229:0
.Ltmp361:
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1528(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1312(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1352(%rsp), %rcx        # 8-byte Reload
	movq	1480(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1512(%rsp), %rdi        # 8-byte Reload
	movq	1504(%rsp), %rsi        # 8-byte Reload
	movq	1528(%rsp), %rdx        # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1336(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1520(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	3320(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1832(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3320(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
.Ltmp362:
	.loc	2 225 0                 # kiss_fft.c:225:0
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	1368(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1304(%rsp)        # 8-byte Spill
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	1384(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movl	1404(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1408(%rsp), %rsi        # 8-byte Reload
	movq	1408(%rsp), %rdx        # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	1408(%rsp), %r9         # 8-byte Reload
	movq	1416(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movl	1404(%rsp), %eax        # 4-byte Reload
	movq	%rcx, 1296(%rsp)        # 8-byte Spill
	movl	%eax, 1292(%rsp)        # 4-byte Spill
.LBB10_8:                               #   Parent Loop BB10_2 Depth=1
                                        #     Parent Loop BB10_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movl	1292(%rsp), %eax        # 4-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movabsq	$1, %rdx
	leaq	.L.str412, %rsi
	movabsq	$0, %rdi
	leaq	.L.str485, %r8
	movabsq	$2, %r9
	leaq	.L.str404, %r10
	movabsq	$3, %r11
	leaq	.L.str398, %rbx
	movabsq	$225, %r14
	leaq	.L.str172, %r15
	leaq	.L.str413, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rcx, 1280(%rsp)        # 8-byte Spill
	movabsq	$19134, %rcx            # imm = 0x4ABE
	movq	%rcx, 1272(%rsp)        # 8-byte Spill
	movabsq	$32, %rcx
	movq	%rcx, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str411, %rcx
	movq	%rcx, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str379, %rcx
	movq	%rcx, 1248(%rsp)        # 8-byte Spill
	movabsq	$46, %rcx
	movq	%rcx, 1240(%rsp)        # 8-byte Spill
	movabsq	$64, %rcx
	movq	%rcx, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str406, %rcx
	movq	%rcx, 1224(%rsp)        # 8-byte Spill
	movabsq	$33, %rcx
	movq	%rcx, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str405, %rcx
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rcx
	movq	%rcx, 1200(%rsp)        # 8-byte Spill
	movabsq	$8, %rcx
	movq	%rcx, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rcx
	movq	%rcx, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str53134, %rcx
	movq	%rcx, 1176(%rsp)        # 8-byte Spill
	movabsq	$229, %rcx
	movq	%rcx, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str410, %rcx
	movq	%rcx, 1160(%rsp)        # 8-byte Spill
	movabsq	$28, %rcx
	movq	%rcx, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str226, %rcx
	movq	%rcx, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str222, %rcx
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movabsq	$9, %rcx
	movq	%rcx, 1128(%rsp)        # 8-byte Spill
	movabsq	$27, %rcx
	movq	%rcx, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str224, %rcx
	movq	%rcx, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str147, %rcx
	movq	%rcx, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str409, %rcx
	movq	%rcx, 1096(%rsp)        # 8-byte Spill
	leaq	.L.str223, %rcx
	movq	%rcx, 1088(%rsp)        # 8-byte Spill
	leaq	.L.str219, %rcx
	movq	%rcx, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rcx
	movq	%rcx, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rcx
	movq	%rcx, 1064(%rsp)        # 8-byte Spill
	movabsq	$228, %rcx
	movq	%rcx, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str67148, %rcx
	movq	%rcx, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str72153, %rcx
	movq	%rcx, 1040(%rsp)        # 8-byte Spill
	movabsq	$13, %rcx
	movq	%rcx, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str209, %rcx
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str214, %rcx
	movq	%rcx, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str69150, %rcx
	movq	%rcx, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str218, %rcx
	movq	%rcx, 1000(%rsp)        # 8-byte Spill
	movabsq	$11, %rcx
	movq	%rcx, 992(%rsp)         # 8-byte Spill
	leaq	.L.str77158, %rcx
	movq	%rcx, 984(%rsp)         # 8-byte Spill
	leaq	.L.str117, %rcx
	movq	%rcx, 976(%rsp)         # 8-byte Spill
	movabsq	$4, %rcx
	movq	%rcx, 968(%rsp)         # 8-byte Spill
	leaq	.L.str64145, %rcx
	movq	%rcx, 960(%rsp)         # 8-byte Spill
	movabsq	$5, %rcx
	movq	%rcx, 952(%rsp)         # 8-byte Spill
	movabsq	$29, %rcx
	movq	%rcx, 944(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rcx
	movq	%rcx, 936(%rsp)         # 8-byte Spill
	leaq	.L.str118, %rcx
	movq	%rcx, 928(%rsp)         # 8-byte Spill
	leaq	.L.str66147, %rcx
	movq	%rcx, 920(%rsp)         # 8-byte Spill
	leaq	.L.str408, %rcx
	movq	%rcx, 912(%rsp)         # 8-byte Spill
	movabsq	$35, %rcx
	movq	%rcx, 904(%rsp)         # 8-byte Spill
	leaq	.L.str61142, %rcx
	movq	%rcx, 896(%rsp)         # 8-byte Spill
	leaq	.L.str57138, %rcx
	movq	%rcx, 888(%rsp)         # 8-byte Spill
	leaq	.L.str164, %rcx
	movq	%rcx, 880(%rsp)         # 8-byte Spill
	movabsq	$227, %rcx
	movq	%rcx, 872(%rsp)         # 8-byte Spill
	movabsq	$10, %rcx
	movq	%rcx, 864(%rsp)         # 8-byte Spill
	leaq	.L.str58139, %rcx
	movq	%rcx, 856(%rsp)         # 8-byte Spill
	leaq	.L.str687, %rcx
	movq	%rcx, 848(%rsp)         # 8-byte Spill
	movabsq	$50, %rcx
	movq	%rcx, 840(%rsp)         # 8-byte Spill
	leaq	.L.str56137, %rcx
	movq	%rcx, 832(%rsp)         # 8-byte Spill
	movabsq	$226, %rcx
	movq	%rcx, 824(%rsp)         # 8-byte Spill
	leaq	.L.str55136, %rcx
	movq	%rcx, 816(%rsp)         # 8-byte Spill
	leaq	.L.str47128, %rcx
	movq	%rcx, 808(%rsp)         # 8-byte Spill
	leaq	.L.str407, %rcx
	movq	%rcx, 800(%rsp)         # 8-byte Spill
	movabsq	$34, %rcx
	movq	%rcx, 792(%rsp)         # 8-byte Spill
	leaq	.L.str402, %rcx
	movq	%rcx, 784(%rsp)         # 8-byte Spill
	movabsq	$-1, %rcx
	movq	%rcx, 776(%rsp)         # 8-byte Spill
	movabsq	$48, %rcx
	.loc	2 226 0                 # kiss_fft.c:226:0
.Ltmp363:
	movq	%rcx, 768(%rsp)         # 8-byte Spill
	movq	776(%rsp), %rcx         # 8-byte Reload
	movq	%rdi, 760(%rsp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rsi, 752(%rsp)         # 8-byte Spill
	movq	%r15, %rsi
	movq	%rdx, 744(%rsp)         # 8-byte Spill
	movq	%r10, %rdx
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	%r8, 736(%rsp)          # 8-byte Spill
	movq	768(%rsp), %r8          # 8-byte Reload
	movq	%r9, 728(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movl	%eax, 724(%rsp)         # 4-byte Spill
	movq	%r15, 712(%rsp)         # 8-byte Spill
	movq	%r12, 704(%rsp)         # 8-byte Spill
	movl	%ebp, 700(%rsp)         # 4-byte Spill
	movl	%r13d, 696(%rsp)        # 4-byte Spill
	movq	%r14, 688(%rsp)         # 8-byte Spill
	movq	%rbx, 680(%rsp)         # 8-byte Spill
	movq	%r10, 672(%rsp)         # 8-byte Spill
	movq	%r11, 664(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	776(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	800(%rsp), %rcx         # 8-byte Reload
	movq	768(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	672(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	744(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	784(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	724(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %ecx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 656(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1312(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	656(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	1312(%rsp), %rdx        # 8-byte Reload
	addq	%rdx, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	648(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 644(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp364:
	#DEBUG_VALUE: twidx <- [RSP+644]
	.loc	2 227 0                 # kiss_fft.c:227:0
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3220(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	3220(%rsp), %ebp        # 4-byte Reload
	cmpl	%ebp, %eax
	setl	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 643(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	840(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3220(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	643(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	643(%rsp), %al          # 1-byte Reload
	testb	%al, %al
	movl	700(%rsp), %ebp         # 4-byte Reload
	movl	3220(%rsp), %r13d       # 4-byte Reload
	cmovel	%r13d, %ebp
	movl	%ebp, %eax
	movl	%eax, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 636(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	872(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	636(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	880(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	644(%rsp), %eax         # 4-byte Reload
	movl	636(%rsp), %ebp         # 4-byte Reload
	subl	%ebp, %eax
.Ltmp365:
	.loc	2 228 0                 # kiss_fft.c:228:0
	movl	%eax, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 632(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1280(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3000(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 624(%rsp)         # 8-byte Spill
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3000(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 620(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	632(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	632(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	664(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	608(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 600(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	600(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	920(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 596(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	vmovss	596(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 592(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	928(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1280(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	3000(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 584(%rsp)         # 8-byte Spill
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	584(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3000(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 580(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	984(%rsp), %rcx         # 8-byte Reload
	movq	944(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	952(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	664(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	3304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	608(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 568(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	568(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3304(%rsp), %rcx        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 564(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	vmovss	564(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 560(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	560(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	592(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	592(%rsp), %xmm0        # 4-byte Reload
	vmovss	560(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 556(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	vmovss	564(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 552(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	596(%rsp), %xmm0        # 4-byte Reload
	vmovss	580(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 548(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1056(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	552(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	548(%rsp), %xmm0        # 4-byte Reload
	vmovss	552(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp366:
	.loc	2 229 0                 # kiss_fft.c:229:0
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 544(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1544(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 540(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	556(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1080(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	540(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	540(%rsp), %xmm0        # 4-byte Reload
	vmovss	556(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 536(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	536(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1544(%rsp), %rcx        # 8-byte Reload
	vmovss	536(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1304(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 532(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	544(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	532(%rsp), %xmm0        # 4-byte Reload
	vmovss	544(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 528(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1168(%rsp), %rdi        # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1152(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1304(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1176(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	528(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	760(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1304(%rsp), %rcx        # 8-byte Reload
	vmovss	528(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
.Ltmp367:
	.loc	2 225 0                 # kiss_fft.c:225:0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1192(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	1280(%rsp), %rdx        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rcx        # 8-byte Reload
	addq	$1, %rcx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 520(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1232(%rsp), %rsi        # 8-byte Reload
	movq	520(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	520(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 516(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	516(%rsp), %eax         # 4-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	516(%rsp), %eax         # 4-byte Reload
	movl	3296(%rsp), %ebp        # 4-byte Reload
	cmpl	%ebp, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 515(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	712(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movl	700(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	664(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	515(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	760(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	515(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	520(%rsp), %rcx         # 8-byte Reload
	movl	632(%rsp), %ebp         # 4-byte Reload
	movq	%rcx, 1296(%rsp)        # 8-byte Spill
	movl	%ebp, 1292(%rsp)        # 4-byte Spill
	jne	.LBB10_9
	jmp	.LBB10_8
.Ltmp368:
.LBB10_9:                               # %._crit_edge
                                        #   in Loop: Header=BB10_6 Depth=2
	movabsq	$1, %rax
	leaq	.L.str414, %rcx
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str395, %r8
	movabsq	$3, %r9
	leaq	.L.str387, %r10
	movabsq	$222, %r11
	leaq	.L.str172, %rbx
	leaq	.L.str398, %r14
	leaq	.L.str415, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 504(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str379, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str397, %rax
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str396, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str25106, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	leaq	.L.str399, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	.loc	2 222 0                 # kiss_fft.c:222:0
	movq	%rdi, 416(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 408(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 400(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 392(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 384(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%r8, 376(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 368(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 360(%rsp)         # 8-byte Spill
	movl	%ebp, 356(%rsp)         # 4-byte Spill
	movl	%r12d, 352(%rsp)        # 4-byte Spill
	movq	%r13, 344(%rsp)         # 8-byte Spill
	movq	%r14, 336(%rsp)         # 8-byte Spill
	movq	%rbx, 328(%rsp)         # 8-byte Spill
	movq	%r10, 320(%rsp)         # 8-byte Spill
	movq	%r11, 312(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rdx         # 8-byte Reload
	movq	400(%rsp), %rcx         # 8-byte Reload
	movq	392(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	1840(%rsp), %ebp        # 4-byte Reload
	addl	$1, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 308(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp369:
	#DEBUG_VALUE: kf_bfly_generic:q1 <- [RSP+308]
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	2704(%rsp), %rdx        # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	1832(%rsp), %rdx        # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1832(%rsp), %rax        # 8-byte Reload
	movq	2704(%rsp), %rcx        # 8-byte Reload
	addq	%rcx, %rax
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	464(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 296(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3296(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	480(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	496(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	308(%rsp), %ebp         # 4-byte Reload
	movl	3296(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 295(%rsp)          # 1-byte Spill
	callq	trace_logger_log_int
	movq	312(%rsp), %rdi         # 8-byte Reload
	movq	328(%rsp), %rsi         # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	416(%rsp), %r8          # 8-byte Reload
	movl	356(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	368(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	320(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	416(%rsp), %rdi         # 8-byte Reload
	movq	400(%rsp), %rsi         # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	295(%rsp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	504(%rsp), %rdi         # 8-byte Reload
	movq	504(%rsp), %rsi         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movq	400(%rsp), %r9          # 8-byte Reload
	movq	408(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	295(%rsp), %al          # 1-byte Reload
	testb	$1, %al
	movq	296(%rsp), %rcx         # 8-byte Reload
	movl	308(%rsp), %ebp         # 4-byte Reload
	movq	%rcx, 1848(%rsp)        # 8-byte Spill
	movl	%ebp, 1844(%rsp)        # 4-byte Spill
	jne	.LBB10_10
	jmp	.LBB10_6
.Ltmp370:
.LBB10_10:                              # %._crit_edge9
                                        #   in Loop: Header=BB10_2 Depth=1
	movabsq	$1, %rax
	leaq	.L.str417, %rcx
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str384165, %r8
	movabsq	$3, %r9
	leaq	.L.str382, %r10
	movabsq	$213, %r11
	leaq	.L.str172, %rbx
	leaq	.L.str387, %r14
	leaq	.L.str418, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 280(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	leaq	.L.str416, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	leaq	.L.str386, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str385, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	.loc	2 213 0                 # kiss_fft.c:213:0
	movq	%rdi, 200(%rsp)         # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 192(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 184(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	%rax, 176(%rsp)         # 8-byte Spill
	movq	232(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 168(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%r8, 160(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 152(%rsp)          # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%r15, 144(%rsp)         # 8-byte Spill
	movl	%ebp, 140(%rsp)         # 4-byte Spill
	movl	%r12d, 136(%rsp)        # 4-byte Spill
	movq	%r13, 128(%rsp)         # 8-byte Spill
	movq	%r14, 120(%rsp)         # 8-byte Spill
	movq	%rbx, 112(%rsp)         # 8-byte Spill
	movq	%r10, 104(%rsp)         # 8-byte Spill
	movq	%r11, 96(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rdx         # 8-byte Reload
	movq	184(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	2688(%rsp), %rdx        # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2688(%rsp), %rax        # 8-byte Reload
	addq	$1, %rax
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 88(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	240(%rsp), %rsi         # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	88(%rsp), %rax          # 8-byte Reload
	movl	%eax, %ebp
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 84(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	168(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3484(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	84(%rsp), %ebp          # 4-byte Reload
	movl	%ebp, %r12d
	movl	%r12d, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	272(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	84(%rsp), %ebp          # 4-byte Reload
	movl	3484(%rsp), %r12d       # 4-byte Reload
	cmpl	%r12d, %ebp
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	128(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 83(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	144(%rsp), %rcx         # 8-byte Reload
	movq	200(%rsp), %r8          # 8-byte Reload
	movl	140(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	152(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	184(%rsp), %rdx         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	184(%rsp), %rsi         # 8-byte Reload
	movq	184(%rsp), %rdx         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	83(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	280(%rsp), %rdi         # 8-byte Reload
	movq	280(%rsp), %rsi         # 8-byte Reload
	movq	280(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	184(%rsp), %r9          # 8-byte Reload
	movq	192(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	83(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	88(%rsp), %rcx          # 8-byte Reload
	movq	%rcx, 2696(%rsp)        # 8-byte Spill
	jne	.LBB10_11
	jmp	.LBB10_2
.Ltmp371:
.LBB10_11:                              # %._crit_edge11
	movabsq	$1, %rax
	movabsq	$64, %rcx
	leaq	.L.str990, %r8
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	free, %r9
	leaq	.L.str124, %r10
	movabsq	$234, %r11
	leaq	.L.str172, %rbx
	leaq	.L.str382, %r14
	leaq	.L.str419, %r15
	movabsq	$49, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	.loc	2 234 0                 # kiss_fft.c:234:0
	movq	%rdi, 72(%rsp)          # 8-byte Spill
	movq	%r11, %rdi
	movq	%rsi, 64(%rsp)          # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 56(%rsp)          # 8-byte Spill
	movq	%r14, %rdx
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r15, %rcx
	movq	%r8, 40(%rsp)           # 8-byte Spill
	movq	%r12, %r8
	movq	%r9, 32(%rsp)           # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	movq	%r10, 16(%rsp)          # 8-byte Spill
	movl	%r13d, 12(%rsp)         # 4-byte Spill
	callq	trace_logger_log0
	movq	72(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	16(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	3192(%rsp), %rdx        # 8-byte Reload
	movq	24(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	56(%rsp), %r9           # 8-byte Reload
	movq	64(%rsp), %rax          # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3192(%rsp), %rdi        # 8-byte Reload
	callq	free
	movabsq	$235, %rdi
	leaq	.L.str172, %rsi
	leaq	.L.str382, %rdx
	leaq	.L.str420, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %ebp
	.loc	2 235 0                 # kiss_fft.c:235:0
	movl	$1, (%rsp)
	movl	%ebp, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$3512, %rsp             # imm = 0xDB8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp372:
.Ltmp373:
	.size	kf_bfly_generic, .Ltmp373-kf_bfly_generic
.Lfunc_end10:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI11_0:
	.quad	-9223372036854775808    # double -0
	.text
	.align	16, 0x90
	.type	kf_bfly5,@function
kf_bfly5:                               # @kf_bfly5
	.cfi_startproc
.Lfunc_begin11:
	.loc	2 142 0                 # kiss_fft.c:142:0
# BB#0:
	pushq	%rbp
.Ltmp381:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp382:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp383:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp384:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp385:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp386:
	.cfi_def_cfa_offset 56
	subq	$3352, %rsp             # imm = 0xD18
.Ltmp387:
	.cfi_def_cfa_offset 3408
.Ltmp388:
	.cfi_offset %rbx, -56
.Ltmp389:
	.cfi_offset %r12, -48
.Ltmp390:
	.cfi_offset %r13, -40
.Ltmp391:
	.cfi_offset %r14, -32
.Ltmp392:
	.cfi_offset %r15, -24
.Ltmp393:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	leaq	.L.str25106, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$2, %r11
	leaq	.L.str46127, %rbx
	movabsq	$3, %r14
	leaq	.L.str45126, %r15
	movabsq	$159, %r12
	leaq	.L.str169, %r13
	leaq	.L.str182, %rbp
	movq	%rax, 3344(%rsp)        # 8-byte Spill
	leaq	.L.str298, %rax
	movl	%ecx, 3340(%rsp)        # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 3336(%rsp)        # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 3328(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 3320(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 3312(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 3304(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 3296(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 3288(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 3280(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 3272(%rsp)        # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 3264(%rsp)        # 8-byte Spill
	movabsq	$150, %rax
	movq	%rax, 3256(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 3248(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 3240(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 3232(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 3224(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 3216(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 3208(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 3200(%rsp)        # 8-byte Spill
	leaq	.L.str104, %rax
	movq	%rax, 3192(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 3184(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 3176(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 3168(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 3160(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 3152(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 3144(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 3136(%rsp)        # 8-byte Spill
	movabsq	$149, %rax
	movq	%rax, 3128(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 3120(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 3112(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 3104(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 3096(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 3088(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 137 0 prologue_end    # kiss_fft.c:137:0
.Ltmp394:
	movq	%rax, 3080(%rsp)        # 8-byte Spill
	movq	3088(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 3072(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	3272(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 3064(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	3072(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 3056(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	3344(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 3052(%rsp)        # 4-byte Spill
	movq	%rax, %rcx
	movq	3080(%rsp), %rax        # 8-byte Reload
	movq	%r8, 3040(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 3032(%rsp)         # 8-byte Spill
	movq	%r10, (%rsp)
	movq	%r13, 3024(%rsp)        # 8-byte Spill
	movq	%r15, 3016(%rsp)        # 8-byte Spill
	movq	%r12, 3008(%rsp)        # 8-byte Spill
	movq	%rbp, 3000(%rsp)        # 8-byte Spill
	movq	%r14, 2992(%rsp)        # 8-byte Spill
	movq	%rbx, 2984(%rsp)        # 8-byte Spill
	movq	%r10, 2976(%rsp)        # 8-byte Spill
	movq	%r11, 2968(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3240(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	3340(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3088(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3304(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly5:Fout <- [RSP+3072]
	#DEBUG_VALUE: kf_bfly5:fstride <- [RSP+3064]
	#DEBUG_VALUE: kf_bfly5:st <- [RSP+3056]
	#DEBUG_VALUE: kf_bfly5:m <- [RSP+3340]
	.loc	2 149 0                 # kiss_fft.c:149:0
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3184(%rsp), %rcx        # 8-byte Reload
	movq	3096(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3340(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %esi
	movl	%esi, %edx
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3304(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %esi        # 4-byte Reload
	movslq	%esi, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3184(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2960(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3120(%rsp), %rcx        # 8-byte Reload
	movq	3168(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3184(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2960(%rsp), %rax        # 8-byte Reload
	movq	3064(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3120(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2952(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3104(%rsp), %rcx        # 8-byte Reload
	movq	3208(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3216(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3232(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3120(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2992(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3240(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2952(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2944(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3112(%rsp), %rcx        # 8-byte Reload
	movq	3248(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2944(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3104(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	2952(%rsp), %rcx        # 8-byte Reload
	vmovss	264(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 2940(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3112(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2976(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3136(%rsp), %rcx        # 8-byte Reload
	movq	3208(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3216(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3232(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2952(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3120(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2992(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3240(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2952(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2928(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3128(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3144(%rsp), %rcx        # 8-byte Reload
	movq	3248(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2928(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3136(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	2952(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 150 0                 # kiss_fft.c:150:0
	cvtss2sd	%xmm0, %xmm1
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 2924(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3144(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2976(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3176(%rsp), %rcx        # 8-byte Reload
	movq	3152(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3160(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3064(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3176(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2912(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3224(%rsp), %rcx        # 8-byte Reload
	movq	3168(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2912(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3176(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3184(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2960(%rsp), %rax        # 8-byte Reload
	movq	2912(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3224(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2904(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3192(%rsp), %rcx        # 8-byte Reload
	movq	3208(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3216(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3232(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3224(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2992(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3240(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2904(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3192(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2896(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3248(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2896(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3192(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	vmovss	264(%rax,%rcx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 2892(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3200(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2976(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3264(%rsp), %rcx        # 8-byte Reload
	movq	3208(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3216(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3232(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2904(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3224(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2992(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	2992(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3240(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2904(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3264(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2880(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	3256(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3280(%rsp), %rcx        # 8-byte Reload
	movq	3248(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3272(%rsp), %rsi        # 8-byte Reload
	movq	2880(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3264(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rax        # 8-byte Reload
	movq	2904(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 152 0                 # kiss_fft.c:152:0
	cvtss2sd	%xmm0, %xmm1
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 2876(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	3344(%rsp), %rdx        # 8-byte Reload
	movq	3280(%rsp), %rcx        # 8-byte Reload
	movq	3032(%rsp), %r8         # 8-byte Reload
	movq	2976(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
.Ltmp395:
	#DEBUG_VALUE: kf_bfly5:Fout0 <- [RSP+3072]
	#DEBUG_VALUE: kf_bfly5:Fout1 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout2 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout3 <- undef
	#DEBUG_VALUE: kf_bfly5:Fout4 <- undef
	#DEBUG_VALUE: kf_bfly5:u <- 0
	.loc	2 159 0                 # kiss_fft.c:159:0
	movq	3008(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3040(%rsp), %rcx        # 8-byte Reload
	movq	3288(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3032(%rsp), %rcx        # 8-byte Reload
	movq	3296(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %esi        # 4-byte Reload
	movl	%esi, %esi
	movl	%esi, %edx
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3312(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3304(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %esi        # 4-byte Reload
	cmpl	$0, %esi
	setg	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	3320(%rsp), %rdi        # 8-byte Reload
	movq	3344(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2875(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	3008(%rsp), %rdi        # 8-byte Reload
	movq	3024(%rsp), %rsi        # 8-byte Reload
	movq	3000(%rsp), %rdx        # 8-byte Reload
	movq	3328(%rsp), %rcx        # 8-byte Reload
	movq	2968(%rsp), %r8         # 8-byte Reload
	movl	3336(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2992(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3016(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2968(%rsp), %rdi        # 8-byte Reload
	movq	3032(%rsp), %rsi        # 8-byte Reload
	movq	3032(%rsp), %rdx        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	2984(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2875(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	3344(%rsp), %rdi        # 8-byte Reload
	movq	3344(%rsp), %rsi        # 8-byte Reload
	movq	3344(%rsp), %rcx        # 8-byte Reload
	movq	3040(%rsp), %r8         # 8-byte Reload
	movq	3032(%rsp), %r9         # 8-byte Reload
	movq	2976(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2875(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB11_1
	jmp	.LBB11_3
.Ltmp396:
.LBB11_1:                               # %.lr.ph
	movabsq	$0, %rax
	movabsq	$1, %rcx
	leaq	.L.str49130, %r8
	leaq	.L.str485, %rdx
	movabsq	$159, %rdi
	leaq	.L.str169, %rsi
	leaq	.L.str45126, %r9
	leaq	.L.str48129, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$64, %r15
	leaq	.L.str47128, %r12
	leaq	.L.str129, %r13
	movq	%rax, 2864(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 2856(%rsp)        # 8-byte Spill
	movabsq	$153, %rax
	movq	%rax, 2848(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2840(%rsp)        # 8-byte Spill
	leaq	.L.str43124, %rax
	movq	%rax, 2832(%rsp)        # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 2824(%rsp)        # 8-byte Spill
	movabsq	$154, %rax
	movq	%rax, 2816(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 2808(%rsp)        # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 2800(%rsp)        # 8-byte Spill
	movabsq	$155, %rax
	movq	%rax, 2792(%rsp)        # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 2784(%rsp)        # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 2776(%rsp)        # 8-byte Spill
	movabsq	$156, %rax
	movq	%rax, 2768(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2760(%rsp)        # 8-byte Spill
	leaq	.L.str110, %rax
	movq	%rax, 2752(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 2736(%rsp)        # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 2728(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 2720(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2712(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 2704(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2696(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	.loc	2 156 0                 # kiss_fft.c:156:0
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	movq	2768(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2680(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 2672(%rsp)        # 8-byte Spill
	movq	%rdx, 2664(%rsp)        # 8-byte Spill
	movq	%r9, %rdx
	movq	2728(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2656(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2704(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2648(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 2640(%rsp)         # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 2632(%rsp)        # 8-byte Spill
	movl	%ebp, 2628(%rsp)        # 4-byte Spill
	movq	%r15, 2616(%rsp)        # 8-byte Spill
	movq	%r13, 2608(%rsp)        # 8-byte Spill
	movq	%r12, 2600(%rsp)        # 8-byte Spill
	movl	%ebx, 2596(%rsp)        # 4-byte Spill
	movq	%r10, 2584(%rsp)        # 8-byte Spill
	movq	%r11, 2576(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2576(%rsp), %rdx        # 8-byte Reload
	movq	2864(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	shll	$2, %ebx
	.loc	2 155 0                 # kiss_fft.c:155:0
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2728(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 2572(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2792(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2688(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2696(%rsp), %rdx        # 8-byte Reload
	movq	2864(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	imull	$3, %ebx, %ebp
	.loc	2 154 0                 # kiss_fft.c:154:0
	movl	%ebp, %esi
	movl	%esi, %edx
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebp, 2568(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2816(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2704(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2864(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	3340(%rsp), %ebx        # 4-byte Reload
	shll	$1, %ebx
	.loc	2 156 0                 # kiss_fft.c:156:0
	movl	%ebx, %ebp
	movl	%ebp, %edx
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	movl	%ebx, 2564(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2776(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2572(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2728(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2572(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 155 0                 # kiss_fft.c:155:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2552(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2792(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2800(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2568(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2568(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 154 0                 # kiss_fft.c:154:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2544(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2816(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2824(%rsp), %rcx        # 8-byte Reload
	movq	2744(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	2564(%rsp), %r9d        # 4-byte Reload
	movl	%r9d, %ebx
	movl	%ebx, %edx
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2760(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2564(%rsp), %ebx        # 4-byte Reload
	movslq	%ebx, %rax
	.loc	2 156 0                 # kiss_fft.c:156:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2536(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2768(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2784(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2552(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2776(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	3072(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2552(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3072(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 155 0                 # kiss_fft.c:155:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2528(%rsp)        # 8-byte Spill
.Ltmp397:
	#DEBUG_VALUE: kf_bfly5:Fout4 <- [RSP+2528]
	movq	%rax, %rcx
	movq	2784(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2792(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2808(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2544(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2800(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	3072(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2544(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3072(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 154 0                 # kiss_fft.c:154:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2520(%rsp)        # 8-byte Spill
.Ltmp398:
	#DEBUG_VALUE: kf_bfly5:Fout3 <- [RSP+2520]
	movq	%rax, %rcx
	movq	2808(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2816(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2832(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2536(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2824(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	3072(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2536(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3072(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 153 0                 # kiss_fft.c:153:0
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2512(%rsp)        # 8-byte Spill
.Ltmp399:
	#DEBUG_VALUE: kf_bfly5:Fout2 <- [RSP+2512]
	movq	%rax, %rcx
	movq	2832(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2848(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2600(%rsp), %rcx        # 8-byte Reload
	movq	2840(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	2960(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2856(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	3072(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2960(%rsp), %rax        # 8-byte Reload
	shlq	$3, %rax
	movq	3072(%rsp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	.loc	2 159 0                 # kiss_fft.c:159:0
.Ltmp400:
	movq	2632(%rsp), %rdi        # 8-byte Reload
	movq	2616(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2656(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2504(%rsp)        # 8-byte Spill
.Ltmp401:
	#DEBUG_VALUE: kf_bfly5:Fout1 <- [RSP+2504]
	movq	%rax, %rcx
	movq	2600(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2680(%rsp), %rdi        # 8-byte Reload
	movq	2672(%rsp), %rsi        # 8-byte Reload
	movq	2640(%rsp), %rdx        # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2576(%rsp), %r8         # 8-byte Reload
	movl	2596(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2864(%rsp), %rsi        # 8-byte Reload
	movq	2864(%rsp), %rdx        # 8-byte Reload
	movq	2656(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movq	2864(%rsp), %r9         # 8-byte Reload
	movq	2664(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2864(%rsp), %rax        # 8-byte Reload
	movq	3072(%rsp), %rcx        # 8-byte Reload
	movq	2504(%rsp), %rdx        # 8-byte Reload
	movq	2512(%rsp), %rsi        # 8-byte Reload
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2528(%rsp), %r8         # 8-byte Reload
	movq	%rax, 2496(%rsp)        # 8-byte Spill
	movq	%rcx, 2488(%rsp)        # 8-byte Spill
	movq	%rdx, 2480(%rsp)        # 8-byte Spill
	movq	%rsi, 2472(%rsp)        # 8-byte Spill
	movq	%rdi, 2464(%rsp)        # 8-byte Spill
	movq	%r8, 2456(%rsp)         # 8-byte Spill
.LBB11_2:                               # =>This Inner Loop Header: Depth=1
	movq	2456(%rsp), %rax        # 8-byte Reload
	movq	2464(%rsp), %rcx        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdi        # 8-byte Reload
	movq	2496(%rsp), %r8         # 8-byte Reload
	movabsq	$1, %r9
	leaq	.L.str75156, %r10
	movabsq	$0, %r11
	leaq	.L.str485, %rbx
	movabsq	$2, %r14
	leaq	.L.str49130, %r15
	movabsq	$3, %r12
	leaq	.L.str46127, %r13
	movabsq	$159, %rbp
	movq	%rax, 2448(%rsp)        # 8-byte Spill
	leaq	.L.str169, %rax
	movq	%rax, 2440(%rsp)        # 8-byte Spill
	leaq	.L.str378, %rax
	movq	%rsi, 2432(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 2428(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 2416(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2408(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2400(%rsp)        # 8-byte Spill
	leaq	.L.str74155, %rax
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 2384(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	leaq	.L.str51132, %rax
	movq	%rax, 2360(%rsp)        # 8-byte Spill
	movabsq	$33, %rax
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	leaq	.L.str50131, %rax
	movq	%rax, 2344(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2336(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 2328(%rsp)        # 8-byte Spill
	leaq	.L.str308, %rax
	movq	%rax, 2320(%rsp)        # 8-byte Spill
	leaq	.L.str307, %rax
	movq	%rax, 2312(%rsp)        # 8-byte Spill
	movabsq	$193, %rax
	movq	%rax, 2304(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str306, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	leaq	.L.str305, %rax
	movq	%rax, 2280(%rsp)        # 8-byte Spill
	leaq	.L.str304, %rax
	movq	%rax, 2272(%rsp)        # 8-byte Spill
	leaq	.L.str303, %rax
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	leaq	.L.str302, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	leaq	.L.str301, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	leaq	.L.str300, %rax
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	leaq	.L.str299, %rax
	movq	%rax, 2232(%rsp)        # 8-byte Spill
	leaq	.L.str376, %rax
	movq	%rax, 2224(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 2216(%rsp)        # 8-byte Spill
	movabsq	$191, %rax
	movq	%rax, 2208(%rsp)        # 8-byte Spill
	leaq	.L.str377, %rax
	movq	%rax, 2200(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2192(%rsp)        # 8-byte Spill
	leaq	.L.str363, %rax
	movq	%rax, 2184(%rsp)        # 8-byte Spill
	leaq	.L.str369, %rax
	movq	%rax, 2176(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	leaq	.L.str374, %rax
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	leaq	.L.str242, %rax
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str375, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	leaq	.L.str359, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	leaq	.L.str366, %rax
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str372, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str230, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	movabsq	$190, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	leaq	.L.str373, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	leaq	.L.str370, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	leaq	.L.str371, %rax
	movq	%rax, 2064(%rsp)        # 8-byte Spill
	leaq	.L.str367, %rax
	movq	%rax, 2056(%rsp)        # 8-byte Spill
	leaq	.L.str368, %rax
	movq	%rax, 2048(%rsp)        # 8-byte Spill
	movabsq	$188, %rax
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 2032(%rsp)        # 8-byte Spill
	leaq	.L.str325, %rax
	movq	%rax, 2024(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 2008(%rsp)        # 8-byte Spill
	leaq	.L.str321, %rax
	movq	%rax, 2000(%rsp)        # 8-byte Spill
	leaq	.L.str365, %rax
	movq	%rax, 1992(%rsp)        # 8-byte Spill
	leaq	.L.str364, %rax
	movq	%rax, 1984(%rsp)        # 8-byte Spill
	movabsq	$187, %rax
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	leaq	.L.str326, %rax
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	leaq	.L.str322, %rax
	movq	%rax, 1960(%rsp)        # 8-byte Spill
	leaq	.L.str362, %rax
	movq	%rax, 1952(%rsp)        # 8-byte Spill
	leaq	.L.str361, %rax
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	movabsq	$186, %rax
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str324, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	leaq	.L.str360, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str320, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	leaq	.L.str358, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	leaq	.L.str357, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	movabsq	$185, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str323, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	leaq	.L.str54135, %rax
	movq	%rax, 1848(%rsp)        # 8-byte Spill
	leaq	.L.str356, %rax
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	leaq	.L.str319, %rax
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	leaq	.L.str354, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str263, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	movabsq	$183, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str355, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str341, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	leaq	.L.str348, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	leaq	.L.str352, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str278, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	leaq	.L.str353, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	leaq	.L.str344, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str337, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	leaq	.L.str350, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	leaq	.L.str66147, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	movabsq	$182, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str351, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str349, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str57138, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str59140, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str346, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str347, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	movabsq	$180, %rax
	vmovsd	.LCPI11_0, %xmm0
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str345, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str343, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	leaq	.L.str342, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	movabsq	$179, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str340, %rax
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str339, %rax
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	movabsq	$177, %rax
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str338, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	leaq	.L.str336, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str335, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	movabsq	$176, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	leaq	.L.str334, %rax
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str332, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str55136, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	movabsq	$174, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str333, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	leaq	.L.str331, %rax
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str330, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str328, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str53134, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	movabsq	$173, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	leaq	.L.str329, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str327, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str276, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	movabsq	$171, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	leaq	.L.str270, %rax
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	movabsq	$170, %rax
	movq	%rax, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	leaq	.L.str318, %rax
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$169, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str77158, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str315, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	movabsq	$168, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str317, %rax
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	leaq	.L.str316, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	movabsq	$166, %rax
	movq	%rax, 1352(%rsp)        # 8-byte Spill
	leaq	.L.str290, %rax
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	leaq	.L.str262, %rax
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	leaq	.L.str280, %rax
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	leaq	.L.str313, %rax
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	leaq	.L.str312, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	leaq	.L.str314, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str294, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	leaq	.L.str286, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str288, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	leaq	.L.str284, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str311, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str282, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str310, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	leaq	.L.str271, %rax
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	movabsq	$165, %rax
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	leaq	.L.str217, %rax
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str254, %rax
	movq	%rax, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str251, %rax
	movq	%rax, 1136(%rsp)        # 8-byte Spill
	leaq	.L.str268, %rax
	movq	%rax, 1128(%rsp)        # 8-byte Spill
	leaq	.L.str216, %rax
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str248, %rax
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 1096(%rsp)        # 8-byte Spill
	leaq	.L.str309, %rax
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	movabsq	$22, %rax
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	movabsq	$12884901888, %rax      # imm = 0x300000000
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str239, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	movabsq	$164, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str234, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	leaq	.L.str226, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 960(%rsp)         # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str218, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	leaq	.L.str214, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	movabsq	$163, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str209, %rax
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str67148, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	leaq	.L.str58139, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str64145, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	leaq	.L.str72153, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str69150, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str61142, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	movabsq	$161, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str45126, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	leaq	.L.str43124, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 161 0                 # kiss_fft.c:161:0
.Ltmp402:
	movq	%rax, 784(%rsp)         # 8-byte Spill
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 776(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	2440(%rsp), %rax        # 8-byte Reload
	movl	%esi, 772(%rsp)         # 4-byte Spill
	movq	%rax, %rsi
	movq	%rdx, 760(%rsp)         # 8-byte Spill
	movq	%r15, %rdx
	movq	2344(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 752(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%r8, 744(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	2428(%rsp), %eax        # 4-byte Reload
	movq	%r9, 736(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r12, 728(%rsp)         # 8-byte Spill
	movq	%r13, 720(%rsp)         # 8-byte Spill
	movq	%rbp, 712(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 704(%rsp)        # 8-byte Spill
	movq	%r15, 696(%rsp)         # 8-byte Spill
	movq	%r14, 688(%rsp)         # 8-byte Spill
	movq	%r10, 680(%rsp)         # 8-byte Spill
	movq	%r11, 672(%rsp)         # 8-byte Spill
	movq	%rbx, 664(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3072(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2256(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2272(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	800(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2280(%rsp), %rcx        # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	824(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2320(%rsp), %r8         # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	696(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	832(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	840(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 660(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1552(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 648(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	.loc	2 163 0                 # kiss_fft.c:163:0
.Ltmp403:
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 644(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	904(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2432(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 640(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	904(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	1232(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rcx         # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 632(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	632(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 624(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	624(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	856(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 620(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	904(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	vmovss	620(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 616(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2432(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 608(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1728(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2432(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 604(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	864(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	632(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 592(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	592(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	632(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 588(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	588(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	vmovss	588(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 584(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	584(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	880(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	616(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	616(%rsp), %xmm0        # 4-byte Reload
	vmovss	584(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 580(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	588(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	904(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	vmovss	588(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 576(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	604(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	620(%rsp), %xmm0        # 4-byte Reload
	vmovss	604(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 572(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	928(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	576(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	936(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	572(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	572(%rsp), %xmm0        # 4-byte Reload
	vmovss	576(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp404:
	.loc	2 164 0                 # kiss_fft.c:164:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 568(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2072(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	760(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 564(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 560(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	960(%rsp), %rcx         # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	560(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	560(%rsp), %eax         # 4-byte Reload
	shll	$1, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 556(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	556(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	556(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 544(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	984(%rsp), %rcx         # 8-byte Reload
	movq	1232(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	544(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	968(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 536(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	536(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 528(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	528(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	976(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 524(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	vmovss	524(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 520(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2112(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	760(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 512(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	512(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	760(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 508(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	992(%rsp), %rcx         # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	536(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 496(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	496(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	536(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 492(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	492(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	508(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	508(%rsp), %xmm0        # 4-byte Reload
	vmovss	492(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 488(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	488(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	520(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	520(%rsp), %xmm0        # 4-byte Reload
	vmovss	488(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 484(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	492(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	564(%rsp), %xmm0        # 4-byte Reload
	vmovss	492(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 480(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	508(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	524(%rsp), %xmm0        # 4-byte Reload
	vmovss	508(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 476(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1048(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	480(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	476(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	476(%rsp), %xmm0        # 4-byte Reload
	vmovss	480(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp405:
	.loc	2 165 0                 # kiss_fft.c:165:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 472(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	752(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 468(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	1072(%rsp), %rdx        # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movabsq	$12884901888, %rcx      # imm = 0x300000000
	movq	744(%rsp), %rdx         # 8-byte Reload
	imulq	%rcx, %rdx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 456(%rsp)         # 8-byte Spill
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1080(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2400(%rsp), %rdx        # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	456(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	456(%rsp), %rcx         # 8-byte Reload
	sarq	$32, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 448(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1096(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1096(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 440(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	440(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	440(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 432(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	432(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1104(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	440(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 428(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	468(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	468(%rsp), %xmm0        # 4-byte Reload
	vmovss	428(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 424(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	752(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 416(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	2216(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	416(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	752(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 412(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1120(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	440(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	440(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 400(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1120(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	400(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1120(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	440(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 396(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	396(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	412(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	412(%rsp), %xmm0        # 4-byte Reload
	vmovss	396(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 392(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1432(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	392(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	424(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	424(%rsp), %xmm0        # 4-byte Reload
	vmovss	392(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1432(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 388(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	396(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	468(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	468(%rsp), %xmm0        # 4-byte Reload
	vmovss	396(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 384(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	412(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1160(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	428(%rsp), %xmm0        # 4-byte Reload
	vmovss	412(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 380(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1176(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	384(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1184(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	380(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	380(%rsp), %xmm0        # 4-byte Reload
	vmovss	384(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp406:
	.loc	2 166 0                 # kiss_fft.c:166:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 376(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1768(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2448(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 372(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rcx         # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 368(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1200(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	688(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	368(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1208(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	368(%rsp), %eax         # 4-byte Reload
	shll	$2, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 364(%rsp)         # 4-byte Spill
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1248(%rsp), %rcx        # 8-byte Reload
	movq	1216(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	364(%rsp), %eax         # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	364(%rsp), %eax         # 4-byte Reload
	movslq	%eax, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 352(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1272(%rsp), %rcx        # 8-byte Reload
	movq	1232(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	352(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	3064(%rsp), %rdx        # 8-byte Reload
	imulq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 344(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	344(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 336(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	336(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1256(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	vmovss	264(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 332(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	372(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	372(%rsp), %xmm0        # 4-byte Reload
	vmovss	332(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 328(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2448(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 320(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2448(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 316(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1264(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1280(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	3056(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	addq	$264, %rcx              # imm = 0x108
	movq	344(%rsp), %rdx         # 8-byte Reload
	shlq	$3, %rdx
	addq	%rdx, %rcx
	addq	$4, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 304(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	304(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	3056(%rsp), %rcx        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	vmovss	268(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 300(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	300(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	vmovss	300(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 296(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	296(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	328(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1312(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	328(%rsp), %xmm0        # 4-byte Reload
	vmovss	296(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 292(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	300(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1320(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	372(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	372(%rsp), %xmm0        # 4-byte Reload
	vmovss	300(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 288(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	vmovss	316(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 284(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1352(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1360(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	vmovss	288(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp407:
	.loc	2 168 0                 # kiss_fft.c:168:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 280(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	vmovss	292(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 276(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1376(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	280(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	568(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	568(%rsp), %xmm0        # 4-byte Reload
	vmovss	280(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp408:
	.loc	2 169 0                 # kiss_fft.c:169:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 272(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	580(%rsp), %xmm0        # 4-byte Reload
	vmovss	292(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 268(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	280(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1408(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	568(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	568(%rsp), %xmm0        # 4-byte Reload
	vmovss	280(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp409:
	.loc	2 170 0                 # kiss_fft.c:170:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 264(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	388(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1432(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	vmovss	388(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 260(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1424(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	376(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	472(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	472(%rsp), %xmm0        # 4-byte Reload
	vmovss	376(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp410:
	.loc	2 171 0                 # kiss_fft.c:171:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 256(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1448(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	388(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1432(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	484(%rsp), %xmm0        # 4-byte Reload
	vmovss	388(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 252(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1448(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	376(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1456(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	472(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	472(%rsp), %xmm0        # 4-byte Reload
	vmovss	376(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp411:
	.loc	2 173 0                 # kiss_fft.c:173:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 248(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	276(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	vmovss	276(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 244(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 240(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1488(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1496(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	.loc	2 174 0                 # kiss_fft.c:174:0
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	272(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	vmovss	272(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 236(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 232(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1528(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	vmovss	236(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 228(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1544(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	648(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1560(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
	.loc	2 176 0                 # kiss_fft.c:176:0
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	276(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	vmovss	276(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 224(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	vmovss	224(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 220(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	vmovss	260(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 216(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1576(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	220(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	216(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	216(%rsp), %xmm0        # 4-byte Reload
	vmovss	220(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 177 0                 # kiss_fft.c:177:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 212(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	272(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	vmovss	272(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 208(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	208(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	208(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 204(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	vmovss	256(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 200(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1608(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	204(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	200(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	200(%rsp), %xmm0        # 4-byte Reload
	vmovss	204(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 179 0                 # kiss_fft.c:179:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 196(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1632(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	264(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	vmovss	264(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 192(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1632(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 188(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1632(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	192(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	188(%rsp), %xmm0        # 4-byte Reload
	vmovss	192(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 180 0                 # kiss_fft.c:180:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 184(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 180(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	180(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	vmovsd	704(%rsp), %xmm0        # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	2336(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	180(%rsp), %xmm0        # 4-byte Reload
	vmovd	%xmm0, %eax
	xorl	$2147483648, %eax       # imm = 0x80000000
	vmovd	%eax, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 176(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 172(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1664(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	172(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	176(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	176(%rsp), %xmm0        # 4-byte Reload
	vmovss	172(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 182 0                 # kiss_fft.c:182:0
.Ltmp412:
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 168(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	184(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	212(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	212(%rsp), %xmm0        # 4-byte Reload
	vmovss	184(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 164(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	164(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	2432(%rsp), %rcx        # 8-byte Reload
	vmovss	164(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	168(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	vmovss	168(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 160(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1720(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	608(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	160(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1736(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	2432(%rsp), %rcx        # 8-byte Reload
	vmovss	160(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp413:
	.loc	2 183 0                 # kiss_fft.c:183:0
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	212(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	184(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	184(%rsp), %xmm0        # 4-byte Reload
	vmovss	212(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 156(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	2448(%rsp), %rcx        # 8-byte Reload
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	168(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1784(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	vmovss	168(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 152(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1808(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	2448(%rsp), %rcx        # 8-byte Reload
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp414:
	.loc	2 185 0                 # kiss_fft.c:185:0
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	276(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	vmovss	276(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 148(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	660(%rsp), %xmm0        # 4-byte Reload
	vmovss	148(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 144(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	260(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	vmovss	260(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 140(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	144(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1880(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	vmovss	144(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 186 0                 # kiss_fft.c:186:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 136(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	272(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2892(%rsp), %xmm0       # 4-byte Reload
	vmovss	272(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 132(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1912(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	132(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 128(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	256(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2940(%rsp), %xmm0       # 4-byte Reload
	vmovss	256(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 124(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1936(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	128(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	124(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	124(%rsp), %xmm0        # 4-byte Reload
	vmovss	128(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	.loc	2 187 0                 # kiss_fft.c:187:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 120(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	264(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	vmovss	264(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 116(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 112(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1976(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	vmovss	116(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 188 0                 # kiss_fft.c:188:0
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 108(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2000(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2876(%rsp), %xmm0       # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 104(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2016(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2024(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2032(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	2924(%rsp), %xmm0       # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2040(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2056(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	vmovss	100(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 190 0                 # kiss_fft.c:190:0
.Ltmp415:
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2104(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	136(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	vmovss	136(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 92(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2104(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2064(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	760(%rsp), %rcx         # 8-byte Reload
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	2104(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	120(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	120(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 88(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2104(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2096(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	512(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	760(%rsp), %rcx         # 8-byte Reload
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp416:
	.loc	2 191 0                 # kiss_fft.c:191:0
	movq	2208(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	136(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	136(%rsp), %xmm0        # 4-byte Reload
	vmovss	108(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 84(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2208(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	752(%rsp), %rcx         # 8-byte Reload
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	2208(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2176(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	120(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	120(%rsp), %xmm0        # 4-byte Reload
	vmovss	96(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 80(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	2208(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2200(%rsp), %rcx        # 8-byte Reload
	movq	2192(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	416(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2216(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	2224(%rsp), %rcx        # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movq	664(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	752(%rsp), %rcx         # 8-byte Reload
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp417:
	.loc	2 193 0                 # kiss_fft.c:193:0
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2240(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2240(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp418:
	#DEBUG_VALUE: kf_bfly5:Fout0 <- [RSP+72]
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2256(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2432(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2248(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2432(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 64(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2256(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp419:
	#DEBUG_VALUE: kf_bfly5:Fout1 <- [RSP+64]
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2272(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	760(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2264(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	760(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 56(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2272(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp420:
	#DEBUG_VALUE: kf_bfly5:Fout2 <- [RSP+56]
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2288(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	752(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2280(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	752(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2288(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp421:
	#DEBUG_VALUE: kf_bfly5:Fout3 <- [RSP+48]
	movq	2304(%rsp), %rdi        # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2320(%rsp), %rcx        # 8-byte Reload
	movq	2296(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	2448(%rsp), %rdx        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2312(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2448(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2320(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp422:
	#DEBUG_VALUE: kf_bfly5:Fout4 <- [RSP+40]
	.loc	2 159 0                 # kiss_fft.c:159:0
	movq	712(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2360(%rsp), %rcx        # 8-byte Reload
	movq	2328(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	2336(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	744(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2344(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	744(%rsp), %rcx         # 8-byte Reload
	addq	$1, %rcx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	736(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	712(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2392(%rsp), %rcx        # 8-byte Reload
	movq	2352(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2368(%rsp), %rsi        # 8-byte Reload
	movq	32(%rsp), %rdx          # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2360(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	32(%rsp), %rcx          # 8-byte Reload
	movl	%ecx, %eax
	movl	%eax, %esi
	movl	%esi, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 28(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
	movq	712(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	2376(%rsp), %r8         # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	3340(%rsp), %eax        # 4-byte Reload
	movl	%eax, %r9d
	movl	%r9d, %edx
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2384(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	2400(%rsp), %rsi        # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	2392(%rsp), %r8         # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	movl	3340(%rsp), %esi        # 4-byte Reload
	cmpl	%esi, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	2408(%rsp), %rdi        # 8-byte Reload
	movq	736(%rsp), %rsi         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 27(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	712(%rsp), %rdi         # 8-byte Reload
	movq	2440(%rsp), %rsi        # 8-byte Reload
	movq	696(%rsp), %rdx         # 8-byte Reload
	movq	2416(%rsp), %rcx        # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movl	2428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	728(%rsp), %rdi         # 8-byte Reload
	movq	672(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	688(%rsp), %rdi         # 8-byte Reload
	movq	672(%rsp), %rsi         # 8-byte Reload
	movq	672(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	736(%rsp), %rdi         # 8-byte Reload
	movq	736(%rsp), %rsi         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	680(%rsp), %r8          # 8-byte Reload
	movq	672(%rsp), %r9          # 8-byte Reload
	movq	664(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	32(%rsp), %rcx          # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	64(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %r8           # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movq	%rcx, 2496(%rsp)        # 8-byte Spill
	movq	%rdx, 2488(%rsp)        # 8-byte Spill
	movq	%rsi, 2480(%rsp)        # 8-byte Spill
	movq	%rdi, 2472(%rsp)        # 8-byte Spill
	movq	%r8, 2464(%rsp)         # 8-byte Spill
	movq	%r9, 2456(%rsp)         # 8-byte Spill
	jne	.LBB11_3
	jmp	.LBB11_2
.Ltmp423:
.LBB11_3:                               # %._crit_edge
	movabsq	$195, %rdi
	leaq	.L.str169, %rsi
	leaq	.L.str46127, %rdx
	leaq	.L.str78159, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 195 0                 # kiss_fft.c:195:0
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$3352, %rsp             # imm = 0xD18
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp424:
.Ltmp425:
	.size	kf_bfly5, .Ltmp425-kf_bfly5
.Lfunc_end11:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_bfly4,@function
kf_bfly4:                               # @kf_bfly4
	.cfi_startproc
.Lfunc_begin12:
	.loc	2 50 0                  # kiss_fft.c:50:0
# BB#0:
	pushq	%rbp
.Ltmp433:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp434:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp435:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp436:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp437:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp438:
	.cfi_def_cfa_offset 56
	subq	$2760, %rsp             # imm = 0xAC8
.Ltmp439:
	.cfi_def_cfa_offset 2816
.Ltmp440:
	.cfi_offset %rbx, -56
.Ltmp441:
	.cfi_offset %r12, -48
.Ltmp442:
	.cfi_offset %r13, -40
.Ltmp443:
	.cfi_offset %r14, -32
.Ltmp444:
	.cfi_offset %r15, -24
.Ltmp445:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str259, %r9
	leaq	.L.str485, %r10
	movabsq	$60, %r11
	leaq	.L.str166, %rbx
	leaq	.L.str182, %r14
	leaq	.L.str258, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 2752(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2744(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 2736(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2728(%rsp)        # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 2720(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 2712(%rsp)        # 8-byte Spill
	movabsq	$77, %rax
	movq	%rax, 2704(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 2696(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2688(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 2680(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2672(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 2664(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 2656(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2648(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 2640(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 2632(%rsp)        # 8-byte Spill
	movabsq	$74, %rax
	movq	%rax, 2624(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 2616(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 2608(%rsp)        # 8-byte Spill
	movabsq	$73, %rax
	movq	%rax, 2600(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 2592(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 2584(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 2576(%rsp)        # 8-byte Spill
	movabsq	$58, %rax
	movq	%rax, 2568(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 2560(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 2552(%rsp)        # 8-byte Spill
	movabsq	$55, %rax
	movq	%rax, 2544(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 2536(%rsp)        # 8-byte Spill
	movabsq	$54, %rax
	movq	%rax, 2528(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 2520(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 45 0 prologue_end     # kiss_fft.c:45:0
.Ltmp446:
	movq	%rax, 2512(%rsp)        # 8-byte Spill
	movq	2520(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 2504(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	2688(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 2496(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	2504(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 2488(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	2752(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 2480(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	2512(%rsp), %rax        # 8-byte Reload
	movq	%r8, 2472(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	2472(%rsp), %rax        # 8-byte Reload
	movq	%r9, 2464(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 2460(%rsp)        # 4-byte Spill
	movq	%r15, 2448(%rsp)        # 8-byte Spill
	movq	%r12, 2440(%rsp)        # 8-byte Spill
	movl	%r13d, 2436(%rsp)       # 4-byte Spill
	movq	%r14, 2424(%rsp)        # 8-byte Spill
	movq	%rbx, 2416(%rsp)        # 8-byte Spill
	movq	%r10, 2408(%rsp)        # 8-byte Spill
	movq	%r11, 2400(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2520(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly4:Fout <- [RSP+2504]
	#DEBUG_VALUE: kf_bfly4:fstride <- [RSP+2496]
	#DEBUG_VALUE: kf_bfly4:st <- [RSP+2488]
	#DEBUG_VALUE: kf_bfly4:m <- [RSP+2480]
.Ltmp447:
	#DEBUG_VALUE: kf_bfly4:k <- [RSP+2480]
	.loc	2 54 0                  # kiss_fft.c:54:0
	movq	2528(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2536(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2536(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2392(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp448:
	#DEBUG_VALUE: kf_bfly4:m2 <- [RSP+2392]
	.loc	2 55 0                  # kiss_fft.c:55:0
	movq	2544(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2560(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2552(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2480(%rsp), %rax        # 8-byte Reload
	imulq	$3, %rax, %rcx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2384(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2560(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp449:
	#DEBUG_VALUE: kf_bfly4:m3 <- [RSP+2384]
	.loc	2 58 0                  # kiss_fft.c:58:0
	movq	2568(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2584(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2576(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2584(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2376(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp450:
	#DEBUG_VALUE: kf_bfly4:tw1 <- [RSP+2376]
	#DEBUG_VALUE: kf_bfly4:tw2 <- [RSP+2376]
	#DEBUG_VALUE: kf_bfly4:tw3 <- [RSP+2376]
	.loc	2 73 0                  # kiss_fft.c:73:0
	movq	2600(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2608(%rsp), %rcx        # 8-byte Reload
	movq	2592(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2496(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	.loc	2 74 0                  # kiss_fft.c:74:0
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2608(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2368(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	2624(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2640(%rsp), %rcx        # 8-byte Reload
	movq	2616(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2656(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2632(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2496(%rsp), %rax        # 8-byte Reload
	imulq	$3, %rax, %rcx
	.loc	2 77 0                  # kiss_fft.c:77:0
.Ltmp451:
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	2752(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2360(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2640(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2680(%rsp), %rcx        # 8-byte Reload
	movq	2648(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2656(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2488(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2664(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	addq	$4, %rax
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2680(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 2352(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2720(%rsp), %rcx        # 8-byte Reload
	movq	2672(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2688(%rsp), %rsi        # 8-byte Reload
	movq	2352(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2680(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2488(%rsp), %rax        # 8-byte Reload
	movl	4(%rax), %ebp
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%ebp, 2348(%rsp)        # 4-byte Spill
	callq	trace_logger_log_int
	movq	2704(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2736(%rsp), %rcx        # 8-byte Reload
	movq	2696(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2440(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2472(%rsp), %rcx        # 8-byte Reload
	movq	2712(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2348(%rsp), %ebp        # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2728(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2720(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	2348(%rsp), %ebp        # 4-byte Reload
	cmpl	$0, %ebp
	sete	%al
.Ltmp452:
	.loc	2 60 0                  # kiss_fft.c:60:0
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %r13d
	movl	%r13d, %edx
	movq	2744(%rsp), %rdi        # 8-byte Reload
	movq	2752(%rsp), %rsi        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2736(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 2347(%rsp)         # 1-byte Spill
	callq	trace_logger_log_int
	movq	2400(%rsp), %rdi        # 8-byte Reload
	movq	2416(%rsp), %rsi        # 8-byte Reload
	movq	2424(%rsp), %rdx        # 8-byte Reload
	movq	2448(%rsp), %rcx        # 8-byte Reload
	movq	2440(%rsp), %r8         # 8-byte Reload
	movl	2460(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	2752(%rsp), %rdi        # 8-byte Reload
	movq	2472(%rsp), %rsi        # 8-byte Reload
	movq	2472(%rsp), %rdx        # 8-byte Reload
	movq	2752(%rsp), %rcx        # 8-byte Reload
	movq	2464(%rsp), %r8         # 8-byte Reload
	movq	2472(%rsp), %r9         # 8-byte Reload
	movq	2408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2376(%rsp), %rcx        # 8-byte Reload
	movq	2376(%rsp), %rdx        # 8-byte Reload
	movq	2480(%rsp), %rsi        # 8-byte Reload
	movq	2376(%rsp), %rdi        # 8-byte Reload
	movq	2504(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 2336(%rsp)        # 8-byte Spill
	movq	%rdx, 2328(%rsp)        # 8-byte Spill
	movq	%rsi, 2320(%rsp)        # 8-byte Spill
	movq	%rdi, 2312(%rsp)        # 8-byte Spill
	movq	%r8, 2304(%rsp)         # 8-byte Spill
.Ltmp453:
.LBB12_1:                               # =>This Inner Loop Header: Depth=1
	movq	2304(%rsp), %rax        # 8-byte Reload
	movq	2312(%rsp), %rcx        # 8-byte Reload
	movq	2320(%rsp), %rdx        # 8-byte Reload
	movq	2328(%rsp), %rsi        # 8-byte Reload
	movq	2336(%rsp), %rdi        # 8-byte Reload
	movabsq	$1, %r8
	leaq	.L.str1697, %r9
	movabsq	$0, %r10
	leaq	.L.str485, %r11
	movabsq	$2, %rbx
	leaq	.L.str275, %r14
	movabsq	$3, %r15
	leaq	.L.str274, %r12
	movabsq	$77, %r13
	leaq	.L.str166, %rbp
	movq	%rax, 2296(%rsp)        # 8-byte Spill
	leaq	.L.str259, %rax
	movq	%rax, 2288(%rsp)        # 8-byte Spill
	leaq	.L.str273, %rax
	movq	%rsi, 2280(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 2276(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 2264(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 2256(%rsp)        # 8-byte Spill
	leaq	.L.str271, %rax
	movq	%rax, 2248(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 2240(%rsp)        # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 2232(%rsp)        # 8-byte Spill
	movabsq	$75, %rax
	movq	%rax, 2224(%rsp)        # 8-byte Spill
	leaq	.L.str272, %rax
	movq	%rax, 2216(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 2208(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 2200(%rsp)        # 8-byte Spill
	leaq	.L.str242, %rax
	movq	%rax, 2192(%rsp)        # 8-byte Spill
	leaq	.L.str270, %rax
	movq	%rax, 2184(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 2176(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 2168(%rsp)        # 8-byte Spill
	leaq	.L.str268, %rax
	movq	%rax, 2160(%rsp)        # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 2152(%rsp)        # 8-byte Spill
	leaq	.L.str269, %rax
	movq	%rax, 2144(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 2136(%rsp)        # 8-byte Spill
	leaq	.L.str254, %rax
	movq	%rax, 2128(%rsp)        # 8-byte Spill
	leaq	.L.str216, %rax
	movq	%rax, 2120(%rsp)        # 8-byte Spill
	leaq	.L.str260, %rax
	movq	%rax, 2112(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 2104(%rsp)        # 8-byte Spill
	movabsq	$74, %rax
	movq	%rax, 2096(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 2088(%rsp)        # 8-byte Spill
	leaq	.L.str217, %rax
	movq	%rax, 2080(%rsp)        # 8-byte Spill
	leaq	.L.str213, %rax
	movq	%rax, 2072(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 2064(%rsp)        # 8-byte Spill
	movabsq	$73, %rax
	movq	%rax, 2056(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 2048(%rsp)        # 8-byte Spill
	leaq	.L.str204, %rax
	movq	%rax, 2040(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 2032(%rsp)        # 8-byte Spill
	movabsq	$72, %rax
	movq	%rax, 2024(%rsp)        # 8-byte Spill
	leaq	.L.str251, %rax
	movq	%rax, 2016(%rsp)        # 8-byte Spill
	leaq	.L.str57138, %rax
	movq	%rax, 2008(%rsp)        # 8-byte Spill
	movabsq	$71, %rax
	movq	%rax, 2000(%rsp)        # 8-byte Spill
	leaq	.L.str267, %rax
	movq	%rax, 1992(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1984(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 1976(%rsp)        # 8-byte Spill
	leaq	.L.str248, %rax
	movq	%rax, 1968(%rsp)        # 8-byte Spill
	leaq	.L.str147, %rax
	movq	%rax, 1960(%rsp)        # 8-byte Spill
	leaq	.L.str266, %rax
	movq	%rax, 1952(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1944(%rsp)        # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 1936(%rsp)        # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 1928(%rsp)        # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 1920(%rsp)        # 8-byte Spill
	movabsq	$70, %rax
	movq	%rax, 1912(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 1904(%rsp)        # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 1896(%rsp)        # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 1888(%rsp)        # 8-byte Spill
	movabsq	$69, %rax
	movq	%rax, 1880(%rsp)        # 8-byte Spill
	leaq	.L.str239, %rax
	movq	%rax, 1872(%rsp)        # 8-byte Spill
	movabsq	$68, %rax
	movq	%rax, 1864(%rsp)        # 8-byte Spill
	leaq	.L.str265, %rax
	movq	%rax, 1856(%rsp)        # 8-byte Spill
	leaq	.L.str69150, %rax
	movq	%rax, 1848(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	leaq	.L.str264, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str64145, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str230, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	leaq	.L.str234, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	movabsq	$67, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	leaq	.L.str226, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	movabsq	$65, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	leaq	.L.str214, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	leaq	.L.str72153, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str218, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	leaq	.L.str77158, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str67148, %rax
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	leaq	.L.str66147, %rax
	movq	%rax, 1624(%rsp)        # 8-byte Spill
	leaq	.L.str55136, %rax
	movq	%rax, 1616(%rsp)        # 8-byte Spill
	leaq	.L.str58139, %rax
	movq	%rax, 1608(%rsp)        # 8-byte Spill
	leaq	.L.str53134, %rax
	movq	%rax, 1600(%rsp)        # 8-byte Spill
	leaq	.L.str61142, %rax
	movq	%rax, 1592(%rsp)        # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 1584(%rsp)        # 8-byte Spill
	leaq	.L.str209, %rax
	movq	%rax, 1576(%rsp)        # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 1568(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 1560(%rsp)        # 8-byte Spill
	leaq	.L.str54135, %rax
	movq	%rax, 1552(%rsp)        # 8-byte Spill
	leaq	.L.str43124, %rax
	movq	%rax, 1544(%rsp)        # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 1536(%rsp)        # 8-byte Spill
	movabsq	$63, %rax
	movq	%rax, 1528(%rsp)        # 8-byte Spill
	leaq	.L.str25106, %rax
	movq	%rax, 1520(%rsp)        # 8-byte Spill
	leaq	.L.str110, %rax
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 1488(%rsp)        # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 1456(%rsp)        # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 1448(%rsp)        # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 1440(%rsp)        # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 1432(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1424(%rsp)        # 8-byte Spill
	leaq	.L.str263, %rax
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	leaq	.L.str261, %rax
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	leaq	.L.str215, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str262, %rax
	.loc	2 63 0                  # kiss_fft.c:63:0
.Ltmp454:
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	movq	1400(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1360(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 1356(%rsp)        # 4-byte Spill
	movq	%rbp, %rsi
	movq	2288(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1344(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	2112(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1336(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1392(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1328(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movl	2276(%rsp), %eax        # 4-byte Reload
	movq	%r9, 1320(%rsp)         # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 1312(%rsp)        # 8-byte Spill
	movq	%r12, 1304(%rsp)        # 8-byte Spill
	movq	%r13, 1296(%rsp)        # 8-byte Spill
	movq	%rbp, 1288(%rsp)        # 8-byte Spill
	movq	%r14, 1280(%rsp)        # 8-byte Spill
	movq	%rbx, 1272(%rsp)        # 8-byte Spill
	movq	%r10, 1264(%rsp)        # 8-byte Spill
	movq	%r11, 1256(%rsp)        # 8-byte Spill
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2072(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1376(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2040(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2048(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1400(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1416(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1408(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2504(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1424(%rsp), %r8         # 8-byte Reload
	movq	1328(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1432(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1440(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2480(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1248(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1440(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1244(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1448(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1448(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1240(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	vmovss	1240(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1236(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2480(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1224(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1464(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2480(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1220(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1472(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1208(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1208(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1472(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1336(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1204(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1204(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	vmovss	1204(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1200(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1200(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1236(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1488(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1236(%rsp), %xmm0       # 4-byte Reload
	vmovss	1200(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1196(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1204(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1496(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1244(%rsp), %xmm0       # 4-byte Reload
	vmovss	1204(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1192(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1220(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1512(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1520(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1240(%rsp), %xmm0       # 4-byte Reload
	vmovss	1220(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1188(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1528(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1192(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1536(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1188(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1544(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1188(%rsp), %xmm0       # 4-byte Reload
	vmovss	1192(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp455:
	.loc	2 64 0                  # kiss_fft.c:64:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1184(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1960(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2392(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1176(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1172(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1552(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1552(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1168(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	vmovss	1168(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1164(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2008(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2392(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1152(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1148(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1136(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1136(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1568(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2280(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1132(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1132(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	vmovss	1132(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1128(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1128(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1576(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1164(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1584(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1164(%rsp), %xmm0       # 4-byte Reload
	vmovss	1128(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1124(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1132(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1600(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1172(%rsp), %xmm0       # 4-byte Reload
	vmovss	1132(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1120(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1148(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1608(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1168(%rsp), %xmm0       # 4-byte Reload
	vmovss	1148(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1116(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	2240(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1120(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1116(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1632(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1116(%rsp), %xmm0       # 4-byte Reload
	vmovss	1120(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp456:
	.loc	2 65 0                  # kiss_fft.c:65:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1112(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1640(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2384(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1104(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1640(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1100(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1648(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1648(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1096(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	vmovss	1096(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1092(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1664(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2384(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2296(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 1080(%rsp)        # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2384(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1076(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1672(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1064(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1064(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1060(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1060(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	vmovss	1060(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1056(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1056(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1680(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1092(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1092(%rsp), %xmm0       # 4-byte Reload
	vmovss	1056(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1052(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1060(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1696(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1704(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1100(%rsp), %xmm0       # 4-byte Reload
	vmovss	1060(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1048(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1076(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1728(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1096(%rsp), %xmm0       # 4-byte Reload
	vmovss	1076(%rsp), %xmm1       # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1044(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1048(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1744(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1044(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1752(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1044(%rsp), %xmm0       # 4-byte Reload
	vmovss	1048(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp457:
	.loc	2 67 0                  # kiss_fft.c:67:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1040(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2152(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1036(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	vmovss	1124(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1760(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1032(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2232(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1328(%rsp), %r8         # 8-byte Reload
	movq	%rcx, 1024(%rsp)        # 8-byte Spill
	movq	%r8, %rcx
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1020(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1784(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1020(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1792(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1020(%rsp), %xmm0       # 4-byte Reload
	vmovss	1112(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp458:
	.loc	2 68 0                  # kiss_fft.c:68:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1800(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1016(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1036(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1808(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1124(%rsp), %xmm0       # 4-byte Reload
	vmovss	1036(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1012(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1824(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	1012(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1832(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	1012(%rsp), %xmm0       # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1008(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1008(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1848(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1112(%rsp), %xmm0       # 4-byte Reload
	vmovss	1008(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1004(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1864(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1856(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	1004(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1872(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	1004(%rsp), %xmm0       # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp459:
	.loc	2 69 0                  # kiss_fft.c:69:0
	movq	1880(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1052(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	vmovss	1052(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 1000(%rsp)       # 4-byte Spill
	callq	trace_logger_log_double
	movq	1880(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1040(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	vmovss	1040(%rsp), %xmm1       # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp460:
	.loc	2 70 0                  # kiss_fft.c:70:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 996(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1912(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1052(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1888(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1896(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1196(%rsp), %xmm0       # 4-byte Reload
	vmovss	1052(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1904(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 992(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	1912(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1040(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1920(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1928(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1184(%rsp), %xmm0       # 4-byte Reload
	vmovss	1040(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp461:
	.loc	2 71 0                  # kiss_fft.c:71:0
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1936(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 988(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 984(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	984(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1944(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	984(%rsp), %xmm0        # 4-byte Reload
	vmovss	1000(%rsp), %xmm1       # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 980(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1952(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1176(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1960(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	980(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1968(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	980(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 976(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1976(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	976(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	1984(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	976(%rsp), %xmm0        # 4-byte Reload
	vmovss	996(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 972(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2000(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	1992(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1152(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2008(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	972(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2016(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	movq	2392(%rsp), %rdx        # 8-byte Reload
	vmovss	972(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
.Ltmp462:
	.loc	2 72 0                  # kiss_fft.c:72:0
	movq	2024(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2048(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2496(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2032(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1336(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2040(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2496(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1336(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 960(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2048(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp463:
	#DEBUG_VALUE: kf_bfly4:tw1 <- [RSP+960]
	.loc	2 73 0                  # kiss_fft.c:73:0
	movq	2056(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2080(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2368(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2064(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2280(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2072(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2368(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	2280(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 952(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2080(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp464:
	#DEBUG_VALUE: kf_bfly4:tw2 <- [RSP+952]
	.loc	2 74 0                  # kiss_fft.c:74:0
	movq	2096(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2120(%rsp), %rcx        # 8-byte Reload
	movq	2088(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2104(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2112(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2360(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1360(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 944(%rsp)         # 8-byte Spill
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2120(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp465:
	#DEBUG_VALUE: kf_bfly4:tw3 <- [RSP+944]
	.loc	2 75 0                  # kiss_fft.c:75:0
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 940(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	940(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2128(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2136(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1000(%rsp), %xmm0       # 4-byte Reload
	vmovss	940(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 936(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2144(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2152(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	936(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2160(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	936(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	2168(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 932(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	2176(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	932(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2184(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2192(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	996(%rsp), %xmm0        # 4-byte Reload
	vmovss	932(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	2200(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	vmovss	%xmm2, 928(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	2224(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2216(%rsp), %rcx        # 8-byte Reload
	movq	2208(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	2240(%rsp), %rsi        # 8-byte Reload
	movq	1024(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	2232(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	928(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	2256(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rdx        # 8-byte Reload
	movq	2248(%rsp), %rcx        # 8-byte Reload
	movq	1264(%rsp), %r8         # 8-byte Reload
	movq	1256(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	2296(%rsp), %rcx        # 8-byte Reload
	vmovss	928(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp466:
	.loc	2 77 0                  # kiss_fft.c:77:0
	movq	1296(%rsp), %rdi        # 8-byte Reload
	movq	1288(%rsp), %rsi        # 8-byte Reload
	movq	2288(%rsp), %rdx        # 8-byte Reload
	movq	2264(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	2276(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1312(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1304(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1272(%rsp), %rdi        # 8-byte Reload
	movq	1264(%rsp), %rsi        # 8-byte Reload
	movq	1264(%rsp), %rdx        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1280(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2347(%rsp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	1328(%rsp), %rsi        # 8-byte Reload
	movq	1328(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movq	1264(%rsp), %r9         # 8-byte Reload
	movq	1256(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	2347(%rsp), %al         # 1-byte Reload
	testb	$1, %al
	jne	.LBB12_3
.Ltmp467:
# BB#2:                                 #   in Loop: Header=BB12_1 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str261, %r8
	leaq	.L.str485, %rdx
	movabsq	$82, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str275, %r9
	leaq	.L.str283164, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str282, %r12
	leaq	.L.str235, %r13
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$81, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str280, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	movabsq	$80, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str281, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	leaq	.L.str278, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	movabsq	$79, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	leaq	.L.str279, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str276, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$78, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	leaq	.L.str277, %rax
	.loc	2 78 0                  # kiss_fft.c:78:0
.Ltmp468:
	movq	%rax, 760(%rsp)         # 8-byte Spill
	movq	768(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 752(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 744(%rsp)         # 8-byte Spill
	movq	%rdx, 736(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	784(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 728(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	896(%rsp), %rax         # 8-byte Reload
	movq	%r8, 720(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 712(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 704(%rsp)         # 8-byte Spill
	movl	%ebp, 700(%rsp)         # 4-byte Spill
	movq	%r15, 688(%rsp)         # 8-byte Spill
	movq	%r13, 680(%rsp)         # 8-byte Spill
	movq	%r12, 672(%rsp)         # 8-byte Spill
	movl	%ebx, 668(%rsp)         # 4-byte Spill
	movq	%r10, 656(%rsp)         # 8-byte Spill
	movq	%r11, 648(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 644(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	776(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1248(%rsp), %rax        # 8-byte Reload
	vmovss	644(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 79 0                  # kiss_fft.c:79:0
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 640(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rax        # 8-byte Reload
	vmovss	640(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 80 0                  # kiss_fft.c:80:0
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 636(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	864(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	848(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	880(%rsp), %rsi         # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	872(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1104(%rsp), %rax        # 8-byte Reload
	vmovss	636(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 81 0                  # kiss_fft.c:81:0
	movq	904(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	896(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	.loc	2 82 0                  # kiss_fft.c:82:0
	cvtss2sd	%xmm2, %xmm0
	movq	704(%rsp), %rdi         # 8-byte Reload
	movq	688(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	736(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 632(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	752(%rsp), %rdi         # 8-byte Reload
	movq	744(%rsp), %rsi         # 8-byte Reload
	movq	712(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	648(%rsp), %r8          # 8-byte Reload
	movl	668(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	920(%rsp), %rdi         # 8-byte Reload
	movq	728(%rsp), %rsi         # 8-byte Reload
	movq	728(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	720(%rsp), %r8          # 8-byte Reload
	movq	728(%rsp), %r9          # 8-byte Reload
	movq	736(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	632(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 628(%rsp)        # 4-byte Spill
	jmp	.LBB12_4
.Ltmp469:
.LBB12_3:                               #   in Loop: Header=BB12_1 Depth=1
	movabsq	$1, %rax
	movabsq	$0, %rcx
	leaq	.L.str261, %r8
	leaq	.L.str485, %rdx
	movabsq	$-1, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str274, %r9
	leaq	.L.str291, %r10
	movabsq	$2, %r11
	movl	$0, %ebx
	movl	$1, %ebp
	movabsq	$19134, %r14            # imm = 0x4ABE
	movabsq	$32, %r15
	leaq	.L.str290, %r12
	leaq	.L.str235, %r13
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$86, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	.L.str288, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	movabsq	$85, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str289, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	leaq	.L.str286, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	movabsq	$84, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	leaq	.L.str287, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str284, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	movabsq	$83, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str285, %rax
	.loc	2 83 0                  # kiss_fft.c:83:0
.Ltmp470:
	movq	%rax, 456(%rsp)         # 8-byte Spill
	movq	464(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 448(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 440(%rsp)         # 8-byte Spill
	movq	%rdx, 432(%rsp)         # 8-byte Spill
	movq	%r9, %rdx
	movq	480(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 424(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	592(%rsp), %rax         # 8-byte Reload
	movq	%r8, 416(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 408(%rsp)          # 8-byte Spill
	movl	%ebx, %r9d
	movl	$1, (%rsp)
	movq	%r14, 400(%rsp)         # 8-byte Spill
	movl	%ebp, 396(%rsp)         # 4-byte Spill
	movq	%r15, 384(%rsp)         # 8-byte Spill
	movq	%r13, 376(%rsp)         # 8-byte Spill
	movq	%r12, 368(%rsp)         # 8-byte Spill
	movl	%ebx, 364(%rsp)         # 4-byte Spill
	movq	%r10, 352(%rsp)         # 8-byte Spill
	movq	%r11, 344(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 340(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	464(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1248(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1248(%rsp), %rax        # 8-byte Reload
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 84 0                  # kiss_fft.c:84:0
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 336(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	496(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1224(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	336(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	512(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1224(%rsp), %rax        # 8-byte Reload
	vmovss	336(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 85 0                  # kiss_fft.c:85:0
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	988(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1032(%rsp), %xmm0       # 4-byte Reload
	vmovss	988(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 332(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	560(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	576(%rsp), %rsi         # 8-byte Reload
	movq	1104(%rsp), %rdx        # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	568(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1104(%rsp), %rax        # 8-byte Reload
	vmovss	332(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rax)
	.loc	2 86 0                  # kiss_fft.c:86:0
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	592(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	992(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	344(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	376(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1016(%rsp), %xmm0       # 4-byte Reload
	vmovss	992(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	384(%rsp), %rsi         # 8-byte Reload
	movq	616(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	424(%rsp), %r8          # 8-byte Reload
	movq	432(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 328(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	448(%rsp), %rdi         # 8-byte Reload
	movq	440(%rsp), %rsi         # 8-byte Reload
	movq	408(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	344(%rsp), %r8          # 8-byte Reload
	movl	364(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	616(%rsp), %rdi         # 8-byte Reload
	movq	424(%rsp), %rsi         # 8-byte Reload
	movq	424(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	416(%rsp), %r8          # 8-byte Reload
	movq	424(%rsp), %r9          # 8-byte Reload
	movq	432(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	328(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 628(%rsp)        # 4-byte Spill
.Ltmp471:
.LBB12_4:                               #   in Loop: Header=BB12_1 Depth=1
	vmovss	628(%rsp), %xmm0        # 4-byte Reload
	movabsq	$1, %rax
	leaq	.L.str294, %rcx
	movabsq	$0, %rdx
	leaq	.L.str485, %rsi
	movabsq	$2, %rdi
	leaq	.L.str259, %r8
	movabsq	$3, %r9
	leaq	.L.str296, %r10
	movabsq	$89, %r11
	leaq	.L.str166, %rbx
	leaq	.L.str261, %r14
	leaq	.L.str295, %r15
	movl	$0, %ebp
	movl	$1, %r12d
	movabsq	$19134, %r13            # imm = 0x4ABE
	movq	%rax, 320(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 312(%rsp)         # 8-byte Spill
	leaq	.L.str262, %rax
	movq	%rax, 304(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 296(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	leaq	.L.str215, %rax
	movq	%rax, 280(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 264(%rsp)         # 8-byte Spill
	leaq	.L.str263, %rax
	movq	%rax, 256(%rsp)         # 8-byte Spill
	leaq	.L.str140, %rax
	movq	%rax, 248(%rsp)         # 8-byte Spill
	movabsq	$88, %rax
	movq	%rax, 240(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 232(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 224(%rsp)         # 8-byte Spill
	leaq	.L.str292, %rax
	movq	%rax, 216(%rsp)         # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 208(%rsp)         # 8-byte Spill
	movabsq	$81, %rax
	movq	%rax, 200(%rsp)         # 8-byte Spill
	leaq	.L.str293, %rax
	movq	%rax, 192(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 184(%rsp)         # 8-byte Spill
	leaq	.L.str274, %rax
	movq	%rax, 176(%rsp)         # 8-byte Spill
	leaq	.L.str290, %rax
	movq	%rax, 168(%rsp)         # 8-byte Spill
	leaq	.L.str282, %rax
	movq	%rax, 160(%rsp)         # 8-byte Spill
	leaq	.L.str275, %rax
	movq	%rax, 152(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	.loc	2 81 0                  # kiss_fft.c:81:0
.Ltmp472:
	movq	%rax, 144(%rsp)         # 8-byte Spill
	movq	272(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 136(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 128(%rsp)         # 8-byte Spill
	movq	%rbx, %rsi
	movq	%rdx, 120(%rsp)         # 8-byte Spill
	movq	%r14, %rdx
	movq	216(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 112(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	144(%rsp), %rax         # 8-byte Reload
	movq	%r8, 104(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	%r9, 96(%rsp)           # 8-byte Spill
	movl	%ebp, %r9d
	movl	$1, (%rsp)
	vmovss	%xmm0, 92(%rsp)         # 4-byte Spill
	movq	%r15, 80(%rsp)          # 8-byte Spill
	movl	%ebp, 76(%rsp)          # 4-byte Spill
	movl	%r12d, 72(%rsp)         # 4-byte Spill
	movq	%r13, 64(%rsp)          # 8-byte Spill
	movq	%r14, 56(%rsp)          # 8-byte Spill
	movq	%rbx, 48(%rsp)          # 8-byte Spill
	movq	%r10, 40(%rsp)          # 8-byte Spill
	movq	%r11, 32(%rsp)          # 8-byte Spill
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movq	320(%rsp), %r9          # 8-byte Reload
	movq	152(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	168(%rsp), %r8          # 8-byte Reload
	movq	320(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	216(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	176(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	200(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	184(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	1080(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	216(%rsp), %rcx         # 8-byte Reload
	movq	120(%rsp), %r8          # 8-byte Reload
	movq	128(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rax        # 8-byte Reload
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rax)
.Ltmp473:
	.loc	2 88 0                  # kiss_fft.c:88:0
	movq	240(%rsp), %rdi         # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	256(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	2296(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	248(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	2296(%rsp), %rax        # 8-byte Reload
	addq	$8, %rax
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	256(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 24(%rsp)          # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp474:
	#DEBUG_VALUE: kf_bfly4:Fout <- [RSP+24]
	.loc	2 89 0                  # kiss_fft.c:89:0
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	304(%rsp), %rcx         # 8-byte Reload
	movq	264(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	1344(%rsp), %rdx        # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1344(%rsp), %rax        # 8-byte Reload
	addq	$-1, %rax
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 16(%rsp)          # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp475:
	#DEBUG_VALUE: kf_bfly4:k <- [RSP+16]
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	112(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	120(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	312(%rsp), %rsi         # 8-byte Reload
	movq	16(%rsp), %rdx          # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	304(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	16(%rsp), %rax          # 8-byte Reload
	cmpq	$0, %rax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ebp
	movl	%ebp, %edx
	movq	64(%rsp), %rdi          # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 15(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	48(%rsp), %rsi          # 8-byte Reload
	movq	56(%rsp), %rdx          # 8-byte Reload
	movq	80(%rsp), %rcx          # 8-byte Reload
	movq	136(%rsp), %r8          # 8-byte Reload
	movl	76(%rsp), %r9d          # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	96(%rsp), %rdi          # 8-byte Reload
	movq	120(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	40(%rsp), %r8           # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	136(%rsp), %rdi         # 8-byte Reload
	movq	120(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	104(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %ebp
	movl	%ebp, %edx
	movq	320(%rsp), %rdi         # 8-byte Reload
	movq	320(%rsp), %rsi         # 8-byte Reload
	movq	320(%rsp), %rcx         # 8-byte Reload
	movq	112(%rsp), %r8          # 8-byte Reload
	movq	120(%rsp), %r9          # 8-byte Reload
	movq	128(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	15(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	16(%rsp), %rsi          # 8-byte Reload
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	24(%rsp), %r8           # 8-byte Reload
	movq	%rcx, 2336(%rsp)        # 8-byte Spill
	movq	%rdx, 2328(%rsp)        # 8-byte Spill
	movq	%rsi, 2320(%rsp)        # 8-byte Spill
	movq	%rdi, 2312(%rsp)        # 8-byte Spill
	movq	%r8, 2304(%rsp)         # 8-byte Spill
	jne	.LBB12_5
	jmp	.LBB12_1
.Ltmp476:
.LBB12_5:
	movabsq	$90, %rdi
	leaq	.L.str166, %rsi
	leaq	.L.str296, %rdx
	leaq	.L.str297, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 90 0                  # kiss_fft.c:90:0
	movl	$1, (%rsp)
	movl	%eax, 8(%rsp)           # 4-byte Spill
	callq	trace_logger_log0
	addq	$2760, %rsp             # imm = 0xAC8
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp477:
.Ltmp478:
	.size	kf_bfly4, .Ltmp478-kf_bfly4
.Lfunc_end12:
	.cfi_endproc

	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.LCPI13_0:
	.quad	4602678819172646912     # double 0.5
	.text
	.align	16, 0x90
	.type	kf_bfly3,@function
kf_bfly3:                               # @kf_bfly3
	.cfi_startproc
.Lfunc_begin13:
	.loc	2 98 0                  # kiss_fft.c:98:0
# BB#0:
	pushq	%rbp
.Ltmp486:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp487:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp488:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp489:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp490:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp491:
	.cfi_def_cfa_offset 56
	subq	$1848, %rsp             # imm = 0x738
.Ltmp492:
	.cfi_def_cfa_offset 1904
.Ltmp493:
	.cfi_offset %rbx, -56
.Ltmp494:
	.cfi_offset %r12, -48
.Ltmp495:
	.cfi_offset %r13, -40
.Ltmp496:
	.cfi_offset %r14, -32
.Ltmp497:
	.cfi_offset %r15, -24
.Ltmp498:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str212, %r9
	leaq	.L.str485, %r10
	movabsq	$108, %r11
	leaq	.L.str162, %rbx
	leaq	.L.str182, %r14
	leaq	.L.str211, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1840(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1832(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1824(%rsp)        # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 1816(%rsp)        # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 1808(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1800(%rsp)        # 8-byte Spill
	movabsq	$117, %rax
	movq	%rax, 1792(%rsp)        # 8-byte Spill
	movabsq	$20, %rax
	movq	%rax, 1784(%rsp)        # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 1776(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1768(%rsp)        # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 1760(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1752(%rsp)        # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 1744(%rsp)        # 8-byte Spill
	movabsq	$106, %rax
	movq	%rax, 1736(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1728(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 1720(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 1712(%rsp)        # 8-byte Spill
	movabsq	$104, %rax
	movq	%rax, 1704(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1696(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 1688(%rsp)        # 8-byte Spill
	movabsq	$5, %rax
	movq	%rax, 1680(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 1672(%rsp)        # 8-byte Spill
	movabsq	$12, %rax
	movq	%rax, 1664(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 1656(%rsp)        # 8-byte Spill
	movabsq	$100, %rax
	movq	%rax, 1648(%rsp)        # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 1640(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	.loc	2 93 0 prologue_end     # kiss_fft.c:93:0
.Ltmp499:
	movq	%rax, 1632(%rsp)        # 8-byte Spill
	movq	1640(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 1624(%rsp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	1824(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 1616(%rsp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	1624(%rsp), %rax        # 8-byte Reload
	movq	%rdx, 1608(%rsp)        # 8-byte Spill
	movq	%rax, %rdx
	movq	1840(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 1600(%rsp)        # 8-byte Spill
	movq	%rax, %rcx
	movq	1632(%rsp), %rax        # 8-byte Reload
	movq	%r8, 1592(%rsp)         # 8-byte Spill
	movq	%rax, %r8
	movq	1592(%rsp), %rax        # 8-byte Reload
	movq	%r9, 1584(%rsp)         # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 1580(%rsp)        # 4-byte Spill
	movq	%r15, 1568(%rsp)        # 8-byte Spill
	movq	%r12, 1560(%rsp)        # 8-byte Spill
	movl	%r13d, 1556(%rsp)       # 4-byte Spill
	movq	%r14, 1544(%rsp)        # 8-byte Spill
	movq	%rbx, 1536(%rsp)        # 8-byte Spill
	movq	%r10, 1528(%rsp)        # 8-byte Spill
	movq	%r11, 1520(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1640(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly3:Fout <- [RSP+1624]
	#DEBUG_VALUE: kf_bfly3:fstride <- [RSP+1616]
	#DEBUG_VALUE: kf_bfly3:st <- [RSP+1608]
	#DEBUG_VALUE: kf_bfly3:m <- [RSP+1600]
.Ltmp500:
	#DEBUG_VALUE: kf_bfly3:k <- [RSP+1600]
	.loc	2 100 0                 # kiss_fft.c:100:0
	movq	1648(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1656(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1600(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1656(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1512(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
.Ltmp501:
	#DEBUG_VALUE: kf_bfly3:m2 <- [RSP+1512]
	.loc	2 104 0                 # kiss_fft.c:104:0
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1688(%rsp), %rcx        # 8-byte Reload
	movq	1664(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1672(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1600(%rsp), %rax        # 8-byte Reload
	movq	1616(%rsp), %rcx        # 8-byte Reload
	imulq	%rcx, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1504(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1712(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1680(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1744(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1504(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1688(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1760(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1504(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$4, %rax
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1496(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	1704(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1696(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1496(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1712(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	movq	1504(%rsp), %rcx        # 8-byte Reload
	vmovss	268(%rax,%rcx,8), %xmm0
	.loc	2 106 0                 # kiss_fft.c:106:0
	cvtss2sd	%xmm0, %xmm1
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 1492(%rsp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1720(%rsp), %rcx        # 8-byte Reload
	movq	1592(%rsp), %r8         # 8-byte Reload
	movq	1528(%rsp), %r9         # 8-byte Reload
	callq	trace_logger_log_double
	movq	1736(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1776(%rsp), %rcx        # 8-byte Reload
	movq	1728(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1744(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1760(%rsp), %rdi        # 8-byte Reload
	movq	1752(%rsp), %rsi        # 8-byte Reload
	movq	1760(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1608(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1768(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	1608(%rsp), %rax        # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1776(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1480(%rsp)        # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp502:
	#DEBUG_VALUE: kf_bfly3:tw2 <- [RSP+1480]
	#DEBUG_VALUE: kf_bfly3:tw1 <- [RSP+1480]
	.loc	2 117 0                 # kiss_fft.c:117:0
	movq	1792(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1816(%rsp), %rcx        # 8-byte Reload
	movq	1784(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1560(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1840(%rsp), %rdx        # 8-byte Reload
	movq	1592(%rsp), %rcx        # 8-byte Reload
	movq	1800(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1808(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1616(%rsp), %rax        # 8-byte Reload
	shlq	$1, %rax
.Ltmp503:
	.loc	2 108 0                 # kiss_fft.c:108:0
	movq	1832(%rsp), %rdi        # 8-byte Reload
	movq	1824(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1816(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %r10        # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 1472(%rsp)        # 8-byte Spill
	callq	trace_logger_log_int
	movq	1520(%rsp), %rdi        # 8-byte Reload
	movq	1536(%rsp), %rsi        # 8-byte Reload
	movq	1544(%rsp), %rdx        # 8-byte Reload
	movq	1568(%rsp), %rcx        # 8-byte Reload
	movq	1560(%rsp), %r8         # 8-byte Reload
	movl	1580(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1840(%rsp), %rdi        # 8-byte Reload
	movq	1592(%rsp), %rsi        # 8-byte Reload
	movq	1592(%rsp), %rdx        # 8-byte Reload
	movq	1840(%rsp), %rcx        # 8-byte Reload
	movq	1584(%rsp), %r8         # 8-byte Reload
	movq	1592(%rsp), %r9         # 8-byte Reload
	movq	1528(%rsp), %rax        # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1480(%rsp), %rax        # 8-byte Reload
	movq	1480(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	1624(%rsp), %rsi        # 8-byte Reload
	movq	%rax, 1464(%rsp)        # 8-byte Spill
	movq	%rcx, 1456(%rsp)        # 8-byte Spill
	movq	%rdx, 1448(%rsp)        # 8-byte Spill
	movq	%rsi, 1440(%rsp)        # 8-byte Spill
.Ltmp504:
.LBB13_1:                               # =>This Inner Loop Header: Depth=1
	movq	1440(%rsp), %rax        # 8-byte Reload
	movq	1448(%rsp), %rcx        # 8-byte Reload
	movq	1456(%rsp), %rdx        # 8-byte Reload
	movq	1464(%rsp), %rsi        # 8-byte Reload
	movabsq	$1, %rdi
	leaq	.L.str254, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$2, %r11
	leaq	.L.str212, %rbx
	movabsq	$3, %r14
	leaq	.L.str256, %r15
	movabsq	$133, %r12
	leaq	.L.str162, %r13
	leaq	.L.str255, %rbp
	movq	%rsi, 1432(%rsp)        # 8-byte Spill
	movl	$0, %esi
	movl	%esi, 1428(%rsp)        # 4-byte Spill
	movl	$1, %esi
	movq	%rax, 1416(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1408(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1400(%rsp)        # 8-byte Spill
	leaq	.L.str216, %rax
	movq	%rax, 1392(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 1384(%rsp)        # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 1376(%rsp)        # 8-byte Spill
	leaq	.L.str215, %rax
	movq	%rax, 1368(%rsp)        # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 1360(%rsp)        # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 1352(%rsp)        # 8-byte Spill
	leaq	.L.str217, %rax
	movq	%rax, 1344(%rsp)        # 8-byte Spill
	leaq	.L.str140, %rax
	movq	%rax, 1336(%rsp)        # 8-byte Spill
	movabsq	$132, %rax
	movq	%rax, 1328(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1320(%rsp)        # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 1312(%rsp)        # 8-byte Spill
	leaq	.L.str252, %rax
	movq	%rax, 1304(%rsp)        # 8-byte Spill
	leaq	.L.str25106, %rax
	movq	%rax, 1296(%rsp)        # 8-byte Spill
	movabsq	$130, %rax
	movq	%rax, 1288(%rsp)        # 8-byte Spill
	leaq	.L.str253, %rax
	movq	%rax, 1280(%rsp)        # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 1272(%rsp)        # 8-byte Spill
	leaq	.L.str234, %rax
	movq	%rax, 1264(%rsp)        # 8-byte Spill
	leaq	.L.str251, %rax
	movq	%rax, 1256(%rsp)        # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 1248(%rsp)        # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 1240(%rsp)        # 8-byte Spill
	leaq	.L.str249, %rax
	movq	%rax, 1232(%rsp)        # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 1224(%rsp)        # 8-byte Spill
	movabsq	$129, %rax
	movq	%rax, 1216(%rsp)        # 8-byte Spill
	leaq	.L.str250, %rax
	movq	%rax, 1208(%rsp)        # 8-byte Spill
	leaq	.L.str248, %rax
	movq	%rax, 1200(%rsp)        # 8-byte Spill
	leaq	.L.str235, %rax
	movq	%rax, 1192(%rsp)        # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 1184(%rsp)        # 8-byte Spill
	leaq	.L.str246, %rax
	movq	%rax, 1176(%rsp)        # 8-byte Spill
	leaq	.L.str55136, %rax
	movq	%rax, 1168(%rsp)        # 8-byte Spill
	movabsq	$127, %rax
	movq	%rax, 1160(%rsp)        # 8-byte Spill
	leaq	.L.str247, %rax
	movq	%rax, 1152(%rsp)        # 8-byte Spill
	leaq	.L.str245, %rax
	movq	%rax, 1144(%rsp)        # 8-byte Spill
	leaq	.L.str243, %rax
	movq	%rax, 1136(%rsp)        # 8-byte Spill
	leaq	.L.str43124, %rax
	movq	%rax, 1128(%rsp)        # 8-byte Spill
	movabsq	$126, %rax
	movq	%rax, 1120(%rsp)        # 8-byte Spill
	leaq	.L.str244, %rax
	movq	%rax, 1112(%rsp)        # 8-byte Spill
	leaq	.L.str242, %rax
	movq	%rax, 1104(%rsp)        # 8-byte Spill
	leaq	.L.str240, %rax
	movq	%rax, 1096(%rsp)        # 8-byte Spill
	leaq	.L.str226, %rax
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	movabsq	$124, %rax
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	leaq	.L.str241, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str69150, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str239, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str237, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	leaq	.L.str218, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	leaq	.L.str238, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str236, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	leaq	.L.str67148, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str889, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str72153, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	movabsq	$122, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	leaq	.L.str71152, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	leaq	.L.str232, %rax
	movq	%rax, 968(%rsp)         # 8-byte Spill
	movabsq	$120, %rax
	movq	%rax, 960(%rsp)         # 8-byte Spill
	leaq	.L.str233, %rax
	movq	%rax, 952(%rsp)         # 8-byte Spill
	leaq	.L.str231, %rax
	movq	%rax, 944(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 936(%rsp)         # 8-byte Spill
	leaq	.L.str228, %rax
	movq	%rax, 928(%rsp)         # 8-byte Spill
	leaq	.L.str230, %rax
	vmovsd	.LCPI13_0, %xmm0
	movq	%rax, 920(%rsp)         # 8-byte Spill
	leaq	.L.str229, %rax
	movq	%rax, 912(%rsp)         # 8-byte Spill
	movabsq	$41, %rax
	movq	%rax, 904(%rsp)         # 8-byte Spill
	leaq	.L.str227, %rax
	movq	%rax, 896(%rsp)         # 8-byte Spill
	leaq	.L.str224, %rax
	movq	%rax, 888(%rsp)         # 8-byte Spill
	movabsq	$119, %rax
	movq	%rax, 880(%rsp)         # 8-byte Spill
	leaq	.L.str225, %rax
	movq	%rax, 872(%rsp)         # 8-byte Spill
	leaq	.L.str223, %rax
	movq	%rax, 864(%rsp)         # 8-byte Spill
	leaq	.L.str220, %rax
	movq	%rax, 856(%rsp)         # 8-byte Spill
	leaq	.L.str222, %rax
	movq	%rax, 848(%rsp)         # 8-byte Spill
	leaq	.L.str221, %rax
	movq	%rax, 840(%rsp)         # 8-byte Spill
	leaq	.L.str219, %rax
	movq	%rax, 832(%rsp)         # 8-byte Spill
	leaq	.L.str214, %rax
	movq	%rax, 824(%rsp)         # 8-byte Spill
	leaq	.L.str213, %rax
	movq	%rax, 816(%rsp)         # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 808(%rsp)         # 8-byte Spill
	movabsq	$117, %rax
	movq	%rax, 800(%rsp)         # 8-byte Spill
	leaq	.L.str77158, %rax
	movq	%rax, 792(%rsp)         # 8-byte Spill
	leaq	.L.str204, %rax
	movq	%rax, 784(%rsp)         # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$116, %rax
	movq	%rax, 768(%rsp)         # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str66147, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	movabsq	$115, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	leaq	.L.str61142, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	movabsq	$114, %rax
	movq	%rax, 720(%rsp)         # 8-byte Spill
	leaq	.L.str64145, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	leaq	.L.str209, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	movabsq	$112, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str53134, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	leaq	.L.str58139, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str54135, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str57138, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	leaq	.L.str147, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	movabsq	$111, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	leaq	.L.str104, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str110, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str990, %rax
	.loc	2 111 0                 # kiss_fft.c:111:0
.Ltmp505:
	movq	%rax, 496(%rsp)         # 8-byte Spill
	movq	1360(%rsp), %rax        # 8-byte Reload
	movq	%rdi, 488(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movl	%esi, 484(%rsp)         # 4-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 472(%rsp)         # 8-byte Spill
	movq	%rbx, %rdx
	movq	816(%rsp), %rax         # 8-byte Reload
	movq	%rcx, 464(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	504(%rsp), %rax         # 8-byte Reload
	movq	%r8, 456(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	1428(%rsp), %eax        # 4-byte Reload
	movq	%r9, 448(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r12, 440(%rsp)         # 8-byte Spill
	movq	%r13, 432(%rsp)         # 8-byte Spill
	movq	%rbp, 424(%rsp)         # 8-byte Spill
	vmovsd	%xmm0, 416(%rsp)        # 8-byte Spill
	movq	%r15, 408(%rsp)         # 8-byte Spill
	movq	%r14, 400(%rsp)         # 8-byte Spill
	movq	%r10, 392(%rsp)         # 8-byte Spill
	movq	%r11, 384(%rsp)         # 8-byte Spill
	movq	%rbx, 376(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	784(%rsp), %rcx         # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	496(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1368(%rsp), %rcx        # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	464(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	1360(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1336(%rsp), %rcx        # 8-byte Reload
	movq	504(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	376(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1624(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	512(%rsp), %r8          # 8-byte Reload
	movq	488(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	520(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1224(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 368(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 364(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	528(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 360(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	360(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 356(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1296(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	536(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1600(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 344(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 340(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 328(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	328(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	544(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	472(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 324(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	vmovss	324(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 320(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	320(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	356(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	356(%rsp), %xmm0        # 4-byte Reload
	vmovss	320(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 316(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	324(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	576(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	364(%rsp), %xmm0        # 4-byte Reload
	vmovss	324(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 312(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	340(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	584(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	360(%rsp), %xmm0        # 4-byte Reload
	vmovss	340(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 308(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	600(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	312(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	608(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	308(%rsp), %xmm0        # 4-byte Reload
	vmovss	312(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp506:
	.loc	2 112 0                 # kiss_fft.c:112:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 304(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1128(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1512(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 296(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	296(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 292(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	624(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	624(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 288(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	vmovss	288(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 284(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1168(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1512(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1416(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	addq	$4, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 272(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 268(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 256(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	640(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1432(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 252(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 248(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	248(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	648(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	656(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	284(%rsp), %xmm0        # 4-byte Reload
	vmovss	248(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 244(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	252(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	672(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	292(%rsp), %xmm0        # 4-byte Reload
	vmovss	252(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 240(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	268(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	680(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	288(%rsp), %xmm0        # 4-byte Reload
	vmovss	268(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 236(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	696(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	240(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	704(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	712(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	236(%rsp), %xmm0        # 4-byte Reload
	vmovss	240(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp507:
	.loc	2 114 0                 # kiss_fft.c:114:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 232(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 228(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	720(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	vmovss	232(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp508:
	.loc	2 115 0                 # kiss_fft.c:115:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 224(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	244(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	736(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	316(%rsp), %xmm0        # 4-byte Reload
	vmovss	244(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 220(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	744(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	232(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	760(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	304(%rsp), %xmm0        # 4-byte Reload
	vmovss	232(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
.Ltmp509:
	.loc	2 116 0                 # kiss_fft.c:116:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 216(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	792(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1616(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	776(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	472(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	784(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1616(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	472(%rsp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 208(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	792(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp510:
	#DEBUG_VALUE: kf_bfly3:tw1 <- [RSP+208]
	.loc	2 117 0                 # kiss_fft.c:117:0
	movq	800(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	824(%rsp), %rcx         # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1472(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	808(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1432(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	816(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1472(%rsp), %rcx        # 8-byte Reload
	shlq	$3, %rcx
	movq	1432(%rsp), %rdx        # 8-byte Reload
	addq	%rcx, %rdx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rdx, 200(%rsp)         # 8-byte Spill
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	824(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp511:
	#DEBUG_VALUE: kf_bfly3:tw2 <- [RSP+200]
	.loc	2 119 0                 # kiss_fft.c:119:0
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1040(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 196(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	832(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	196(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 184(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 176(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	176(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	176(%rsp), %xmm0        # 8-byte Reload
	vmovsd	416(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 168(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	168(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	848(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	184(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	856(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	184(%rsp), %xmm0        # 8-byte Reload
	vmovsd	168(%rsp), %xmm1        # 8-byte Reload
	vsubsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 160(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	160(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	864(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	160(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 156(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	880(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	872(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	888(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 120 0                 # kiss_fft.c:120:0
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	addq	$4, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 144(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 140(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	140(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 128(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	904(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm1, 120(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	416(%rsp), %xmm0        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	1384(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	120(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	912(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	120(%rsp), %xmm0        # 8-byte Reload
	vmovsd	416(%rsp), %xmm1        # 8-byte Reload
	vmulsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 112(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	112(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	128(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	928(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	128(%rsp), %xmm0        # 8-byte Reload
	vmovsd	112(%rsp), %xmm1        # 8-byte Reload
	vsubsd	%xmm1, %xmm0, %xmm2
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovaps	%xmm2, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovsd	%xmm2, 104(%rsp)        # 8-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	936(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	vmovsd	104(%rsp), %xmm0        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	944(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovsd	104(%rsp), %xmm0        # 8-byte Reload
	cvtsd2ss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm1, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	960(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	952(%rsp), %rcx         # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	968(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 122 0                 # kiss_fft.c:122:0
.Ltmp512:
	movq	992(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	220(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	976(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	vmovss	220(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	992(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	984(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	216(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1000(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	1492(%rsp), %xmm0       # 4-byte Reload
	vmovss	216(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
.Ltmp513:
	.loc	2 124 0                 # kiss_fft.c:124:0
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 92(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 88(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	228(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1016(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1024(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	88(%rsp), %xmm0         # 4-byte Reload
	vmovss	228(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 84(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1032(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1040(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 80(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1056(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	224(%rsp), %xmm0        # 4-byte Reload
	vmovss	80(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 76(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1072(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	144(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1088(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1096(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	vmovss	76(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp514:
	.loc	2 126 0                 # kiss_fft.c:126:0
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 72(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	72(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1104(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	vmovss	72(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 68(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1120(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1112(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	296(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1128(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1136(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 127 0                 # kiss_fft.c:127:0
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 64(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1144(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	vmovss	96(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 60(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1160(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1152(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	272(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1168(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1176(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1512(%rsp), %rdx        # 8-byte Reload
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 129 0                 # kiss_fft.c:129:0
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 56(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	1184(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	92(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1192(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1200(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	vmovss	92(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 52(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1216(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1208(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	368(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1224(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1232(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx,%rdx,8)
	.loc	2 130 0                 # kiss_fft.c:130:0
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	1240(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	4(%rcx,%rdx,8), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	vmovss	%xmm0, 48(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	1248(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1256(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1264(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	48(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 44(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	1288(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1280(%rsp), %rcx        # 8-byte Reload
	movq	1272(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	344(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1296(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	44(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1312(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	1304(%rsp), %rcx        # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	392(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	1416(%rsp), %rcx        # 8-byte Reload
	movq	1600(%rsp), %rdx        # 8-byte Reload
	vmovss	44(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx,%rdx,8)
	.loc	2 132 0                 # kiss_fft.c:132:0
	movq	1328(%rsp), %rdi        # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1344(%rsp), %rcx        # 8-byte Reload
	movq	1320(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	488(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1416(%rsp), %rdx        # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1336(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	1416(%rsp), %rcx        # 8-byte Reload
	addq	$8, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	1344(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp515:
	#DEBUG_VALUE: kf_bfly3:Fout <- [RSP+32]
	.loc	2 133 0                 # kiss_fft.c:133:0
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	1392(%rsp), %rcx        # 8-byte Reload
	movq	1352(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	1360(%rsp), %rdx        # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	464(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1368(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	464(%rsp), %rcx         # 8-byte Reload
	addq	$-1, %rcx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	488(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
.Ltmp516:
	#DEBUG_VALUE: kf_bfly3:k <- [RSP+24]
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	1376(%rsp), %r8         # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	1384(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	1400(%rsp), %rsi        # 8-byte Reload
	movq	24(%rsp), %rdx          # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	1392(%rsp), %r8         # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	24(%rsp), %rcx          # 8-byte Reload
	cmpq	$0, %rcx
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	1408(%rsp), %rdi        # 8-byte Reload
	movq	488(%rsp), %rsi         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 23(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	440(%rsp), %rdi         # 8-byte Reload
	movq	432(%rsp), %rsi         # 8-byte Reload
	movq	376(%rsp), %rdx         # 8-byte Reload
	movq	424(%rsp), %rcx         # 8-byte Reload
	movq	384(%rsp), %r8          # 8-byte Reload
	movl	1428(%rsp), %r9d        # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	408(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	384(%rsp), %rdi         # 8-byte Reload
	movq	448(%rsp), %rsi         # 8-byte Reload
	movq	448(%rsp), %rdx         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	23(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	488(%rsp), %rdi         # 8-byte Reload
	movq	488(%rsp), %rsi         # 8-byte Reload
	movq	488(%rsp), %rcx         # 8-byte Reload
	movq	456(%rsp), %r8          # 8-byte Reload
	movq	448(%rsp), %r9          # 8-byte Reload
	movq	392(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	23(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	200(%rsp), %rcx         # 8-byte Reload
	movq	208(%rsp), %rdx         # 8-byte Reload
	movq	24(%rsp), %rsi          # 8-byte Reload
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	%rcx, 1464(%rsp)        # 8-byte Spill
	movq	%rdx, 1456(%rsp)        # 8-byte Spill
	movq	%rsi, 1448(%rsp)        # 8-byte Spill
	movq	%rdi, 1440(%rsp)        # 8-byte Spill
	jne	.LBB13_2
	jmp	.LBB13_1
.Ltmp517:
.LBB13_2:
	movabsq	$134, %rdi
	leaq	.L.str162, %rsi
	leaq	.L.str256, %rdx
	leaq	.L.str257, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 134 0                 # kiss_fft.c:134:0
	movl	$1, (%rsp)
	movl	%eax, 16(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$1848, %rsp             # imm = 0x738
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp518:
.Ltmp519:
	.size	kf_bfly3, .Ltmp519-kf_bfly3
.Lfunc_end13:
	.cfi_endproc

	.align	16, 0x90
	.type	kf_bfly2,@function
kf_bfly2:                               # @kf_bfly2
	.cfi_startproc
.Lfunc_begin14:
	.loc	2 27 0                  # kiss_fft.c:27:0
# BB#0:
	pushq	%rbp
.Ltmp527:
	.cfi_def_cfa_offset 16
	pushq	%r15
.Ltmp528:
	.cfi_def_cfa_offset 24
	pushq	%r14
.Ltmp529:
	.cfi_def_cfa_offset 32
	pushq	%r13
.Ltmp530:
	.cfi_def_cfa_offset 40
	pushq	%r12
.Ltmp531:
	.cfi_def_cfa_offset 48
	pushq	%rbx
.Ltmp532:
	.cfi_def_cfa_offset 56
	subq	$1096, %rsp             # imm = 0x448
.Ltmp533:
	.cfi_def_cfa_offset 1152
.Ltmp534:
	.cfi_offset %rbx, -56
.Ltmp535:
	.cfi_offset %r12, -48
.Ltmp536:
	.cfi_offset %r13, -40
.Ltmp537:
	.cfi_offset %r14, -32
.Ltmp538:
	.cfi_offset %r15, -24
.Ltmp539:
	.cfi_offset %rbp, -16
	movabsq	$1, %rax
	movabsq	$0, %r8
	leaq	.L.str202, %r9
	leaq	.L.str485, %r10
	movabsq	$32, %r11
	leaq	.L.str158, %rbx
	leaq	.L.str182, %r14
	leaq	.L.str201, %r15
	movabsq	$2, %r12
	movl	$0, %ebp
	movl	$1, %r13d
	movq	%rax, 1088(%rsp)        # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 1080(%rsp)        # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 1072(%rsp)        # 8-byte Spill
	leaq	.L.str788, %rax
	movq	%rax, 1064(%rsp)        # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 1056(%rsp)        # 8-byte Spill
	leaq	.L.str687, %rax
	movq	%rax, 1048(%rsp)        # 8-byte Spill
	movabsq	$31, %rax
	movq	%rax, 1040(%rsp)        # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 1032(%rsp)        # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 1024(%rsp)        # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 1016(%rsp)        # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 1008(%rsp)        # 8-byte Spill
	leaq	.L.str117, %rax
	movq	%rax, 1000(%rsp)        # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 992(%rsp)         # 8-byte Spill
	movabsq	$3, %rax
	movq	%rax, 984(%rsp)         # 8-byte Spill
	movabsq	$4, %rax
	movq	%rax, 976(%rsp)         # 8-byte Spill
	movabsq	$24601, %rax            # imm = 0x6019
	movq	%rax, 968(%rsp)         # 8-byte Spill
	leaq	.L.str133, %rax
	.loc	2 22 0 prologue_end     # kiss_fft.c:22:0
.Ltmp540:
	movq	%rax, 960(%rsp)         # 8-byte Spill
	movq	968(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 952(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	1072(%rsp), %rax        # 8-byte Reload
	movq	%rsi, 944(%rsp)         # 8-byte Spill
	movq	%rax, %rsi
	movq	952(%rsp), %rax         # 8-byte Reload
	movq	%rdx, 936(%rsp)         # 8-byte Spill
	movq	%rax, %rdx
	movq	1088(%rsp), %rax        # 8-byte Reload
	movl	%ecx, 932(%rsp)         # 4-byte Spill
	movq	%rax, %rcx
	movq	1056(%rsp), %rax        # 8-byte Reload
	movq	%r8, 920(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movq	920(%rsp), %rax         # 8-byte Reload
	movq	%r9, 912(%rsp)          # 8-byte Spill
	movq	%rax, %r9
	movq	%r10, (%rsp)
	movl	%ebp, 908(%rsp)         # 4-byte Spill
	movq	%r15, 896(%rsp)         # 8-byte Spill
	movq	%r12, 888(%rsp)         # 8-byte Spill
	movl	%r13d, 884(%rsp)        # 4-byte Spill
	movq	%r14, 872(%rsp)         # 8-byte Spill
	movq	%rbx, 864(%rsp)         # 8-byte Spill
	movq	%r10, 856(%rsp)         # 8-byte Spill
	movq	%r11, 848(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	960(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	936(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movl	932(%rsp), %ebp         # 4-byte Reload
	movl	%ebp, %r13d
	movl	%r13d, %edx
	movq	968(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	#DEBUG_VALUE: kf_bfly2:Fout <- [RSP+952]
	#DEBUG_VALUE: kf_bfly2:fstride <- [RSP+944]
	#DEBUG_VALUE: kf_bfly2:st <- [RSP+936]
	#DEBUG_VALUE: kf_bfly2:m <- [RSP+932]
	.loc	2 29 0                  # kiss_fft.c:29:0
	movq	1032(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1008(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	976(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	984(%rsp), %rdi         # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	984(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	920(%rsp), %rcx         # 8-byte Reload
	movq	992(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	936(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1000(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	936(%rsp), %rax         # 8-byte Reload
	addq	$264, %rax              # imm = 0x108
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1008(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 840(%rsp)         # 8-byte Spill
	callq	trace_logger_log_ptr
.Ltmp541:
	#DEBUG_VALUE: kf_bfly2:tw1 <- [RSP+840]
	.loc	2 31 0                  # kiss_fft.c:31:0
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1048(%rsp), %rcx        # 8-byte Reload
	movq	1016(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movl	932(%rsp), %r9d         # 4-byte Reload
	movl	%r9d, %ebp
	movl	%ebp, %edx
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	848(%rsp), %rsi         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1024(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movl	932(%rsp), %ebp         # 4-byte Reload
	movslq	%ebp, %rax
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movq	%rax, 832(%rsp)         # 8-byte Spill
	callq	trace_logger_log_int
	movq	1040(%rsp), %rdi        # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	1064(%rsp), %rcx        # 8-byte Reload
	movq	1032(%rsp), %r8         # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	888(%rsp), %rdi         # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	832(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1048(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	1056(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_ptr
	movq	832(%rsp), %rax         # 8-byte Reload
	shlq	$3, %rax
	movq	952(%rsp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	1080(%rsp), %rdi        # 8-byte Reload
	movq	1072(%rsp), %rsi        # 8-byte Reload
	movq	%rcx, %rdx
	movq	1088(%rsp), %rax        # 8-byte Reload
	movq	%rcx, 824(%rsp)         # 8-byte Spill
	movq	%rax, %rcx
	movq	1064(%rsp), %r8         # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp542:
	#DEBUG_VALUE: kf_bfly2:Fout2 <- [RSP+824]
	.loc	2 32 0                  # kiss_fft.c:32:0
	movq	848(%rsp), %rdi         # 8-byte Reload
	movq	864(%rsp), %rsi         # 8-byte Reload
	movq	872(%rsp), %rdx         # 8-byte Reload
	movq	896(%rsp), %rcx         # 8-byte Reload
	movq	888(%rsp), %r8          # 8-byte Reload
	movl	908(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	1088(%rsp), %rdi        # 8-byte Reload
	movq	920(%rsp), %rsi         # 8-byte Reload
	movq	920(%rsp), %rdx         # 8-byte Reload
	movq	1088(%rsp), %rcx        # 8-byte Reload
	movq	912(%rsp), %r8          # 8-byte Reload
	movq	920(%rsp), %r9          # 8-byte Reload
	movq	856(%rsp), %rax         # 8-byte Reload
	movq	%rax, (%rsp)
	callq	trace_logger_log_int
	movq	824(%rsp), %rax         # 8-byte Reload
	movq	840(%rsp), %rcx         # 8-byte Reload
	movl	932(%rsp), %ebp         # 4-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	%rax, 816(%rsp)         # 8-byte Spill
	movq	%rcx, 808(%rsp)         # 8-byte Spill
	movl	%ebp, 804(%rsp)         # 4-byte Spill
	movq	%rdx, 792(%rsp)         # 8-byte Spill
.Ltmp543:
.LBB14_1:                               # =>This Inner Loop Header: Depth=1
	movq	792(%rsp), %rax         # 8-byte Reload
	movl	804(%rsp), %ecx         # 4-byte Reload
	movq	808(%rsp), %rdx         # 8-byte Reload
	movq	816(%rsp), %rsi         # 8-byte Reload
	movabsq	$1, %rdi
	leaq	.L.str209, %r8
	movabsq	$0, %r9
	leaq	.L.str485, %r10
	movabsq	$2, %r11
	leaq	.L.str202, %rbx
	movabsq	$3, %r14
	leaq	.L.str160, %r15
	movabsq	$41, %r12
	leaq	.L.str158, %r13
	leaq	.L.str210, %rbp
	movl	%ecx, 788(%rsp)         # 4-byte Spill
	movl	$0, %ecx
	movl	%ecx, 784(%rsp)         # 4-byte Spill
	movl	$1, %ecx
	movq	%rax, 776(%rsp)         # 8-byte Spill
	movabsq	$19134, %rax            # imm = 0x4ABE
	movq	%rax, 768(%rsp)         # 8-byte Spill
	movabsq	$32, %rax
	movq	%rax, 760(%rsp)         # 8-byte Spill
	leaq	.L.str61142, %rax
	movq	%rax, 752(%rsp)         # 8-byte Spill
	leaq	.L.str384, %rax
	movq	%rax, 744(%rsp)         # 8-byte Spill
	movabsq	$46, %rax
	movq	%rax, 736(%rsp)         # 8-byte Spill
	leaq	.L.str138, %rax
	movq	%rax, 728(%rsp)         # 8-byte Spill
	movabsq	$4294967295, %rax       # imm = 0xFFFFFFFF
	movq	%rax, 720(%rsp)         # 8-byte Spill
	movabsq	$8, %rax
	movq	%rax, 712(%rsp)         # 8-byte Spill
	movabsq	$64, %rax
	movq	%rax, 704(%rsp)         # 8-byte Spill
	leaq	.L.str164, %rax
	movq	%rax, 696(%rsp)         # 8-byte Spill
	leaq	.L.str140, %rax
	movq	%rax, 688(%rsp)         # 8-byte Spill
	movabsq	$40, %rax
	movq	%rax, 680(%rsp)         # 8-byte Spill
	movabsq	$29, %rax
	movq	%rax, 672(%rsp)         # 8-byte Spill
	leaq	.L.str58139, %rax
	movq	%rax, 664(%rsp)         # 8-byte Spill
	leaq	.L.str203, %rax
	movq	%rax, 656(%rsp)         # 8-byte Spill
	movabsq	$39, %rax
	movq	%rax, 648(%rsp)         # 8-byte Spill
	leaq	.L.str57138, %rax
	movq	%rax, 640(%rsp)         # 8-byte Spill
	leaq	.L.str47128, %rax
	movq	%rax, 632(%rsp)         # 8-byte Spill
	movabsq	$38, %rax
	movq	%rax, 624(%rsp)         # 8-byte Spill
	leaq	.L.str208, %rax
	movq	%rax, 616(%rsp)         # 8-byte Spill
	movabsq	$28, %rax
	movq	%rax, 608(%rsp)         # 8-byte Spill
	leaq	.L.str34115, %rax
	movq	%rax, 600(%rsp)         # 8-byte Spill
	leaq	.L.str56137, %rax
	movq	%rax, 592(%rsp)         # 8-byte Spill
	movabsq	$9, %rax
	movq	%rax, 584(%rsp)         # 8-byte Spill
	movabsq	$27, %rax
	movq	%rax, 576(%rsp)         # 8-byte Spill
	leaq	.L.str55136, %rax
	movq	%rax, 568(%rsp)         # 8-byte Spill
	leaq	.L.str38119, %rax
	movq	%rax, 560(%rsp)         # 8-byte Spill
	leaq	.L.str207, %rax
	movq	%rax, 552(%rsp)         # 8-byte Spill
	leaq	.L.str28109, %rax
	movq	%rax, 544(%rsp)         # 8-byte Spill
	leaq	.L.str54135, %rax
	movq	%rax, 536(%rsp)         # 8-byte Spill
	leaq	.L.str53134, %rax
	movq	%rax, 528(%rsp)         # 8-byte Spill
	leaq	.L.str19100, %rax
	movq	%rax, 520(%rsp)         # 8-byte Spill
	movabsq	$37, %rax
	movq	%rax, 512(%rsp)         # 8-byte Spill
	leaq	.L.str206, %rax
	movq	%rax, 504(%rsp)         # 8-byte Spill
	leaq	.L.str147, %rax
	movq	%rax, 496(%rsp)         # 8-byte Spill
	movabsq	$11, %rax
	movq	%rax, 488(%rsp)         # 8-byte Spill
	leaq	.L.str43124, %rax
	movq	%rax, 480(%rsp)         # 8-byte Spill
	leaq	.L.str990, %rax
	movq	%rax, 472(%rsp)         # 8-byte Spill
	leaq	.L.str205, %rax
	movq	%rax, 464(%rsp)         # 8-byte Spill
	leaq	.L.str40121, %rax
	movq	%rax, 456(%rsp)         # 8-byte Spill
	leaq	.L.str142, %rax
	movq	%rax, 448(%rsp)         # 8-byte Spill
	leaq	.L.str204, %rax
	movq	%rax, 440(%rsp)         # 8-byte Spill
	leaq	.L.str133, %rax
	movq	%rax, 432(%rsp)         # 8-byte Spill
	movabsq	$36, %rax
	movq	%rax, 424(%rsp)         # 8-byte Spill
	leaq	.L.str141, %rax
	movq	%rax, 416(%rsp)         # 8-byte Spill
	leaq	.L.str110, %rax
	movq	%rax, 408(%rsp)         # 8-byte Spill
	movabsq	$35, %rax
	movq	%rax, 400(%rsp)         # 8-byte Spill
	leaq	.L.str1697, %rax
	movq	%rax, 392(%rsp)         # 8-byte Spill
	leaq	.L.str105, %rax
	movq	%rax, 384(%rsp)         # 8-byte Spill
	movabsq	$13, %rax
	movq	%rax, 376(%rsp)         # 8-byte Spill
	leaq	.L.str118, %rax
	movq	%rax, 368(%rsp)         # 8-byte Spill
	leaq	.L.str25106, %rax
	movq	%rax, 360(%rsp)         # 8-byte Spill
	leaq	.L.str104, %rax
	movq	%rax, 352(%rsp)         # 8-byte Spill
	leaq	.L.str107, %rax
	movq	%rax, 344(%rsp)         # 8-byte Spill
	leaq	.L.str24105, %rax
	movq	%rax, 336(%rsp)         # 8-byte Spill
	leaq	.L.str1495, %rax
	movq	%rax, 328(%rsp)         # 8-byte Spill
	leaq	.L.str182, %rax
	movq	%rax, 320(%rsp)         # 8-byte Spill
	leaq	.L.str129, %rax
	movq	%rax, 312(%rsp)         # 8-byte Spill
	movabsq	$-1, %rax
	movq	%rax, 304(%rsp)         # 8-byte Spill
	movabsq	$48, %rax
	movq	%rax, 296(%rsp)         # 8-byte Spill
	leaq	.L.str200, %rax
	movq	%rax, 288(%rsp)         # 8-byte Spill
	leaq	.L.str283, %rax
	movq	%rax, 280(%rsp)         # 8-byte Spill
	leaq	.L.str788, %rax
	.loc	2 35 0                  # kiss_fft.c:35:0
.Ltmp544:
	movq	%rax, 272(%rsp)         # 8-byte Spill
	movq	304(%rsp), %rax         # 8-byte Reload
	movq	%rdi, 264(%rsp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, 256(%rsp)         # 8-byte Spill
	movq	%r13, %rsi
	movq	%rdx, 248(%rsp)         # 8-byte Spill
	movq	%rbx, %rdx
	movq	656(%rsp), %rax         # 8-byte Reload
	movl	%ecx, 244(%rsp)         # 4-byte Spill
	movq	%rax, %rcx
	movq	296(%rsp), %rax         # 8-byte Reload
	movq	%r8, 232(%rsp)          # 8-byte Spill
	movq	%rax, %r8
	movl	784(%rsp), %eax         # 4-byte Reload
	movq	%r9, 224(%rsp)          # 8-byte Spill
	movl	%eax, %r9d
	movl	$1, (%rsp)
	movq	%r15, 216(%rsp)         # 8-byte Spill
	movq	%r12, 208(%rsp)         # 8-byte Spill
	movq	%r13, 200(%rsp)         # 8-byte Spill
	movq	%rbp, 192(%rsp)         # 8-byte Spill
	movq	%r14, 184(%rsp)         # 8-byte Spill
	movq	%rbx, 176(%rsp)         # 8-byte Spill
	movq	%r10, 168(%rsp)         # 8-byte Spill
	movq	%r11, 160(%rsp)         # 8-byte Spill
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	272(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	440(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	280(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	728(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	932(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	288(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	304(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	688(%rsp), %rcx         # 8-byte Reload
	movq	296(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	176(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	952(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	312(%rsp), %r8          # 8-byte Reload
	movq	264(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	320(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	472(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 156(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	328(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	328(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 152(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	152(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 148(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	520(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 136(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 132(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	336(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 120(%rsp)         # 8-byte Spill
	movq	%r8, %rcx
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	120(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	336(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	248(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 116(%rsp)        # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	vmovss	116(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 112(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	112(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	344(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	352(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	148(%rsp), %xmm0        # 4-byte Reload
	vmovss	112(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 108(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	116(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	360(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	368(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	156(%rsp), %xmm0        # 4-byte Reload
	vmovss	116(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 104(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	376(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	132(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	384(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	392(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	152(%rsp), %xmm0        # 4-byte Reload
	vmovss	132(%rsp), %xmm1        # 4-byte Reload
	vmulss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 100(%rsp)        # 4-byte Spill
	callq	trace_logger_log_double
	movq	400(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	104(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	408(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	416(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	100(%rsp), %xmm0        # 4-byte Reload
	vmovss	104(%rsp), %xmm1        # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
.Ltmp545:
	.loc	2 36 0                  # kiss_fft.c:36:0
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 96(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	424(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	448(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	944(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	432(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	248(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	440(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	944(%rsp), %rcx         # 8-byte Reload
	shlq	$3, %rcx
	movq	248(%rsp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rdx, 88(%rsp)          # 8-byte Spill
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	448(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp546:
	#DEBUG_VALUE: kf_bfly2:tw1 <- [RSP+88]
	.loc	2 37 0                  # kiss_fft.c:37:0
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	560(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 84(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	456(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	84(%rsp), %xmm0         # 4-byte Reload
	vmovss	108(%rsp), %xmm1        # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 80(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	464(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	472(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	480(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	80(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	632(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$4, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 68(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	488(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	496(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	68(%rsp), %xmm0         # 4-byte Reload
	vmovss	96(%rsp), %xmm1         # 4-byte Reload
	vsubss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 64(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	512(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	504(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	136(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	520(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	528(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	256(%rsp), %rcx         # 8-byte Reload
	vmovss	64(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp547:
	.loc	2 38 0                  # kiss_fft.c:38:0
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 60(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	60(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	536(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	544(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	108(%rsp), %xmm0        # 4-byte Reload
	vmovss	60(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 56(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	552(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	560(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	568(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	56(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, (%rcx)
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	576(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	4(%rcx), %xmm0
	cvtss2sd	%xmm0, %xmm1
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	vmovss	%xmm0, 52(%rsp)         # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	584(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	vmovss	52(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	592(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	600(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	vmovss	96(%rsp), %xmm0         # 4-byte Reload
	vmovss	52(%rsp), %xmm1         # 4-byte Reload
	vaddss	%xmm1, %xmm0, %xmm2
	cvtss2sd	%xmm2, %xmm0
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	vmovss	%xmm2, 48(%rsp)         # 4-byte Spill
	callq	trace_logger_log_double
	movq	624(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	616(%rsp), %rcx         # 8-byte Reload
	movq	608(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	632(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	cvtss2sd	%xmm0, %xmm0
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	640(%rsp), %rcx         # 8-byte Reload
	movq	224(%rsp), %r8          # 8-byte Reload
	movq	168(%rsp), %r9          # 8-byte Reload
	callq	trace_logger_log_double
	movq	776(%rsp), %rcx         # 8-byte Reload
	vmovss	48(%rsp), %xmm0         # 4-byte Reload
	vmovss	%xmm0, 4(%rcx)
.Ltmp548:
	.loc	2 39 0                  # kiss_fft.c:39:0
	movq	648(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	664(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	256(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	656(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	256(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	664(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp549:
	#DEBUG_VALUE: kf_bfly2:Fout2 <- [RSP+40]
	.loc	2 40 0                  # kiss_fft.c:40:0
	movq	680(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	696(%rsp), %rcx         # 8-byte Reload
	movq	672(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	776(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	688(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
	movq	776(%rsp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	704(%rsp), %rsi         # 8-byte Reload
	movq	%rcx, %rdx
	movq	264(%rsp), %r8          # 8-byte Reload
	movq	%rcx, 32(%rsp)          # 8-byte Spill
	movq	%r8, %rcx
	movq	696(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_ptr
.Ltmp550:
	#DEBUG_VALUE: kf_bfly2:Fout <- [RSP+32]
	.loc	2 41 0                  # kiss_fft.c:41:0
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	752(%rsp), %rcx         # 8-byte Reload
	movq	712(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	720(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	728(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	788(%rsp), %eax         # 4-byte Reload
	addl	$4294967295, %eax       # imm = 0xFFFFFFFF
	movl	%eax, %esi
	movl	%esi, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movl	%eax, 28(%rsp)          # 4-byte Spill
	callq	trace_logger_log_int
.Ltmp551:
	#DEBUG_VALUE: kf_bfly2:m <- [RSP+28]
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	232(%rsp), %rcx         # 8-byte Reload
	movq	736(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	224(%rsp), %rcx         # 8-byte Reload
	movq	744(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	movl	%eax, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	760(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	752(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movl	28(%rsp), %eax          # 4-byte Reload
	cmpl	$0, %eax
	sete	%al
	movb	%al, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movl	%ecx, %edx
	movq	768(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	movb	%al, 27(%rsp)           # 1-byte Spill
	callq	trace_logger_log_int
	movq	208(%rsp), %rdi         # 8-byte Reload
	movq	200(%rsp), %rsi         # 8-byte Reload
	movq	176(%rsp), %rdx         # 8-byte Reload
	movq	192(%rsp), %rcx         # 8-byte Reload
	movq	160(%rsp), %r8          # 8-byte Reload
	movl	784(%rsp), %r9d         # 4-byte Reload
	movl	$1, (%rsp)
	callq	trace_logger_log0
	movq	184(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	216(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movq	160(%rsp), %rdi         # 8-byte Reload
	movq	224(%rsp), %rsi         # 8-byte Reload
	movq	224(%rsp), %rdx         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	176(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	movl	%eax, %edx
	movq	264(%rsp), %rdi         # 8-byte Reload
	movq	264(%rsp), %rsi         # 8-byte Reload
	movq	264(%rsp), %rcx         # 8-byte Reload
	movq	232(%rsp), %r8          # 8-byte Reload
	movq	224(%rsp), %r9          # 8-byte Reload
	movq	168(%rsp), %r10         # 8-byte Reload
	movq	%r10, (%rsp)
	callq	trace_logger_log_int
	movb	27(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movl	28(%rsp), %eax          # 4-byte Reload
	movq	32(%rsp), %rsi          # 8-byte Reload
	movl	%eax, 804(%rsp)         # 4-byte Spill
	movq	%rcx, 816(%rsp)         # 8-byte Spill
	movq	%rdx, 808(%rsp)         # 8-byte Spill
	movq	%rsi, 792(%rsp)         # 8-byte Spill
	jne	.LBB14_2
	jmp	.LBB14_1
.Ltmp552:
.LBB14_2:
	movabsq	$42, %rdi
	leaq	.L.str158, %rsi
	leaq	.L.str160, %rdx
	leaq	.L.str174, %rcx
	movabsq	$1, %r8
	movl	$0, %r9d
	movl	$1, %eax
	.loc	2 42 0                  # kiss_fft.c:42:0
	movl	$1, (%rsp)
	movl	%eax, 20(%rsp)          # 4-byte Spill
	callq	trace_logger_log0
	addq	$1096, %rsp             # imm = 0x448
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret
.Ltmp553:
.Ltmp554:
	.size	kf_bfly2, .Ltmp554-kf_bfly2
.Lfunc_end14:
	.cfi_endproc

	.globl	trace_logger_write_labelmap
	.align	16, 0x90
	.type	trace_logger_write_labelmap,@function
trace_logger_write_labelmap:            # @trace_logger_write_labelmap
	.cfi_startproc
# BB#0:
	subq	$24, %rsp
.Ltmp556:
	.cfi_def_cfa_offset 32
	cmpb	$0, initp
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movq	%rsi, 8(%rsp)           # 8-byte Spill
	jne	.LBB15_2
# BB#1:
	callq	trace_logger_init
.LBB15_2:
	movq	full_trace_file(%rip), %rdi
	movl	$.L.str421, %eax
	movl	%eax, %esi
	movl	$26, %edx
	callq	gzwrite
	movq	full_trace_file(%rip), %rdi
	movq	8(%rsp), %rsi           # 8-byte Reload
	movl	%esi, %edx
	movq	16(%rsp), %rsi          # 8-byte Reload
	movl	%eax, 4(%rsp)           # 4-byte Spill
	callq	gzwrite
	movq	full_trace_file(%rip), %rdi
	movl	$.L.str1422, %edx
	movl	%edx, %esi
	movl	$25, %edx
	movl	%eax, (%rsp)            # 4-byte Spill
	addq	$24, %rsp
	jmp	gzwrite                 # TAILCALL
.Ltmp557:
	.size	trace_logger_write_labelmap, .Ltmp557-trace_logger_write_labelmap
	.cfi_endproc

	.globl	trace_logger_init
	.align	16, 0x90
	.type	trace_logger_init,@function
trace_logger_init:                      # @trace_logger_init
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp559:
	.cfi_def_cfa_offset 16
	movl	$.L.str2423, %eax
	movl	%eax, %edi
	movl	$.L.str3424, %eax
	movl	%eax, %esi
	callq	gzopen
	movq	%rax, full_trace_file
	cmpq	$0, %rax
	jne	.LBB16_2
# BB#1:
	movl	$.L.str4425, %eax
	movl	%eax, %edi
	callq	perror
	movl	$-1, %edi
	callq	exit
.LBB16_2:
	movl	$512, %eax              # imm = 0x200
	movl	%eax, %edi
	movl	$1, %eax
	movl	%eax, %esi
	callq	calloc
	movq	%rax, current_toplevel_function
	movl	$2, current_logging_status
	movl	$trace_logger_fin, %ecx
	movl	%ecx, %edi
	callq	atexit
	movb	$1, initp
	movl	%eax, 4(%rsp)           # 4-byte Spill
	popq	%rax
	ret
.Ltmp560:
	.size	trace_logger_init, .Ltmp560-trace_logger_init
	.cfi_endproc

	.globl	trace_logger_fin
	.align	16, 0x90
	.type	trace_logger_fin,@function
trace_logger_fin:                       # @trace_logger_fin
	.cfi_startproc
# BB#0:
	pushq	%rax
.Ltmp562:
	.cfi_def_cfa_offset 16
	movq	current_toplevel_function(%rip), %rdi
	callq	free
	movq	full_trace_file(%rip), %rdi
	popq	%rax
	jmp	gzclose                 # TAILCALL
.Ltmp563:
	.size	trace_logger_fin, .Ltmp563-trace_logger_fin
	.cfi_endproc

	.globl	log_or_not
	.align	16, 0x90
	.type	log_or_not,@function
log_or_not:                             # @log_or_not
	.cfi_startproc
# BB#0:
	subq	$40, %rsp
.Ltmp565:
	.cfi_def_cfa_offset 48
	movb	%sil, %al
	movb	%dil, %r8b
	testb	$1, %r8b
	movl	%edx, 36(%rsp)          # 4-byte Spill
	movq	%rcx, 24(%rsp)          # 8-byte Spill
	movb	%al, 23(%rsp)           # 1-byte Spill
	jne	.LBB18_2
	jmp	.LBB18_1
.LBB18_1:
	movl	$1, %eax
	movl	$2, %ecx
	movb	23(%rsp), %dl           # 1-byte Reload
	testb	%dl, %dl
	cmovel	%ecx, %eax
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jmp	.LBB18_9
.LBB18_2:
	movb	23(%rsp), %al           # 1-byte Reload
	testb	$1, %al
	jne	.LBB18_4
	jmp	.LBB18_3
.LBB18_3:
	movl	current_logging_status, %eax
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jmp	.LBB18_9
.LBB18_4:
	movl	$1, %eax
	movl	36(%rsp), %ecx          # 4-byte Reload
	cmpl	$1, %ecx
	movl	%eax, 16(%rsp)          # 4-byte Spill
	jne	.LBB18_9
# BB#5:
	movq	current_toplevel_function, %rax
	cmpb	$0, (%rax)
	movq	%rax, 8(%rsp)           # 8-byte Spill
	jne	.LBB18_7
# BB#6:
	movl	$.L.str5426, %eax
	movl	%eax, %edi
	movl	$.L.str6427, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.log_or_not, %eax
	movl	%eax, %ecx
	movl	$118, %edx
	callq	__assert_fail
.LBB18_7:
	movl	$0, %eax
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	8(%rsp), %rsi           # 8-byte Reload
	movl	%eax, 4(%rsp)           # 4-byte Spill
	callq	strcmp
	cmpl	$0, %eax
	movl	4(%rsp), %eax           # 4-byte Reload
	movl	%eax, 16(%rsp)          # 4-byte Spill
	je	.LBB18_9
# BB#8:
	movl	$.L.str7428, %eax
	movl	%eax, %edi
	movl	$.L.str6427, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.log_or_not, %eax
	movl	%eax, %ecx
	movl	$123, %edx
	callq	__assert_fail
.LBB18_9:
	movl	16(%rsp), %eax          # 4-byte Reload
	addq	$40, %rsp
	ret
.Ltmp566:
	.size	log_or_not, .Ltmp566-log_or_not
	.cfi_endproc

	.globl	convert_bytes_to_hex
	.align	16, 0x90
	.type	convert_bytes_to_hex,@function
convert_bytes_to_hex:                   # @convert_bytes_to_hex
	.cfi_startproc
# BB#0:
	subq	$56, %rsp
.Ltmp568:
	.cfi_def_cfa_offset 64
	movabsq	$0, %rax
	movw	.L.str8429, %cx
	movw	%cx, (%rdi)
	movb	.L.str8429+2, %r8b
	movb	%r8b, 2(%rdi)
	addq	$2, %rdi
	cmpl	$0, %edx
	movq	%rsi, 48(%rsp)          # 8-byte Spill
	movq	%rax, 40(%rsp)          # 8-byte Spill
	movl	%edx, 36(%rsp)          # 4-byte Spill
	movq	%rdi, 24(%rsp)          # 8-byte Spill
	jle	.LBB19_2
.LBB19_1:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%rsp), %rax          # 8-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	movq	48(%rsp), %rdx          # 8-byte Reload
	movzbl	(%rdx,%rcx), %edx
	movl	$.L.str9430, %esi
                                        # kill: RSI<def> ESI<kill>
	xorl	%edi, %edi
	movb	%dil, %r8b
	movq	%rax, %rdi
	movq	%rax, 16(%rsp)          # 8-byte Spill
	movb	%r8b, %al
	movq	%rcx, 8(%rsp)           # 8-byte Spill
	callq	sprintf
	movslq	%eax, %rcx
	movq	16(%rsp), %rsi          # 8-byte Reload
	addq	%rcx, %rsi
	movq	8(%rsp), %rcx           # 8-byte Reload
	addq	$1, %rcx
	movl	%ecx, %eax
	movl	36(%rsp), %edx          # 4-byte Reload
	cmpl	%edx, %eax
	movq	%rcx, 40(%rsp)          # 8-byte Spill
	movq	%rsi, 24(%rsp)          # 8-byte Spill
	jne	.LBB19_1
.LBB19_2:                               # %._crit_edge
	movq	24(%rsp), %rax          # 8-byte Reload
	movb	$0, (%rax)
	addq	$56, %rsp
	ret
.Ltmp569:
	.size	convert_bytes_to_hex, .Ltmp569-convert_bytes_to_hex
	.cfi_endproc

	.globl	update_logging_status
	.align	16, 0x90
	.type	update_logging_status,@function
update_logging_status:                  # @update_logging_status
	.cfi_startproc
# BB#0:
	subq	$56, %rsp
.Ltmp571:
	.cfi_def_cfa_offset 64
	movb	%cl, %al
	movb	%dl, %r8b
	movl	current_logging_status, %ecx
	cmpl	$0, %ecx
	movl	%esi, 52(%rsp)          # 4-byte Spill
	movb	%al, 51(%rsp)           # 1-byte Spill
	movb	%r8b, 50(%rsp)          # 1-byte Spill
	movq	%rdi, 40(%rsp)          # 8-byte Spill
	movl	%ecx, 36(%rsp)          # 4-byte Spill
	jne	.LBB20_2
# BB#1:
	movl	inst_count, %esi
	movl	$.L.str10431, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movb	%al, %cl
	movb	%cl, %al
	callq	printf
	movl	$2, current_logging_status
	movl	%eax, 32(%rsp)          # 4-byte Spill
	jmp	.LBB20_8
.LBB20_2:
	movb	51(%rsp), %al           # 1-byte Reload
	movzbl	%al, %ecx
	andl	$1, %ecx
	movb	50(%rsp), %dl           # 1-byte Reload
	movzbl	%dl, %esi
	andl	$1, %esi
	movl	%ecx, %edi
	movl	52(%rsp), %edx          # 4-byte Reload
	movq	40(%rsp), %rcx          # 8-byte Reload
	callq	log_or_not
	movl	%eax, current_logging_status
	movl	36(%rsp), %edx          # 4-byte Reload
	cmpl	$2, %edx
	setne	%r8b
	cmpl	%edx, %eax
	sete	%r9b
	orb	%r9b, %r8b
	testb	$1, %r8b
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jne	.LBB20_4
# BB#3:
	movl	inst_count, %esi
	movl	$.L.str11432, %eax
	movl	%eax, %edi
	xorl	%eax, %eax
	movb	%al, %cl
	movb	%cl, %al
	callq	printf
	movl	current_logging_status, %esi
	movl	%eax, 24(%rsp)          # 4-byte Spill
	movl	%esi, 28(%rsp)          # 4-byte Spill
.LBB20_4:
	movl	28(%rsp), %eax          # 4-byte Reload
	movq	current_toplevel_function, %rcx
	cmpb	$0, (%rcx)
	sete	%dl
	cmpl	$1, %eax
	sete	%sil
	andb	%sil, %dl
	testb	$1, %dl
	movl	%eax, 20(%rsp)          # 4-byte Spill
	movq	%rcx, 8(%rsp)           # 8-byte Spill
	jne	.LBB20_5
	jmp	.LBB20_6
.LBB20_5:
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	40(%rsp), %rsi          # 8-byte Reload
	callq	strcpy
	movq	%rax, (%rsp)            # 8-byte Spill
	jmp	.LBB20_8
.LBB20_6:
	movl	20(%rsp), %eax          # 4-byte Reload
	cmpl	$0, %eax
	jne	.LBB20_8
# BB#7:
	movl	$0, %esi
	movabsq	$512, %rdx              # imm = 0x200
	movq	8(%rsp), %rdi           # 8-byte Reload
	callq	memset
.LBB20_8:
	addq	$56, %rsp
	ret
.Ltmp572:
	.size	update_logging_status, .Ltmp572-update_logging_status
	.cfi_endproc

	.globl	do_not_log
	.align	16, 0x90
	.type	do_not_log,@function
do_not_log:                             # @do_not_log
	.cfi_startproc
# BB#0:
	cmpl	$2, current_logging_status
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	ret
.Ltmp573:
	.size	do_not_log, .Ltmp573-do_not_log
	.cfi_endproc

	.globl	trace_logger_log_entry
	.align	16, 0x90
	.type	trace_logger_log_entry,@function
trace_logger_log_entry:                 # @trace_logger_log_entry
	.cfi_startproc
# BB#0:
	subq	$24, %rsp
.Ltmp575:
	.cfi_def_cfa_offset 32
	cmpb	$0, initp
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movl	%esi, 12(%rsp)          # 4-byte Spill
	jne	.LBB22_2
# BB#1:
	callq	trace_logger_init
.LBB22_2:
	xorl	%esi, %esi
	movl	$1, %eax
	movq	16(%rsp), %rdi          # 8-byte Reload
	movl	%eax, %edx
	movl	%eax, %ecx
	callq	update_logging_status
	cmpl	$2, current_logging_status
	je	.LBB22_4
# BB#3:
	movq	full_trace_file, %rdi
	movl	$.L.str12433, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdx          # 8-byte Reload
	movl	12(%rsp), %eax          # 4-byte Reload
	movb	%cl, 11(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movb	11(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 4(%rsp)           # 4-byte Spill
.LBB22_4:
	addq	$24, %rsp
	ret
.Ltmp576:
	.size	trace_logger_log_entry, .Ltmp576-trace_logger_log_entry
	.cfi_endproc

	.globl	trace_logger_log0
	.align	16, 0x90
	.type	trace_logger_log0,@function
trace_logger_log0:                      # @trace_logger_log0
	.cfi_startproc
# BB#0:
	subq	$72, %rsp
.Ltmp578:
	.cfi_def_cfa_offset 80
	movb	%r9b, %al
	movb	80(%rsp), %r10b
	cmpb	$0, initp
	movq	%rsi, 64(%rsp)          # 8-byte Spill
	movb	%r10b, 63(%rsp)         # 1-byte Spill
	movl	%r8d, 56(%rsp)          # 4-byte Spill
	movq	%rcx, 48(%rsp)          # 8-byte Spill
	movq	%rdx, 40(%rsp)          # 8-byte Spill
	movb	%al, 39(%rsp)           # 1-byte Spill
	movl	%edi, 32(%rsp)          # 4-byte Spill
	jne	.LBB23_2
# BB#1:
	callq	trace_logger_init
.LBB23_2:
	movb	39(%rsp), %al           # 1-byte Reload
	movzbl	%al, %ecx
	andl	$1, %ecx
	movb	63(%rsp), %dl           # 1-byte Reload
	movzbl	%dl, %esi
	andl	$1, %esi
	movq	64(%rsp), %rdi          # 8-byte Reload
	movl	56(%rsp), %r8d          # 4-byte Reload
	movl	%esi, 28(%rsp)          # 4-byte Spill
	movl	%r8d, %esi
	movl	%ecx, %edx
	movl	28(%rsp), %ecx          # 4-byte Reload
	callq	update_logging_status
	cmpl	$2, current_logging_status
	je	.LBB23_4
# BB#3:
	movq	full_trace_file, %rdi
	movl	inst_count, %eax
	movq	%rsp, %rcx
	movl	%eax, 8(%rcx)
	movl	56(%rsp), %eax          # 4-byte Reload
	movl	%eax, (%rcx)
	movl	$.L.str13434, %edx
	movl	%edx, %esi
	xorl	%edx, %edx
	movb	%dl, %r8b
	movl	32(%rsp), %edx          # 4-byte Reload
	movq	64(%rsp), %rcx          # 8-byte Reload
	movq	40(%rsp), %r9           # 8-byte Reload
	movb	%r8b, 27(%rsp)          # 1-byte Spill
	movq	%r9, %r8
	movq	48(%rsp), %r9           # 8-byte Reload
	movb	27(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	inst_count, %edx
	addl	$1, %edx
	movl	%edx, inst_count
	movl	%eax, 20(%rsp)          # 4-byte Spill
.LBB23_4:
	addq	$72, %rsp
	ret
.Ltmp579:
	.size	trace_logger_log0, .Ltmp579-trace_logger_log0
	.cfi_endproc

	.globl	trace_logger_log_int
	.align	16, 0x90
	.type	trace_logger_log_int,@function
trace_logger_log_int:                   # @trace_logger_log_int
	.cfi_startproc
# BB#0:
	subq	$120, %rsp
.Ltmp581:
	.cfi_def_cfa_offset 128
	movq	128(%rsp), %rax
	cmpb	$0, initp
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	%r9d, 108(%rsp)         # 4-byte Spill
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movl	%ecx, 92(%rsp)          # 4-byte Spill
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movl	%esi, 76(%rsp)          # 4-byte Spill
	movl	%edi, 72(%rsp)          # 4-byte Spill
	jne	.LBB24_2
# BB#1:
	movl	$.L.str14435, %eax
	movl	%eax, %edi
	movl	$.L.str6427, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_int, %eax
	movl	%eax, %ecx
	movl	$204, %edx
	callq	__assert_fail
.LBB24_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB24_14
# BB#3:
	movl	72(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB24_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str15436, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 71(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	71(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 64(%rsp)          # 4-byte Spill
	jmp	.LBB24_8
.LBB24_5:
	movq	full_trace_file, %rax
	movl	72(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 56(%rsp)          # 8-byte Spill
	jne	.LBB24_7
# BB#6:
	movl	$.L.str16437, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 55(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	55(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB24_8
.LBB24_7:
	movl	$.L.str17438, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	72(%rsp), %edx          # 4-byte Reload
	movl	76(%rsp), %eax          # 4-byte Reload
	movb	%cl, 47(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movq	80(%rsp), %r8           # 8-byte Reload
	movl	92(%rsp), %r9d          # 4-byte Reload
	movb	47(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 40(%rsp)          # 4-byte Spill
.LBB24_8:
	movq	full_trace_file, %rax
	movl	92(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 32(%rsp)          # 8-byte Spill
	je	.LBB24_10
# BB#9:
	movl	$.L.str18439, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jmp	.LBB24_11
.LBB24_10:
	movl	$.L.str19440, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 24(%rsp)          # 4-byte Spill
.LBB24_11:
	movq	full_trace_file, %rax
	movl	108(%rsp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 16(%rsp)          # 8-byte Spill
	je	.LBB24_13
# BB#12:
	movl	$.L.str20441, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 12(%rsp)          # 4-byte Spill
	jmp	.LBB24_14
.LBB24_13:
	movl	$.L.str21442, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 8(%rsp)           # 4-byte Spill
.LBB24_14:
	addq	$120, %rsp
	ret
.Ltmp582:
	.size	trace_logger_log_int, .Ltmp582-trace_logger_log_int
	.cfi_endproc

	.globl	trace_logger_log_ptr
	.align	16, 0x90
	.type	trace_logger_log_ptr,@function
trace_logger_log_ptr:                   # @trace_logger_log_ptr
	.cfi_startproc
# BB#0:
	subq	$120, %rsp
.Ltmp584:
	.cfi_def_cfa_offset 128
	movq	128(%rsp), %rax
	cmpb	$0, initp
	movq	%rax, 112(%rsp)         # 8-byte Spill
	movl	%r9d, 108(%rsp)         # 4-byte Spill
	movq	%r8, 96(%rsp)           # 8-byte Spill
	movl	%ecx, 92(%rsp)          # 4-byte Spill
	movq	%rdx, 80(%rsp)          # 8-byte Spill
	movl	%esi, 76(%rsp)          # 4-byte Spill
	movl	%edi, 72(%rsp)          # 4-byte Spill
	jne	.LBB25_2
# BB#1:
	movl	$.L.str14435, %eax
	movl	%eax, %edi
	movl	$.L.str6427, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_ptr, %eax
	movl	%eax, %ecx
	movl	$225, %edx
	callq	__assert_fail
.LBB25_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB25_14
# BB#3:
	movl	72(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB25_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str22443, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 71(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	71(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 64(%rsp)          # 4-byte Spill
	jmp	.LBB25_8
.LBB25_5:
	movq	full_trace_file, %rax
	movl	72(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 56(%rsp)          # 8-byte Spill
	jne	.LBB25_7
# BB#6:
	movl	$.L.str23444, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	76(%rsp), %edx          # 4-byte Reload
	movq	80(%rsp), %r8           # 8-byte Reload
	movb	%cl, 55(%rsp)           # 1-byte Spill
	movq	%r8, %rcx
	movl	92(%rsp), %r8d          # 4-byte Reload
	movb	55(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB25_8
.LBB25_7:
	movl	$.L.str24445, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	56(%rsp), %rdi          # 8-byte Reload
	movl	72(%rsp), %edx          # 4-byte Reload
	movl	76(%rsp), %eax          # 4-byte Reload
	movb	%cl, 47(%rsp)           # 1-byte Spill
	movl	%eax, %ecx
	movq	80(%rsp), %r8           # 8-byte Reload
	movl	92(%rsp), %r9d          # 4-byte Reload
	movb	47(%rsp), %al           # 1-byte Reload
	callq	gzprintf
	movl	%eax, 40(%rsp)          # 4-byte Spill
.LBB25_8:
	movq	full_trace_file, %rax
	movl	92(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 32(%rsp)          # 8-byte Spill
	je	.LBB25_10
# BB#9:
	movl	$.L.str18439, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movq	96(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 28(%rsp)          # 4-byte Spill
	jmp	.LBB25_11
.LBB25_10:
	movl	$.L.str19440, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	32(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 24(%rsp)          # 4-byte Spill
.LBB25_11:
	movq	full_trace_file, %rax
	movl	108(%rsp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 16(%rsp)          # 8-byte Spill
	je	.LBB25_13
# BB#12:
	movl	$.L.str20441, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movq	112(%rsp), %rdx         # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 12(%rsp)          # 4-byte Spill
	jmp	.LBB25_14
.LBB25_13:
	movl	$.L.str21442, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	16(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 8(%rsp)           # 4-byte Spill
.LBB25_14:
	addq	$120, %rsp
	ret
.Ltmp585:
	.size	trace_logger_log_ptr, .Ltmp585-trace_logger_log_ptr
	.cfi_endproc

	.globl	trace_logger_log_double
	.align	16, 0x90
	.type	trace_logger_log_double,@function
trace_logger_log_double:                # @trace_logger_log_double
	.cfi_startproc
# BB#0:
	subq	$104, %rsp
.Ltmp587:
	.cfi_def_cfa_offset 112
	cmpb	$0, initp
	movl	%esi, 100(%rsp)         # 4-byte Spill
	movq	%r9, 88(%rsp)           # 8-byte Spill
	movl	%r8d, 84(%rsp)          # 4-byte Spill
	movq	%rcx, 72(%rsp)          # 8-byte Spill
	movl	%edx, 68(%rsp)          # 4-byte Spill
	vmovsd	%xmm0, 56(%rsp)         # 8-byte Spill
	movl	%edi, 52(%rsp)          # 4-byte Spill
	jne	.LBB26_2
# BB#1:
	movl	$.L.str14435, %eax
	movl	%eax, %edi
	movl	$.L.str6427, %eax
	movl	%eax, %esi
	movl	$.L__PRETTY_FUNCTION__.trace_logger_log_double, %eax
	movl	%eax, %ecx
	movl	$246, %edx
	callq	__assert_fail
.LBB26_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB26_14
# BB#3:
	movl	52(%rsp), %eax          # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB26_5
# BB#4:
	movq	full_trace_file, %rdi
	movl	$.L.str25446, %eax
	movl	%eax, %esi
	movb	$1, %al
	movl	100(%rsp), %edx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %ecx          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 48(%rsp)          # 4-byte Spill
	jmp	.LBB26_8
.LBB26_5:
	movq	full_trace_file, %rax
	movl	52(%rsp), %ecx          # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, 40(%rsp)          # 8-byte Spill
	jne	.LBB26_7
# BB#6:
	movl	$.L.str26447, %eax
	movl	%eax, %esi
	movb	$1, %al
	movq	40(%rsp), %rdi          # 8-byte Reload
	movl	100(%rsp), %edx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %ecx          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 36(%rsp)          # 4-byte Spill
	jmp	.LBB26_8
.LBB26_7:
	movl	$.L.str27448, %eax
	movl	%eax, %esi
	movb	$1, %al
	movq	40(%rsp), %rdi          # 8-byte Reload
	movl	52(%rsp), %edx          # 4-byte Reload
	movl	100(%rsp), %ecx         # 4-byte Reload
	vmovsd	56(%rsp), %xmm0         # 8-byte Reload
	movl	68(%rsp), %r8d          # 4-byte Reload
	callq	gzprintf
	movl	%eax, 32(%rsp)          # 4-byte Spill
.LBB26_8:
	movq	full_trace_file, %rax
	movl	68(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 24(%rsp)          # 8-byte Spill
	je	.LBB26_10
# BB#9:
	movl	$.L.str18439, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	24(%rsp), %rdi          # 8-byte Reload
	movq	72(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 20(%rsp)          # 4-byte Spill
	jmp	.LBB26_11
.LBB26_10:
	movl	$.L.str19440, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	24(%rsp), %rdi          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 16(%rsp)          # 4-byte Spill
.LBB26_11:
	movq	full_trace_file, %rax
	movl	84(%rsp), %ecx          # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, 8(%rsp)           # 8-byte Spill
	je	.LBB26_13
# BB#12:
	movl	$.L.str20441, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	8(%rsp), %rdi           # 8-byte Reload
	movq	88(%rsp), %rdx          # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, 4(%rsp)           # 4-byte Spill
	jmp	.LBB26_14
.LBB26_13:
	movl	$.L.str21442, %eax
	movl	%eax, %esi
	xorl	%eax, %eax
	movb	%al, %cl
	movq	8(%rsp), %rdi           # 8-byte Reload
	movb	%cl, %al
	callq	gzprintf
	movl	%eax, (%rsp)            # 4-byte Spill
.LBB26_14:
	addq	$104, %rsp
	ret
.Ltmp588:
	.size	trace_logger_log_double, .Ltmp588-trace_logger_log_double
	.cfi_endproc

	.globl	trace_logger_log_vector
	.align	16, 0x90
	.type	trace_logger_log_vector,@function
trace_logger_log_vector:                # @trace_logger_log_vector
	.cfi_startproc
# BB#0:
	pushq	%rbp
.Ltmp591:
	.cfi_def_cfa_offset 16
.Ltmp592:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
.Ltmp593:
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	16(%rbp), %rax
	cmpb	$0, initp
	movq	%rax, -8(%rbp)          # 8-byte Spill
	movl	%r9d, -12(%rbp)         # 4-byte Spill
	movq	%r8, -24(%rbp)          # 8-byte Spill
	movl	%ecx, -28(%rbp)         # 4-byte Spill
	movq	%rdx, -40(%rbp)         # 8-byte Spill
	movl	%esi, -44(%rbp)         # 4-byte Spill
	movl	%edi, -48(%rbp)         # 4-byte Spill
	jne	.LBB27_2
# BB#1:
	leaq	.L.str14435, %rdi
	leaq	.L.str6427, %rsi
	movl	$267, %edx              # imm = 0x10B
	leaq	.L__PRETTY_FUNCTION__.trace_logger_log_vector, %rcx
	callq	__assert_fail
.LBB27_2:
	callq	do_not_log
	testb	$1, %al
	jne	.LBB27_15
# BB#3:
	movl	$8, %eax
	movl	-44(%rbp), %ecx         # 4-byte Reload
	sarl	$31, %ecx
	shrl	$30, %ecx
	movl	-44(%rbp), %edx         # 4-byte Reload
	addl	%ecx, %edx
	sarl	$2, %edx
	addl	$3, %edx
	movl	%edx, %esi
	movq	%rsp, %rdi
	addq	$15, %rsi
	andq	$-16, %rsi
	movq	%rsp, %r8
	subq	%rsi, %r8
	movq	%r8, %rsp
	movl	-44(%rbp), %ecx         # 4-byte Reload
	movl	%eax, -52(%rbp)         # 4-byte Spill
	movl	%ecx, %eax
	cltd
	movl	-52(%rbp), %r9d         # 4-byte Reload
	idivl	%r9d
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%r8, %rdi
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movl	%eax, %edx
	movq	%r8, -72(%rbp)          # 8-byte Spill
	callq	convert_bytes_to_hex
	movl	-48(%rbp), %eax         # 4-byte Reload
	cmpl	$19134, %eax            # imm = 0x4ABE
	jne	.LBB27_5
# BB#4:
	leaq	.L.str28449, %rsi
	movq	full_trace_file, %rdi
	movl	-44(%rbp), %edx         # 4-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	-28(%rbp), %r8d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -76(%rbp)         # 4-byte Spill
	jmp	.LBB27_8
.LBB27_5:
	movq	full_trace_file, %rax
	movl	-48(%rbp), %ecx         # 4-byte Reload
	cmpl	$24601, %ecx            # imm = 0x6019
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB27_7
# BB#6:
	leaq	.L.str29450, %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movl	-44(%rbp), %edx         # 4-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	-28(%rbp), %r8d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -92(%rbp)         # 4-byte Spill
	jmp	.LBB27_8
.LBB27_7:
	leaq	.L.str30451, %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movl	-48(%rbp), %edx         # 4-byte Reload
	movl	-44(%rbp), %ecx         # 4-byte Reload
	movq	-72(%rbp), %r8          # 8-byte Reload
	movl	-28(%rbp), %r9d         # 4-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -96(%rbp)         # 4-byte Spill
.LBB27_8:
	movq	full_trace_file, %rax
	movl	-28(%rbp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	je	.LBB27_10
# BB#9:
	leaq	.L.str18439, %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movq	-24(%rbp), %rdx         # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -108(%rbp)        # 4-byte Spill
	jmp	.LBB27_11
.LBB27_10:
	leaq	.L.str19440, %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -112(%rbp)        # 4-byte Spill
.LBB27_11:
	movq	full_trace_file, %rax
	movl	-12(%rbp), %ecx         # 4-byte Reload
	cmpl	$0, %ecx
	movq	%rax, -120(%rbp)        # 8-byte Spill
	je	.LBB27_13
# BB#12:
	leaq	.L.str20441, %rsi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-8(%rbp), %rdx          # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -124(%rbp)        # 4-byte Spill
	jmp	.LBB27_14
.LBB27_13:
	leaq	.L.str21442, %rsi
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movb	$0, %al
	callq	gzprintf
	movl	%eax, -128(%rbp)        # 4-byte Spill
.LBB27_14:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rsp
.LBB27_15:
	movq	%rbp, %rsp
	popq	%rbp
	ret
.Ltmp594:
	.size	trace_logger_log_vector, .Ltmp594-trace_logger_log_vector
	.cfi_endproc

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"\nstore_loc[%d] = %d\n"
	.size	.L.str, 21

	.type	.L.str1,@object         # @.str1
.L.str1:
	.asciz	"store_vals[%d] = %d\n"
	.size	.L.str1, 21

	.type	.L.str2,@object         # @.str2
.L.str2:
	.asciz	"FAILED: store_loc[%d] = %d, should be %d\n"
	.size	.L.str2, 42

	.type	.L.str3,@object         # @.str3
.L.str3:
	.asciz	"Test failed with %d errors."
	.size	.L.str3, 28

	.type	.L.str4,@object         # @.str4
.L.str4:
	.asciz	"Test passed!\n"
	.size	.L.str4, 14

	.type	.L.str5,@object         # @.str5
	.section	.rodata,"a",@progbits
.L.str5:
	.asciz	"test_stores"
	.size	.L.str5, 12

	.type	.L.str6,@object         # @.str6
.L.str6:
	.asciz	"0:0"
	.size	.L.str6, 4

	.type	.L.str7,@object         # @.str7
.L.str7:
	.asciz	"1"
	.size	.L.str7, 2

	.type	.L.str8,@object         # @.str8
.L.str8:
	.zero	1
	.size	.L.str8, 1

	.type	.L.str9,@object         # @.str9
.L.str9:
	.asciz	"phi"
	.size	.L.str9, 4

	.type	.L.str10,@object        # @.str10
.L.str10:
	.asciz	"num_vals"
	.size	.L.str10, 9

	.type	.L.str11,@object        # @.str11
.L.str11:
	.asciz	"0:0-5"
	.size	.L.str11, 6

	.type	.L.str12,@object        # @.str12
.L.str12:
	.asciz	".lr.ph:1"
	.size	.L.str12, 9

	.type	.L.str13,@object        # @.str13
.L.str13:
	.asciz	"._crit_edge:0"
	.size	.L.str13, 14

	.type	.L.str14,@object        # @.str14
.L.str14:
	.asciz	"indvars.iv"
	.size	.L.str14, 11

	.type	.L.str15,@object        # @.str15
.L.str15:
	.asciz	"indvars.iv.next"
	.size	.L.str15, 16

	.type	.L.str16,@object        # @.str16
.L.str16:
	.asciz	"19:1"
	.size	.L.str16, 5

	.type	.L.str17,@object        # @.str17
.L.str17:
	.asciz	"2"
	.size	.L.str17, 2

	.type	.L.str18,@object        # @.str18
.L.str18:
	.asciz	"stdout"
	.size	.L.str18, 7

	.type	.L.str19,@object        # @.str19
.L.str19:
	.asciz	"3"
	.size	.L.str19, 2

	.type	.L.str20,@object        # @.str20
.L.str20:
	.asciz	"store_loc"
	.size	.L.str20, 10

	.type	.L.str21,@object        # @.str21
.L.str21:
	.asciz	"4"
	.size	.L.str21, 2

	.type	.L.str22,@object        # @.str22
.L.str22:
	.asciz	"5"
	.size	.L.str22, 2

	.type	.L.str23,@object        # @.str23
.L.str23:
	.asciz	"6"
	.size	.L.str23, 2

	.type	.L.str24,@object        # @.str24
.L.str24:
	.asciz	"fprintf"
	.size	.L.str24, 8

	.type	.L.str25,@object        # @.str25
.L.str25:
	.asciz	"7"
	.size	.L.str25, 2

	.type	.L.str26,@object        # @.str26
.L.str26:
	.asciz	"8"
	.size	.L.str26, 2

	.type	.L.str27,@object        # @.str27
.L.str27:
	.asciz	"store_vals"
	.size	.L.str27, 11

	.type	.L.str28,@object        # @.str28
.L.str28:
	.asciz	"9"
	.size	.L.str28, 2

	.type	.L.str29,@object        # @.str29
.L.str29:
	.asciz	"10"
	.size	.L.str29, 3

	.type	.L.str30,@object        # @.str30
.L.str30:
	.asciz	"11"
	.size	.L.str30, 3

	.type	.L.str31,@object        # @.str31
.L.str31:
	.asciz	"12"
	.size	.L.str31, 3

	.type	.L.str32,@object        # @.str32
.L.str32:
	.asciz	"13"
	.size	.L.str32, 3

	.type	.L.str33,@object        # @.str33
.L.str33:
	.asciz	"14"
	.size	.L.str33, 3

	.type	.L.str34,@object        # @.str34
.L.str34:
	.asciz	".lr.ph:1-0"
	.size	.L.str34, 11

	.type	.L.str35,@object        # @.str35
.L.str35:
	.asciz	"15:1"
	.size	.L.str35, 5

	.type	.L.str36,@object        # @.str36
.L.str36:
	.asciz	"16"
	.size	.L.str36, 3

	.type	.L.str37,@object        # @.str37
.L.str37:
	.asciz	"17"
	.size	.L.str37, 3

	.type	.L.str38,@object        # @.str38
.L.str38:
	.asciz	"18"
	.size	.L.str38, 3

	.type	.L.str39,@object        # @.str39
.L.str39:
	.asciz	"15:1-0"
	.size	.L.str39, 7

	.type	.L.str40,@object        # @.str40
.L.str40:
	.asciz	"lftr.wideiv"
	.size	.L.str40, 12

	.type	.L.str41,@object        # @.str41
.L.str41:
	.asciz	"exitcond"
	.size	.L.str41, 9

	.type	.L.str42,@object        # @.str42
.L.str42:
	.asciz	"19:1-0"
	.size	.L.str42, 7

	.type	.L.str43,@object        # @.str43
.L.str43:
	.asciz	"._crit_edge:0-0"
	.size	.L.str43, 16

	.type	.L.str44,@object        # @.str44
.L.str44:
	.asciz	"store_kernel"
	.size	.L.str44, 13

	.type	.L.str45,@object        # @.str45
.L.str45:
	.asciz	"kiss_fft_alloc"
	.size	.L.str45, 15

	.type	.L.str46,@object        # @.str46
.L.str46:
	.asciz	"0:0-4"
	.size	.L.str46, 6

	.type	.L.str47,@object        # @.str47
.L.str47:
	.asciz	"20:0"
	.size	.L.str47, 5

	.type	.L.str48,@object        # @.str48
.L.str48:
	.asciz	"3:0"
	.size	.L.str48, 4

	.type	.L.str49,@object        # @.str49
.L.str49:
	.asciz	"3:0-3"
	.size	.L.str49, 6

	.type	.L.str50,@object        # @.str50
.L.str50:
	.asciz	".lr.ph5:1"
	.size	.L.str50, 10

	.type	.L.str51,@object        # @.str51
.L.str51:
	.asciz	"._crit_edge6:0"
	.size	.L.str51, 15

	.type	.L.str52,@object        # @.str52
.L.str52:
	.asciz	"indvars.iv7"
	.size	.L.str52, 12

	.type	.L.str53,@object        # @.str53
	.align	16
.L.str53:
	.asciz	"indvars.iv.next8"
	.size	.L.str53, 17

	.type	.L.str54,@object        # @.str54
.L.str54:
	.asciz	"in"
	.size	.L.str54, 3

	.type	.L.str55,@object        # @.str55
.L.str55:
	.asciz	".lr.ph5:1-0"
	.size	.L.str55, 12

	.type	.L.str56,@object        # @.str56
.L.str56:
	.asciz	".lr.ph5:1-1"
	.size	.L.str56, 12

	.type	.L.str57,@object        # @.str57
.L.str57:
	.asciz	"lftr.wideiv9"
	.size	.L.str57, 13

	.type	.L.str58,@object        # @.str58
.L.str58:
	.asciz	"exitcond10"
	.size	.L.str58, 11

	.type	.L.str59,@object        # @.str59
.L.str59:
	.asciz	".lr.ph5:1-2"
	.size	.L.str59, 12

	.type	.L.str60,@object        # @.str60
	.align	16
.L.str60:
	.asciz	"._crit_edge6:0-0"
	.size	.L.str60, 17

	.type	.L.str61,@object        # @.str61
.L.str61:
	.asciz	"kiss_fft"
	.size	.L.str61, 9

	.type	.L.str62,@object        # @.str62
.L.str62:
	.asciz	"out"
	.size	.L.str62, 4

	.type	.L.str63,@object        # @.str63
	.align	16
.L.str63:
	.asciz	"._crit_edge6:0-1"
	.size	.L.str63, 17

	.type	.L.str64,@object        # @.str64
.L.str64:
	.asciz	"free"
	.size	.L.str64, 5

	.type	.L.str65,@object        # @.str65
.L.str65:
	.asciz	"15"
	.size	.L.str65, 3

	.type	.L.str66,@object        # @.str66
	.align	16
.L.str66:
	.asciz	"._crit_edge6:0-3"
	.size	.L.str66, 17

	.type	.L.str67,@object        # @.str67
.L.str67:
	.asciz	"19"
	.size	.L.str67, 3

	.type	.L.str68,@object        # @.str68
.L.str68:
	.asciz	".lr.ph:1-1"
	.size	.L.str68, 11

	.type	.L.str69,@object        # @.str69
.L.str69:
	.asciz	"._crit_edge:0-1"
	.size	.L.str69, 16

	.type	.L.str70,@object        # @.str70
.L.str70:
	.asciz	"20:0-0"
	.size	.L.str70, 7

	.type	.L.str71,@object        # @.str71
.L.str71:
	.asciz	"main"
	.size	.L.str71, 5

	.type	.L.str72,@object        # @.str72
.L.str72:
	.asciz	"malloc"
	.size	.L.str72, 7

	.type	.L.str73,@object        # @.str73
.L.str73:
	.asciz	"5:1"
	.size	.L.str73, 4

	.type	.L.str74,@object        # @.str74
.L.str74:
	.asciz	"5:1-0"
	.size	.L.str74, 6

	.type	.L.str75,@object        # @.str75
.L.str75:
	.asciz	"5:1-1"
	.size	.L.str75, 6

	.type	.L.str76,@object        # @.str76
.L.str76:
	.asciz	"5:1-2"
	.size	.L.str76, 6

	.type	.L.str77,@object        # @.str77
.L.str77:
	.asciz	"9:0"
	.size	.L.str77, 4

	.type	.L.str78,@object        # @.str78
.L.str78:
	.asciz	"9:0-0"
	.size	.L.str78, 6

	.type	.L.str79,@object        # @.str79
.L.str79:
	.asciz	"9:0-2"
	.size	.L.str79, 6

	.type	.L.str80,@object        # @.str80
	.align	16
.L.str80:
	.asciz	"store_kernel/loop 39\n"
	.size	.L.str80, 22

	.type	.L.str81,@object        # @.str81
.L.str81:
	.asciz	"kiss_fft_alloc"
	.size	.L.str81, 15

	.type	.L.str182,@object       # @.str182
.L.str182:
	.asciz	"0:0"
	.size	.L.str182, 4

	.type	.L.str283,@object       # @.str283
.L.str283:
	.asciz	"1"
	.size	.L.str283, 2

	.type	.L.str384,@object       # @.str384
.L.str384:
	.zero	1
	.size	.L.str384, 1

	.type	.L.str485,@object       # @.str485
.L.str485:
	.asciz	"phi"
	.size	.L.str485, 4

	.type	.L.str586,@object       # @.str586
.L.str586:
	.asciz	"nfft"
	.size	.L.str586, 5

	.type	.L.str687,@object       # @.str687
.L.str687:
	.asciz	"2"
	.size	.L.str687, 2

	.type	.L.str788,@object       # @.str788
.L.str788:
	.asciz	"3"
	.size	.L.str788, 2

	.type	.L.str889,@object       # @.str889
.L.str889:
	.asciz	"4"
	.size	.L.str889, 2

	.type	.L.str990,@object       # @.str990
.L.str990:
	.asciz	"5"
	.size	.L.str990, 2

	.type	.L.str1091,@object      # @.str1091
.L.str1091:
	.asciz	"lenmem"
	.size	.L.str1091, 7

	.type	.L.str1192,@object      # @.str1192
.L.str1192:
	.asciz	"0:0-6"
	.size	.L.str1192, 6

	.type	.L.str1293,@object      # @.str1293
.L.str1293:
	.asciz	"6:0"
	.size	.L.str1293, 4

	.type	.L.str1394,@object      # @.str1394
.L.str1394:
	.asciz	"9:0"
	.size	.L.str1394, 4

	.type	.L.str1495,@object      # @.str1495
.L.str1495:
	.asciz	"7"
	.size	.L.str1495, 2

	.type	.L.str1596,@object      # @.str1596
.L.str1596:
	.asciz	"malloc"
	.size	.L.str1596, 7

	.type	.L.str1697,@object      # @.str1697
.L.str1697:
	.asciz	"8"
	.size	.L.str1697, 2

	.type	.L.str1798,@object      # @.str1798
.L.str1798:
	.asciz	"6:0-1"
	.size	.L.str1798, 6

	.type	.L.str1899,@object      # @.str1899
.L.str1899:
	.asciz	"17:0"
	.size	.L.str1899, 5

	.type	.L.str19100,@object     # @.str19100
.L.str19100:
	.asciz	"10"
	.size	.L.str19100, 3

	.type	.L.str20101,@object     # @.str20101
.L.str20101:
	.asciz	"mem"
	.size	.L.str20101, 4

	.type	.L.str21102,@object     # @.str21102
.L.str21102:
	.asciz	"9:0-0"
	.size	.L.str21102, 6

	.type	.L.str22103,@object     # @.str22103
.L.str22103:
	.asciz	"16:0"
	.size	.L.str22103, 5

	.type	.L.str23104,@object     # @.str23104
.L.str23104:
	.asciz	"11:0"
	.size	.L.str23104, 5

	.type	.L.str24105,@object     # @.str24105
.L.str24105:
	.asciz	"12"
	.size	.L.str24105, 3

	.type	.L.str25106,@object     # @.str25106
.L.str25106:
	.asciz	"13"
	.size	.L.str25106, 3

	.type	.L.str26107,@object     # @.str26107
.L.str26107:
	.asciz	"11:0-0"
	.size	.L.str26107, 7

	.type	.L.str27108,@object     # @.str27108
.L.str27108:
	.asciz	"14:0"
	.size	.L.str27108, 5

	.type	.L.str28109,@object     # @.str28109
.L.str28109:
	.asciz	"15"
	.size	.L.str28109, 3

	.type	.L.str29110,@object     # @.str29110
.L.str29110:
	.asciz	"14:0-1"
	.size	.L.str29110, 7

	.type	.L.str30111,@object     # @.str30111
.L.str30111:
	.asciz	"st.0"
	.size	.L.str30111, 5

	.type	.L.str31112,@object     # @.str31112
.L.str31112:
	.asciz	"16:0-0"
	.size	.L.str31112, 7

	.type	.L.str32113,@object     # @.str32113
.L.str32113:
	.asciz	"16:0-1"
	.size	.L.str32113, 7

	.type	.L.str33114,@object     # @.str33114
.L.str33114:
	.asciz	"st.1"
	.size	.L.str33114, 5

	.type	.L.str34115,@object     # @.str34115
.L.str34115:
	.asciz	"18"
	.size	.L.str34115, 3

	.type	.L.str35116,@object     # @.str35116
.L.str35116:
	.asciz	"17:0-0"
	.size	.L.str35116, 7

	.type	.L.str36117,@object     # @.str36117
.L.str36117:
	.asciz	"41:0"
	.size	.L.str36117, 5

	.type	.L.str37118,@object     # @.str37118
.L.str37118:
	.asciz	"19:0"
	.size	.L.str37118, 5

	.type	.L.str38119,@object     # @.str38119
.L.str38119:
	.asciz	"20"
	.size	.L.str38119, 3

	.type	.L.str39120,@object     # @.str39120
.L.str39120:
	.asciz	"19:0-0"
	.size	.L.str39120, 7

	.type	.L.str40121,@object     # @.str40121
.L.str40121:
	.asciz	"21"
	.size	.L.str40121, 3

	.type	.L.str41122,@object     # @.str41122
.L.str41122:
	.asciz	"19:0-1"
	.size	.L.str41122, 7

	.type	.L.str42123,@object     # @.str42123
.L.str42123:
	.asciz	"inverse_fft"
	.size	.L.str42123, 12

	.type	.L.str43124,@object     # @.str43124
.L.str43124:
	.asciz	"22"
	.size	.L.str43124, 3

	.type	.L.str44125,@object     # @.str44125
.L.str44125:
	.asciz	"19:0-3"
	.size	.L.str44125, 7

	.type	.L.str45126,@object     # @.str45126
.L.str45126:
	.asciz	".lr.ph:0"
	.size	.L.str45126, 9

	.type	.L.str46127,@object     # @.str46127
.L.str46127:
	.asciz	"._crit_edge:0"
	.size	.L.str46127, 14

	.type	.L.str47128,@object     # @.str47128
.L.str47128:
	.asciz	"23"
	.size	.L.str47128, 3

	.type	.L.str48129,@object     # @.str48129
.L.str48129:
	.asciz	".lr.ph:0-0"
	.size	.L.str48129, 11

	.type	.L.str49130,@object     # @.str49130
.L.str49130:
	.asciz	"24:1"
	.size	.L.str49130, 5

	.type	.L.str50131,@object     # @.str50131
.L.str50131:
	.asciz	"indvars.iv"
	.size	.L.str50131, 11

	.type	.L.str51132,@object     # @.str51132
.L.str51132:
	.asciz	"indvars.iv.next"
	.size	.L.str51132, 16

	.type	.L.str52133,@object     # @.str52133
.L.str52133:
	.asciz	"33:1"
	.size	.L.str52133, 5

	.type	.L.str53134,@object     # @.str53134
.L.str53134:
	.asciz	"25"
	.size	.L.str53134, 3

	.type	.L.str54135,@object     # @.str54135
.L.str54135:
	.asciz	"26"
	.size	.L.str54135, 3

	.type	.L.str55136,@object     # @.str55136
.L.str55136:
	.asciz	"27"
	.size	.L.str55136, 3

	.type	.L.str56137,@object     # @.str56137
.L.str56137:
	.asciz	"28"
	.size	.L.str56137, 3

	.type	.L.str57138,@object     # @.str57138
.L.str57138:
	.asciz	"29"
	.size	.L.str57138, 3

	.type	.L.str58139,@object     # @.str58139
.L.str58139:
	.asciz	"30"
	.size	.L.str58139, 3

	.type	.L.str59140,@object     # @.str59140
.L.str59140:
	.asciz	"24:1-2"
	.size	.L.str59140, 7

	.type	.L.str60141,@object     # @.str60141
.L.str60141:
	.asciz	"31:1"
	.size	.L.str60141, 5

	.type	.L.str61142,@object     # @.str61142
.L.str61142:
	.asciz	"32"
	.size	.L.str61142, 3

	.type	.L.str62143,@object     # @.str62143
.L.str62143:
	.asciz	"31:1-1"
	.size	.L.str62143, 7

	.type	.L.str63144,@object     # @.str63144
.L.str63144:
	.asciz	"phase.0"
	.size	.L.str63144, 8

	.type	.L.str64145,@object     # @.str64145
.L.str64145:
	.asciz	"34"
	.size	.L.str64145, 3

	.type	.L.str65146,@object     # @.str65146
.L.str65146:
	.asciz	"cos"
	.size	.L.str65146, 4

	.type	.L.str66147,@object     # @.str66147
.L.str66147:
	.asciz	"35"
	.size	.L.str66147, 3

	.type	.L.str67148,@object     # @.str67148
.L.str67148:
	.asciz	"36"
	.size	.L.str67148, 3

	.type	.L.str68149,@object     # @.str68149
.L.str68149:
	.asciz	"33:1-0"
	.size	.L.str68149, 7

	.type	.L.str69150,@object     # @.str69150
.L.str69150:
	.asciz	"37"
	.size	.L.str69150, 3

	.type	.L.str70151,@object     # @.str70151
.L.str70151:
	.asciz	"sin"
	.size	.L.str70151, 4

	.type	.L.str71152,@object     # @.str71152
.L.str71152:
	.asciz	"38"
	.size	.L.str71152, 3

	.type	.L.str72153,@object     # @.str72153
.L.str72153:
	.asciz	"39"
	.size	.L.str72153, 3

	.type	.L.str73154,@object     # @.str73154
.L.str73154:
	.asciz	"33:1-1"
	.size	.L.str73154, 7

	.type	.L.str74155,@object     # @.str74155
.L.str74155:
	.asciz	"lftr.wideiv"
	.size	.L.str74155, 12

	.type	.L.str75156,@object     # @.str75156
.L.str75156:
	.asciz	"exitcond"
	.size	.L.str75156, 9

	.type	.L.str76157,@object     # @.str76157
.L.str76157:
	.asciz	"33:1-2"
	.size	.L.str76157, 7

	.type	.L.str77158,@object     # @.str77158
.L.str77158:
	.asciz	"40"
	.size	.L.str77158, 3

	.type	.L.str78159,@object     # @.str78159
.L.str78159:
	.asciz	"._crit_edge:0-0"
	.size	.L.str78159, 16

	.type	.L.str79160,@object     # @.str79160
.L.str79160:
	.asciz	"kf_factor"
	.size	.L.str79160, 10

	.type	.L.str80161,@object     # @.str80161
.L.str80161:
	.asciz	"._crit_edge:0-1"
	.size	.L.str80161, 16

	.type	.L.str81162,@object     # @.str81162
.L.str81162:
	.asciz	"41:0-0"
	.size	.L.str81162, 7

	.type	.L.str82,@object        # @.str82
.L.str82:
	.asciz	"n"
	.size	.L.str82, 2

	.type	.L.str83,@object        # @.str83
.L.str83:
	.asciz	"sqrt"
	.size	.L.str83, 5

	.type	.L.str84,@object        # @.str84
.L.str84:
	.asciz	"floor"
	.size	.L.str84, 6

	.type	.L.str85,@object        # @.str85
.L.str85:
	.asciz	"0:0-4"
	.size	.L.str85, 6

	.type	.L.str86,@object        # @.str86
.L.str86:
	.asciz	".outer:1"
	.size	.L.str86, 9

	.type	.L.str87,@object        # @.str87
.L.str87:
	.asciz	".01.ph"
	.size	.L.str87, 7

	.type	.L.str88,@object        # @.str88
.L.str88:
	.asciz	"._crit_edge:1"
	.size	.L.str88, 14

	.type	.L.str89,@object        # @.str89
.L.str89:
	.asciz	"facbuf"
	.size	.L.str89, 7

	.type	.L.str90,@object        # @.str90
.L.str90:
	.asciz	"p.0.ph"
	.size	.L.str90, 7

	.type	.L.str91,@object        # @.str91
.L.str91:
	.asciz	"p.0.lcssa"
	.size	.L.str91, 10

	.type	.L.str92,@object        # @.str92
.L.str92:
	.asciz	".0.ph"
	.size	.L.str92, 6

	.type	.L.str93,@object        # @.str93
.L.str93:
	.asciz	".outer:1-0"
	.size	.L.str93, 11

	.type	.L.str94,@object        # @.str94
.L.str94:
	.asciz	".lr.ph:2"
	.size	.L.str94, 9

	.type	.L.str95,@object        # @.str95
.L.str95:
	.asciz	"p.02"
	.size	.L.str95, 5

	.type	.L.str96,@object        # @.str96
.L.str96:
	.asciz	"p.0.be"
	.size	.L.str96, 7

	.type	.L.str97,@object        # @.str97
.L.str97:
	.asciz	".backedge:2"
	.size	.L.str97, 12

	.type	.L.str98,@object        # @.str98
.L.str98:
	.asciz	".lr.ph:2-0"
	.size	.L.str98, 11

	.type	.L.str99,@object        # @.str99
.L.str99:
	.asciz	"6:2"
	.size	.L.str99, 4

	.type	.L.str100,@object       # @.str100
.L.str100:
	.asciz	"7:2"
	.size	.L.str100, 4

	.type	.L.str101,@object       # @.str101
.L.str101:
	.asciz	"6:2-1"
	.size	.L.str101, 6

	.type	.L.str102,@object       # @.str102
.L.str102:
	.asciz	"7:2-1"
	.size	.L.str102, 6

	.type	.L.str103,@object       # @.str103
.L.str103:
	.asciz	"p.1"
	.size	.L.str103, 4

	.type	.L.str104,@object       # @.str104
.L.str104:
	.asciz	"9"
	.size	.L.str104, 2

	.type	.L.str105,@object       # @.str105
.L.str105:
	.asciz	"11"
	.size	.L.str105, 3

	.type	.L.str106,@object       # @.str106
.L.str106:
	.asciz	".backedge:2-1"
	.size	.L.str106, 14

	.type	.L.str107,@object       # @.str107
.L.str107:
	.asciz	"14"
	.size	.L.str107, 3

	.type	.L.str108,@object       # @.str108
.L.str108:
	.asciz	"._crit_edge:1-2"
	.size	.L.str108, 16

	.type	.L.str109,@object       # @.str109
.L.str109:
	.asciz	"._crit_edge:1-4"
	.size	.L.str109, 16

	.type	.L.str110,@object       # @.str110
.L.str110:
	.asciz	"16"
	.size	.L.str110, 3

	.type	.L.str111,@object       # @.str111
.L.str111:
	.asciz	"._crit_edge:1-5"
	.size	.L.str111, 16

	.type	.L.str112,@object       # @.str112
.L.str112:
	.asciz	"kiss_fft_stride"
	.size	.L.str112, 16

	.type	.L.str113,@object       # @.str113
.L.str113:
	.asciz	"fout"
	.size	.L.str113, 5

	.type	.L.str114,@object       # @.str114
.L.str114:
	.asciz	"fin"
	.size	.L.str114, 4

	.type	.L.str115,@object       # @.str115
.L.str115:
	.asciz	"2:0"
	.size	.L.str115, 4

	.type	.L.str116,@object       # @.str116
.L.str116:
	.asciz	"15:0"
	.size	.L.str116, 5

	.type	.L.str117,@object       # @.str117
.L.str117:
	.asciz	"st"
	.size	.L.str117, 3

	.type	.L.str118,@object       # @.str118
.L.str118:
	.asciz	"6"
	.size	.L.str118, 2

	.type	.L.str119,@object       # @.str119
.L.str119:
	.asciz	"2:0-1"
	.size	.L.str119, 6

	.type	.L.str120,@object       # @.str120
.L.str120:
	.asciz	"kf_work"
	.size	.L.str120, 8

	.type	.L.str121,@object       # @.str121
.L.str121:
	.asciz	"in_stride"
	.size	.L.str121, 10

	.type	.L.str122,@object       # @.str122
.L.str122:
	.asciz	"memcpy"
	.size	.L.str122, 7

	.type	.L.str123,@object       # @.str123
.L.str123:
	.asciz	"2:0-2"
	.size	.L.str123, 6

	.type	.L.str124,@object       # @.str124
.L.str124:
	.asciz	"free"
	.size	.L.str124, 5

	.type	.L.str125,@object       # @.str125
.L.str125:
	.asciz	"2:0-3"
	.size	.L.str125, 6

	.type	.L.str126,@object       # @.str126
.L.str126:
	.asciz	"15:0-0"
	.size	.L.str126, 7

	.type	.L.str127,@object       # @.str127
.L.str127:
	.asciz	"15:0-1"
	.size	.L.str127, 7

	.type	.L.str128,@object       # @.str128
.L.str128:
	.asciz	"factors"
	.size	.L.str128, 8

	.type	.L.str129,@object       # @.str129
.L.str129:
	.asciz	"Fout"
	.size	.L.str129, 5

	.type	.L.str130,@object       # @.str130
.L.str130:
	.asciz	"0:0-12"
	.size	.L.str130, 7

	.type	.L.str131,@object       # @.str131
.L.str131:
	.asciz	".preheader:0"
	.size	.L.str131, 13

	.type	.L.str132,@object       # @.str132
.L.str132:
	.asciz	".preheader3:0"
	.size	.L.str132, 14

	.type	.L.str133,@object       # @.str133
.L.str133:
	.asciz	"fstride"
	.size	.L.str133, 8

	.type	.L.str134,@object       # @.str134
.L.str134:
	.asciz	".preheader3:0-0"
	.size	.L.str134, 16

	.type	.L.str135,@object       # @.str135
.L.str135:
	.asciz	"23:1"
	.size	.L.str135, 5

	.type	.L.str136,@object       # @.str136
.L.str136:
	.asciz	".preheader:0-0"
	.size	.L.str136, 15

	.type	.L.str137,@object       # @.str137
.L.str137:
	.asciz	"16:1"
	.size	.L.str137, 5

	.type	.L.str138,@object       # @.str138
.L.str138:
	.asciz	".01"
	.size	.L.str138, 4

	.type	.L.str139,@object       # @.str139
.L.str139:
	.asciz	"f"
	.size	.L.str139, 2

	.type	.L.str140,@object       # @.str140
.L.str140:
	.asciz	".0"
	.size	.L.str140, 3

	.type	.L.str141,@object       # @.str141
.L.str141:
	.asciz	"17"
	.size	.L.str141, 3

	.type	.L.str142,@object       # @.str142
.L.str142:
	.asciz	"19"
	.size	.L.str142, 3

	.type	.L.str143,@object       # @.str143
.L.str143:
	.asciz	"16:1-0"
	.size	.L.str143, 7

	.type	.L.str144,@object       # @.str144
.L.str144:
	.asciz	"16:1-3"
	.size	.L.str144, 7

	.type	.L.str145,@object       # @.str145
.L.str145:
	.asciz	".loopexit:0"
	.size	.L.str145, 12

	.type	.L.str146,@object       # @.str146
.L.str146:
	.asciz	".12"
	.size	.L.str146, 4

	.type	.L.str147,@object       # @.str147
.L.str147:
	.asciz	"24"
	.size	.L.str147, 3

	.type	.L.str148,@object       # @.str148
.L.str148:
	.asciz	".1"
	.size	.L.str148, 3

	.type	.L.str149,@object       # @.str149
.L.str149:
	.asciz	"23:1-0"
	.size	.L.str149, 7

	.type	.L.str150,@object       # @.str150
.L.str150:
	.asciz	"23:1-3"
	.size	.L.str150, 7

	.type	.L.str151,@object       # @.str151
.L.str151:
	.asciz	".loopexit:0-1"
	.size	.L.str151, 14

	.type	.L.str152,@object       # @.str152
.L.str152:
	.asciz	"32:0"
	.size	.L.str152, 5

	.type	.L.str153,@object       # @.str153
.L.str153:
	.asciz	"30:0"
	.size	.L.str153, 5

	.type	.L.str154,@object       # @.str154
.L.str154:
	.asciz	"28:0"
	.size	.L.str154, 5

	.type	.L.str155,@object       # @.str155
.L.str155:
	.asciz	"27:0"
	.size	.L.str155, 5

	.type	.L.str156,@object       # @.str156
.L.str156:
	.asciz	"33:0"
	.size	.L.str156, 5

	.type	.L.str157,@object       # @.str157
.L.str157:
	.asciz	"27:0-0"
	.size	.L.str157, 7

	.type	.L.str158,@object       # @.str158
.L.str158:
	.asciz	"kf_bfly2"
	.size	.L.str158, 9

	.type	.L.str159,@object       # @.str159
.L.str159:
	.asciz	"27:0-1"
	.size	.L.str159, 7

	.type	.L.str160,@object       # @.str160
.L.str160:
	.asciz	"34:0"
	.size	.L.str160, 5

	.type	.L.str161,@object       # @.str161
.L.str161:
	.asciz	"28:0-0"
	.size	.L.str161, 7

	.type	.L.str162,@object       # @.str162
.L.str162:
	.asciz	"kf_bfly3"
	.size	.L.str162, 9

	.type	.L.str163,@object       # @.str163
.L.str163:
	.asciz	"28:0-1"
	.size	.L.str163, 7

	.type	.L.str164,@object       # @.str164
.L.str164:
	.asciz	"31"
	.size	.L.str164, 3

	.type	.L.str165,@object       # @.str165
.L.str165:
	.asciz	"30:0-0"
	.size	.L.str165, 7

	.type	.L.str166,@object       # @.str166
.L.str166:
	.asciz	"kf_bfly4"
	.size	.L.str166, 9

	.type	.L.str167,@object       # @.str167
.L.str167:
	.asciz	"30:0-1"
	.size	.L.str167, 7

	.type	.L.str168,@object       # @.str168
.L.str168:
	.asciz	"32:0-0"
	.size	.L.str168, 7

	.type	.L.str169,@object       # @.str169
.L.str169:
	.asciz	"kf_bfly5"
	.size	.L.str169, 9

	.type	.L.str170,@object       # @.str170
.L.str170:
	.asciz	"32:0-1"
	.size	.L.str170, 7

	.type	.L.str171,@object       # @.str171
.L.str171:
	.asciz	"33:0-0"
	.size	.L.str171, 7

	.type	.L.str172,@object       # @.str172
.L.str172:
	.asciz	"kf_bfly_generic"
	.size	.L.str172, 16

	.type	.L.str173,@object       # @.str173
.L.str173:
	.asciz	"33:0-1"
	.size	.L.str173, 7

	.type	.L.str174,@object       # @.str174
.L.str174:
	.asciz	"34:0-0"
	.size	.L.str174, 7

	.type	.L.str175,@object       # @.str175
.L.str175:
	.asciz	"kiss_fft"
	.size	.L.str175, 9

	.type	.L.str176,@object       # @.str176
.L.str176:
	.asciz	"0:0-3"
	.size	.L.str176, 6

	.type	.L.str177,@object       # @.str177
.L.str177:
	.asciz	"cfg"
	.size	.L.str177, 4

	.type	.L.str178,@object       # @.str178
	.align	16
.L.str178:
	.asciz	"kiss_fft_cleanup"
	.size	.L.str178, 17

	.type	.L.str179,@object       # @.str179
.L.str179:
	.asciz	"0:0-0"
	.size	.L.str179, 6

	.type	.L.str180,@object       # @.str180
	.align	16
.L.str180:
	.asciz	"kiss_fft_next_fast_size"
	.size	.L.str180, 24

	.type	.L.str181,@object       # @.str181
.L.str181:
	.asciz	"0:0-1"
	.size	.L.str181, 6

	.type	.L.str182163,@object    # @.str182163
.L.str182163:
	.asciz	"1:1"
	.size	.L.str182163, 4

	.type	.L.str183,@object       # @.str183
.L.str183:
	.asciz	"1:1-1"
	.size	.L.str183, 6

	.type	.L.str184,@object       # @.str184
.L.str184:
	.asciz	".loopexit:1"
	.size	.L.str184, 12

	.type	.L.str185,@object       # @.str185
.L.str185:
	.asciz	"m.01"
	.size	.L.str185, 5

	.type	.L.str186,@object       # @.str186
.L.str186:
	.asciz	".lr.ph:2-1"
	.size	.L.str186, 11

	.type	.L.str187,@object       # @.str187
.L.str187:
	.asciz	"m.0.lcssa"
	.size	.L.str187, 10

	.type	.L.str188,@object       # @.str188
.L.str188:
	.asciz	".loopexit:1-0"
	.size	.L.str188, 14

	.type	.L.str189,@object       # @.str189
.L.str189:
	.asciz	".lr.ph4:2"
	.size	.L.str189, 10

	.type	.L.str190,@object       # @.str190
.L.str190:
	.asciz	".loopexit2:1"
	.size	.L.str190, 13

	.type	.L.str191,@object       # @.str191
.L.str191:
	.asciz	"m.13"
	.size	.L.str191, 5

	.type	.L.str192,@object       # @.str192
.L.str192:
	.asciz	".lr.ph4:2-1"
	.size	.L.str192, 12

	.type	.L.str193,@object       # @.str193
.L.str193:
	.asciz	"m.1.lcssa"
	.size	.L.str193, 10

	.type	.L.str194,@object       # @.str194
.L.str194:
	.asciz	".loopexit2:1-0"
	.size	.L.str194, 15

	.type	.L.str195,@object       # @.str195
.L.str195:
	.asciz	".lr.ph7:2"
	.size	.L.str195, 10

	.type	.L.str196,@object       # @.str196
.L.str196:
	.asciz	"m.26"
	.size	.L.str196, 5

	.type	.L.str197,@object       # @.str197
.L.str197:
	.asciz	".lr.ph7:2-1"
	.size	.L.str197, 12

	.type	.L.str198,@object       # @.str198
.L.str198:
	.asciz	"m.2.lcssa"
	.size	.L.str198, 10

	.type	.L.str199,@object       # @.str199
.L.str199:
	.asciz	"._crit_edge:1-1"
	.size	.L.str199, 16

	.type	.L.str200,@object       # @.str200
.L.str200:
	.asciz	"m"
	.size	.L.str200, 2

	.type	.L.str201,@object       # @.str201
.L.str201:
	.asciz	"0:0-7"
	.size	.L.str201, 6

	.type	.L.str202,@object       # @.str202
.L.str202:
	.asciz	"4:1"
	.size	.L.str202, 4

	.type	.L.str203,@object       # @.str203
.L.str203:
	.asciz	"Fout2.0"
	.size	.L.str203, 8

	.type	.L.str204,@object       # @.str204
.L.str204:
	.asciz	"tw1.0"
	.size	.L.str204, 6

	.type	.L.str205,@object       # @.str205
.L.str205:
	.asciz	"4:1-1"
	.size	.L.str205, 6

	.type	.L.str206,@object       # @.str206
.L.str206:
	.asciz	"4:1-2"
	.size	.L.str206, 6

	.type	.L.str207,@object       # @.str207
.L.str207:
	.asciz	"4:1-3"
	.size	.L.str207, 6

	.type	.L.str208,@object       # @.str208
.L.str208:
	.asciz	"4:1-4"
	.size	.L.str208, 6

	.type	.L.str209,@object       # @.str209
.L.str209:
	.asciz	"33"
	.size	.L.str209, 3

	.type	.L.str210,@object       # @.str210
.L.str210:
	.asciz	"4:1-8"
	.size	.L.str210, 6

	.type	.L.str211,@object       # @.str211
.L.str211:
	.asciz	"0:0-10"
	.size	.L.str211, 7

	.type	.L.str212,@object       # @.str212
.L.str212:
	.asciz	"7:1"
	.size	.L.str212, 4

	.type	.L.str213,@object       # @.str213
.L.str213:
	.asciz	"tw2.0"
	.size	.L.str213, 6

	.type	.L.str214,@object       # @.str214
.L.str214:
	.asciz	"41"
	.size	.L.str214, 3

	.type	.L.str215,@object       # @.str215
.L.str215:
	.asciz	"k.0"
	.size	.L.str215, 4

	.type	.L.str216,@object       # @.str216
.L.str216:
	.asciz	"71"
	.size	.L.str216, 3

	.type	.L.str217,@object       # @.str217
.L.str217:
	.asciz	"70"
	.size	.L.str217, 3

	.type	.L.str218,@object       # @.str218
.L.str218:
	.asciz	"42"
	.size	.L.str218, 3

	.type	.L.str219,@object       # @.str219
.L.str219:
	.asciz	"43"
	.size	.L.str219, 3

	.type	.L.str220,@object       # @.str220
.L.str220:
	.asciz	"44"
	.size	.L.str220, 3

	.type	.L.str221,@object       # @.str221
.L.str221:
	.asciz	"45"
	.size	.L.str221, 3

	.type	.L.str222,@object       # @.str222
.L.str222:
	.asciz	"46"
	.size	.L.str222, 3

	.type	.L.str223,@object       # @.str223
.L.str223:
	.asciz	"47"
	.size	.L.str223, 3

	.type	.L.str224,@object       # @.str224
.L.str224:
	.asciz	"48"
	.size	.L.str224, 3

	.type	.L.str225,@object       # @.str225
.L.str225:
	.asciz	"7:1-2"
	.size	.L.str225, 6

	.type	.L.str226,@object       # @.str226
.L.str226:
	.asciz	"49"
	.size	.L.str226, 3

	.type	.L.str227,@object       # @.str227
.L.str227:
	.asciz	"50"
	.size	.L.str227, 3

	.type	.L.str228,@object       # @.str228
.L.str228:
	.asciz	"51"
	.size	.L.str228, 3

	.type	.L.str229,@object       # @.str229
.L.str229:
	.asciz	"52"
	.size	.L.str229, 3

	.type	.L.str230,@object       # @.str230
.L.str230:
	.asciz	"53"
	.size	.L.str230, 3

	.type	.L.str231,@object       # @.str231
.L.str231:
	.asciz	"54"
	.size	.L.str231, 3

	.type	.L.str232,@object       # @.str232
.L.str232:
	.asciz	"55"
	.size	.L.str232, 3

	.type	.L.str233,@object       # @.str233
.L.str233:
	.asciz	"7:1-3"
	.size	.L.str233, 6

	.type	.L.str234,@object       # @.str234
.L.str234:
	.asciz	"56"
	.size	.L.str234, 3

	.type	.L.str235,@object       # @.str235
.L.str235:
	.asciz	"57"
	.size	.L.str235, 3

	.type	.L.str236,@object       # @.str236
.L.str236:
	.asciz	"58"
	.size	.L.str236, 3

	.type	.L.str237,@object       # @.str237
.L.str237:
	.asciz	"59"
	.size	.L.str237, 3

	.type	.L.str238,@object       # @.str238
.L.str238:
	.asciz	"7:1-4"
	.size	.L.str238, 6

	.type	.L.str239,@object       # @.str239
.L.str239:
	.asciz	"60"
	.size	.L.str239, 3

	.type	.L.str240,@object       # @.str240
.L.str240:
	.asciz	"61"
	.size	.L.str240, 3

	.type	.L.str241,@object       # @.str241
.L.str241:
	.asciz	"7:1-5"
	.size	.L.str241, 6

	.type	.L.str242,@object       # @.str242
.L.str242:
	.asciz	"62"
	.size	.L.str242, 3

	.type	.L.str243,@object       # @.str243
.L.str243:
	.asciz	"63"
	.size	.L.str243, 3

	.type	.L.str244,@object       # @.str244
.L.str244:
	.asciz	"7:1-6"
	.size	.L.str244, 6

	.type	.L.str245,@object       # @.str245
.L.str245:
	.asciz	"64"
	.size	.L.str245, 3

	.type	.L.str246,@object       # @.str246
.L.str246:
	.asciz	"65"
	.size	.L.str246, 3

	.type	.L.str247,@object       # @.str247
.L.str247:
	.asciz	"7:1-7"
	.size	.L.str247, 6

	.type	.L.str248,@object       # @.str248
.L.str248:
	.asciz	"66"
	.size	.L.str248, 3

	.type	.L.str249,@object       # @.str249
.L.str249:
	.asciz	"67"
	.size	.L.str249, 3

	.type	.L.str250,@object       # @.str250
.L.str250:
	.asciz	"7:1-8"
	.size	.L.str250, 6

	.type	.L.str251,@object       # @.str251
.L.str251:
	.asciz	"68"
	.size	.L.str251, 3

	.type	.L.str252,@object       # @.str252
.L.str252:
	.asciz	"69"
	.size	.L.str252, 3

	.type	.L.str253,@object       # @.str253
.L.str253:
	.asciz	"7:1-9"
	.size	.L.str253, 6

	.type	.L.str254,@object       # @.str254
.L.str254:
	.asciz	"72"
	.size	.L.str254, 3

	.type	.L.str255,@object       # @.str255
.L.str255:
	.asciz	"7:1-12"
	.size	.L.str255, 7

	.type	.L.str256,@object       # @.str256
.L.str256:
	.asciz	"73:0"
	.size	.L.str256, 5

	.type	.L.str257,@object       # @.str257
.L.str257:
	.asciz	"73:0-0"
	.size	.L.str257, 7

	.type	.L.str258,@object       # @.str258
.L.str258:
	.asciz	"0:0-11"
	.size	.L.str258, 7

	.type	.L.str259,@object       # @.str259
.L.str259:
	.asciz	"9:1"
	.size	.L.str259, 4

	.type	.L.str260,@object       # @.str260
.L.str260:
	.asciz	"tw3.0"
	.size	.L.str260, 6

	.type	.L.str261,@object       # @.str261
.L.str261:
	.asciz	"86:1"
	.size	.L.str261, 5

	.type	.L.str262,@object       # @.str262
.L.str262:
	.asciz	"88"
	.size	.L.str262, 3

	.type	.L.str263,@object       # @.str263
.L.str263:
	.asciz	"87"
	.size	.L.str263, 3

	.type	.L.str264,@object       # @.str264
.L.str264:
	.asciz	"9:1-0"
	.size	.L.str264, 6

	.type	.L.str265,@object       # @.str265
.L.str265:
	.asciz	"9:1-1"
	.size	.L.str265, 6

	.type	.L.str266,@object       # @.str266
.L.str266:
	.asciz	"9:1-2"
	.size	.L.str266, 6

	.type	.L.str267,@object       # @.str267
.L.str267:
	.asciz	"9:1-3"
	.size	.L.str267, 6

	.type	.L.str268,@object       # @.str268
.L.str268:
	.asciz	"73"
	.size	.L.str268, 3

	.type	.L.str269,@object       # @.str269
.L.str269:
	.asciz	"9:1-7"
	.size	.L.str269, 6

	.type	.L.str270,@object       # @.str270
.L.str270:
	.asciz	"74"
	.size	.L.str270, 3

	.type	.L.str271,@object       # @.str271
.L.str271:
	.asciz	"75"
	.size	.L.str271, 3

	.type	.L.str272,@object       # @.str272
.L.str272:
	.asciz	"9:1-8"
	.size	.L.str272, 6

	.type	.L.str273,@object       # @.str273
.L.str273:
	.asciz	"9:1-9"
	.size	.L.str273, 6

	.type	.L.str274,@object       # @.str274
.L.str274:
	.asciz	"81:1"
	.size	.L.str274, 5

	.type	.L.str275,@object       # @.str275
.L.str275:
	.asciz	"76:1"
	.size	.L.str275, 5

	.type	.L.str276,@object       # @.str276
.L.str276:
	.asciz	"77"
	.size	.L.str276, 3

	.type	.L.str277,@object       # @.str277
.L.str277:
	.asciz	"76:1-0"
	.size	.L.str277, 7

	.type	.L.str278,@object       # @.str278
.L.str278:
	.asciz	"78"
	.size	.L.str278, 3

	.type	.L.str279,@object       # @.str279
.L.str279:
	.asciz	"76:1-1"
	.size	.L.str279, 7

	.type	.L.str280,@object       # @.str280
.L.str280:
	.asciz	"79"
	.size	.L.str280, 3

	.type	.L.str281,@object       # @.str281
.L.str281:
	.asciz	"76:1-2"
	.size	.L.str281, 7

	.type	.L.str282,@object       # @.str282
.L.str282:
	.asciz	"80"
	.size	.L.str282, 3

	.type	.L.str283164,@object    # @.str283164
.L.str283164:
	.asciz	"76:1-3"
	.size	.L.str283164, 7

	.type	.L.str284,@object       # @.str284
.L.str284:
	.asciz	"82"
	.size	.L.str284, 3

	.type	.L.str285,@object       # @.str285
.L.str285:
	.asciz	"81:1-0"
	.size	.L.str285, 7

	.type	.L.str286,@object       # @.str286
.L.str286:
	.asciz	"83"
	.size	.L.str286, 3

	.type	.L.str287,@object       # @.str287
.L.str287:
	.asciz	"81:1-1"
	.size	.L.str287, 7

	.type	.L.str288,@object       # @.str288
.L.str288:
	.asciz	"84"
	.size	.L.str288, 3

	.type	.L.str289,@object       # @.str289
.L.str289:
	.asciz	"81:1-2"
	.size	.L.str289, 7

	.type	.L.str290,@object       # @.str290
.L.str290:
	.asciz	"85"
	.size	.L.str290, 3

	.type	.L.str291,@object       # @.str291
.L.str291:
	.asciz	"81:1-3"
	.size	.L.str291, 7

	.type	.L.str292,@object       # @.str292
.L.str292:
	.asciz	"storemerge"
	.size	.L.str292, 11

	.type	.L.str293,@object       # @.str293
.L.str293:
	.asciz	"86:1-0"
	.size	.L.str293, 7

	.type	.L.str294,@object       # @.str294
.L.str294:
	.asciz	"89"
	.size	.L.str294, 3

	.type	.L.str295,@object       # @.str295
.L.str295:
	.asciz	"86:1-3"
	.size	.L.str295, 7

	.type	.L.str296,@object       # @.str296
.L.str296:
	.asciz	"90:0"
	.size	.L.str296, 5

	.type	.L.str297,@object       # @.str297
.L.str297:
	.asciz	"90:0-0"
	.size	.L.str297, 7

	.type	.L.str298,@object       # @.str298
.L.str298:
	.asciz	"0:0-13"
	.size	.L.str298, 7

	.type	.L.str299,@object       # @.str299
.L.str299:
	.asciz	"Fout0.06"
	.size	.L.str299, 9

	.type	.L.str300,@object       # @.str300
.L.str300:
	.asciz	"146"
	.size	.L.str300, 4

	.type	.L.str301,@object       # @.str301
.L.str301:
	.asciz	"Fout1.05"
	.size	.L.str301, 9

	.type	.L.str302,@object       # @.str302
.L.str302:
	.asciz	"147"
	.size	.L.str302, 4

	.type	.L.str303,@object       # @.str303
.L.str303:
	.asciz	"Fout2.04"
	.size	.L.str303, 9

	.type	.L.str304,@object       # @.str304
.L.str304:
	.asciz	"148"
	.size	.L.str304, 4

	.type	.L.str305,@object       # @.str305
.L.str305:
	.asciz	"Fout3.03"
	.size	.L.str305, 9

	.type	.L.str306,@object       # @.str306
.L.str306:
	.asciz	"149"
	.size	.L.str306, 4

	.type	.L.str307,@object       # @.str307
.L.str307:
	.asciz	"Fout4.02"
	.size	.L.str307, 9

	.type	.L.str308,@object       # @.str308
.L.str308:
	.asciz	"150"
	.size	.L.str308, 4

	.type	.L.str309,@object       # @.str309
.L.str309:
	.asciz	"sext"
	.size	.L.str309, 5

	.type	.L.str310,@object       # @.str310
.L.str310:
	.asciz	"76"
	.size	.L.str310, 3

	.type	.L.str311,@object       # @.str311
.L.str311:
	.asciz	"81"
	.size	.L.str311, 3

	.type	.L.str312,@object       # @.str312
.L.str312:
	.asciz	"86"
	.size	.L.str312, 3

	.type	.L.str313,@object       # @.str313
.L.str313:
	.asciz	"90"
	.size	.L.str313, 3

	.type	.L.str314,@object       # @.str314
.L.str314:
	.asciz	"91"
	.size	.L.str314, 3

	.type	.L.str315,@object       # @.str315
.L.str315:
	.asciz	"92"
	.size	.L.str315, 3

	.type	.L.str316,@object       # @.str316
.L.str316:
	.asciz	"93"
	.size	.L.str316, 3

	.type	.L.str317,@object       # @.str317
.L.str317:
	.asciz	"94"
	.size	.L.str317, 3

	.type	.L.str318,@object       # @.str318
.L.str318:
	.asciz	"95"
	.size	.L.str318, 3

	.type	.L.str319,@object       # @.str319
.L.str319:
	.asciz	"96"
	.size	.L.str319, 3

	.type	.L.str320,@object       # @.str320
.L.str320:
	.asciz	"97"
	.size	.L.str320, 3

	.type	.L.str321,@object       # @.str321
.L.str321:
	.asciz	"98"
	.size	.L.str321, 3

	.type	.L.str322,@object       # @.str322
.L.str322:
	.asciz	"99"
	.size	.L.str322, 3

	.type	.L.str323,@object       # @.str323
.L.str323:
	.asciz	"100"
	.size	.L.str323, 4

	.type	.L.str324,@object       # @.str324
.L.str324:
	.asciz	"101"
	.size	.L.str324, 4

	.type	.L.str325,@object       # @.str325
.L.str325:
	.asciz	"102"
	.size	.L.str325, 4

	.type	.L.str326,@object       # @.str326
.L.str326:
	.asciz	"103"
	.size	.L.str326, 4

	.type	.L.str327,@object       # @.str327
.L.str327:
	.asciz	"104"
	.size	.L.str327, 4

	.type	.L.str328,@object       # @.str328
.L.str328:
	.asciz	"105"
	.size	.L.str328, 4

	.type	.L.str329,@object       # @.str329
.L.str329:
	.asciz	"24:1-0"
	.size	.L.str329, 7

	.type	.L.str330,@object       # @.str330
.L.str330:
	.asciz	"106"
	.size	.L.str330, 4

	.type	.L.str331,@object       # @.str331
.L.str331:
	.asciz	"107"
	.size	.L.str331, 4

	.type	.L.str332,@object       # @.str332
.L.str332:
	.asciz	"108"
	.size	.L.str332, 4

	.type	.L.str333,@object       # @.str333
.L.str333:
	.asciz	"24:1-1"
	.size	.L.str333, 7

	.type	.L.str334,@object       # @.str334
.L.str334:
	.asciz	"109"
	.size	.L.str334, 4

	.type	.L.str335,@object       # @.str335
.L.str335:
	.asciz	"110"
	.size	.L.str335, 4

	.type	.L.str336,@object       # @.str336
.L.str336:
	.asciz	"111"
	.size	.L.str336, 4

	.type	.L.str337,@object       # @.str337
.L.str337:
	.asciz	"112"
	.size	.L.str337, 4

	.type	.L.str338,@object       # @.str338
.L.str338:
	.asciz	"113"
	.size	.L.str338, 4

	.type	.L.str339,@object       # @.str339
.L.str339:
	.asciz	"114"
	.size	.L.str339, 4

	.type	.L.str340,@object       # @.str340
.L.str340:
	.asciz	"115"
	.size	.L.str340, 4

	.type	.L.str341,@object       # @.str341
.L.str341:
	.asciz	"116"
	.size	.L.str341, 4

	.type	.L.str342,@object       # @.str342
.L.str342:
	.asciz	"117"
	.size	.L.str342, 4

	.type	.L.str343,@object       # @.str343
.L.str343:
	.asciz	"118"
	.size	.L.str343, 4

	.type	.L.str344,@object       # @.str344
.L.str344:
	.asciz	"119"
	.size	.L.str344, 4

	.type	.L.str345,@object       # @.str345
.L.str345:
	.asciz	"120"
	.size	.L.str345, 4

	.type	.L.str346,@object       # @.str346
.L.str346:
	.asciz	"121"
	.size	.L.str346, 4

	.type	.L.str347,@object       # @.str347
.L.str347:
	.asciz	"122"
	.size	.L.str347, 4

	.type	.L.str348,@object       # @.str348
.L.str348:
	.asciz	"123"
	.size	.L.str348, 4

	.type	.L.str349,@object       # @.str349
.L.str349:
	.asciz	"124"
	.size	.L.str349, 4

	.type	.L.str350,@object       # @.str350
.L.str350:
	.asciz	"125"
	.size	.L.str350, 4

	.type	.L.str351,@object       # @.str351
.L.str351:
	.asciz	"24:1-3"
	.size	.L.str351, 7

	.type	.L.str352,@object       # @.str352
.L.str352:
	.asciz	"126"
	.size	.L.str352, 4

	.type	.L.str353,@object       # @.str353
.L.str353:
	.asciz	"24:1-4"
	.size	.L.str353, 7

	.type	.L.str354,@object       # @.str354
.L.str354:
	.asciz	"127"
	.size	.L.str354, 4

	.type	.L.str355,@object       # @.str355
.L.str355:
	.asciz	"24:1-5"
	.size	.L.str355, 7

	.type	.L.str356,@object       # @.str356
.L.str356:
	.asciz	"128"
	.size	.L.str356, 4

	.type	.L.str357,@object       # @.str357
.L.str357:
	.asciz	"129"
	.size	.L.str357, 4

	.type	.L.str358,@object       # @.str358
.L.str358:
	.asciz	"130"
	.size	.L.str358, 4

	.type	.L.str359,@object       # @.str359
.L.str359:
	.asciz	"131"
	.size	.L.str359, 4

	.type	.L.str360,@object       # @.str360
.L.str360:
	.asciz	"132"
	.size	.L.str360, 4

	.type	.L.str361,@object       # @.str361
.L.str361:
	.asciz	"133"
	.size	.L.str361, 4

	.type	.L.str362,@object       # @.str362
.L.str362:
	.asciz	"134"
	.size	.L.str362, 4

	.type	.L.str363,@object       # @.str363
.L.str363:
	.asciz	"135"
	.size	.L.str363, 4

	.type	.L.str364,@object       # @.str364
.L.str364:
	.asciz	"136"
	.size	.L.str364, 4

	.type	.L.str365,@object       # @.str365
.L.str365:
	.asciz	"137"
	.size	.L.str365, 4

	.type	.L.str366,@object       # @.str366
.L.str366:
	.asciz	"138"
	.size	.L.str366, 4

	.type	.L.str367,@object       # @.str367
.L.str367:
	.asciz	"139"
	.size	.L.str367, 4

	.type	.L.str368,@object       # @.str368
.L.str368:
	.asciz	"140"
	.size	.L.str368, 4

	.type	.L.str369,@object       # @.str369
.L.str369:
	.asciz	"141"
	.size	.L.str369, 4

	.type	.L.str370,@object       # @.str370
.L.str370:
	.asciz	"142"
	.size	.L.str370, 4

	.type	.L.str371,@object       # @.str371
.L.str371:
	.asciz	"24:1-6"
	.size	.L.str371, 7

	.type	.L.str372,@object       # @.str372
.L.str372:
	.asciz	"143"
	.size	.L.str372, 4

	.type	.L.str373,@object       # @.str373
.L.str373:
	.asciz	"24:1-7"
	.size	.L.str373, 7

	.type	.L.str374,@object       # @.str374
.L.str374:
	.asciz	"144"
	.size	.L.str374, 4

	.type	.L.str375,@object       # @.str375
.L.str375:
	.asciz	"24:1-8"
	.size	.L.str375, 7

	.type	.L.str376,@object       # @.str376
.L.str376:
	.asciz	"145"
	.size	.L.str376, 4

	.type	.L.str377,@object       # @.str377
.L.str377:
	.asciz	"24:1-9"
	.size	.L.str377, 7

	.type	.L.str378,@object       # @.str378
.L.str378:
	.asciz	"24:1-15"
	.size	.L.str378, 8

	.type	.L.str379,@object       # @.str379
.L.str379:
	.asciz	"p"
	.size	.L.str379, 2

	.type	.L.str380,@object       # @.str380
.L.str380:
	.asciz	"0:0-9"
	.size	.L.str380, 6

	.type	.L.str381,@object       # @.str381
	.align	16
.L.str381:
	.asciz	".preheader.lr.ph:0"
	.size	.L.str381, 19

	.type	.L.str382,@object       # @.str382
.L.str382:
	.asciz	"._crit_edge11:0"
	.size	.L.str382, 16

	.type	.L.str383,@object       # @.str383
	.align	16
.L.str383:
	.asciz	".preheader.lr.ph:0-0"
	.size	.L.str383, 21

	.type	.L.str384165,@object    # @.str384165
.L.str384165:
	.asciz	".preheader:1"
	.size	.L.str384165, 13

	.type	.L.str385,@object       # @.str385
.L.str385:
	.asciz	"indvars.iv20"
	.size	.L.str385, 13

	.type	.L.str386,@object       # @.str386
	.align	16
.L.str386:
	.asciz	"indvars.iv.next21"
	.size	.L.str386, 18

	.type	.L.str387,@object       # @.str387
.L.str387:
	.asciz	"._crit_edge9:1"
	.size	.L.str387, 15

	.type	.L.str388,@object       # @.str388
.L.str388:
	.asciz	".preheader:1-0"
	.size	.L.str388, 15

	.type	.L.str389,@object       # @.str389
.L.str389:
	.asciz	"indvars.iv14"
	.size	.L.str389, 13

	.type	.L.str390,@object       # @.str390
	.align	16
.L.str390:
	.asciz	"indvars.iv.next15"
	.size	.L.str390, 18

	.type	.L.str391,@object       # @.str391
.L.str391:
	.asciz	"indvars.iv12"
	.size	.L.str391, 13

	.type	.L.str392,@object       # @.str392
	.align	16
.L.str392:
	.asciz	"indvars.iv.next13"
	.size	.L.str392, 18

	.type	.L.str393,@object       # @.str393
.L.str393:
	.asciz	".lr.ph8:1"
	.size	.L.str393, 10

	.type	.L.str394,@object       # @.str394
.L.str394:
	.asciz	".lr.ph8:1-0"
	.size	.L.str394, 12

	.type	.L.str395,@object       # @.str395
.L.str395:
	.asciz	"20:2"
	.size	.L.str395, 5

	.type	.L.str396,@object       # @.str396
.L.str396:
	.asciz	"indvars.iv22"
	.size	.L.str396, 13

	.type	.L.str397,@object       # @.str397
	.align	16
.L.str397:
	.asciz	"indvars.iv.next23"
	.size	.L.str397, 18

	.type	.L.str398,@object       # @.str398
.L.str398:
	.asciz	"._crit_edge:2"
	.size	.L.str398, 14

	.type	.L.str399,@object       # @.str399
.L.str399:
	.asciz	"q1.16"
	.size	.L.str399, 6

	.type	.L.str400,@object       # @.str400
.L.str400:
	.asciz	"20:2-1"
	.size	.L.str400, 7

	.type	.L.str401,@object       # @.str401
.L.str401:
	.asciz	"20:2-3"
	.size	.L.str401, 7

	.type	.L.str402,@object       # @.str402
.L.str402:
	.asciz	".lr.ph5:2"
	.size	.L.str402, 10

	.type	.L.str403,@object       # @.str403
.L.str403:
	.asciz	".lr.ph5:2-0"
	.size	.L.str403, 12

	.type	.L.str404,@object       # @.str404
.L.str404:
	.asciz	"26:3"
	.size	.L.str404, 5

	.type	.L.str405,@object       # @.str405
.L.str405:
	.asciz	"indvars.iv16"
	.size	.L.str405, 13

	.type	.L.str406,@object       # @.str406
	.align	16
.L.str406:
	.asciz	"indvars.iv.next17"
	.size	.L.str406, 18

	.type	.L.str407,@object       # @.str407
.L.str407:
	.asciz	"twidx.04"
	.size	.L.str407, 9

	.type	.L.str408,@object       # @.str408
.L.str408:
	.asciz	"."
	.size	.L.str408, 2

	.type	.L.str409,@object       # @.str409
.L.str409:
	.asciz	"26:3-1"
	.size	.L.str409, 7

	.type	.L.str410,@object       # @.str410
.L.str410:
	.asciz	"26:3-2"
	.size	.L.str410, 7

	.type	.L.str411,@object       # @.str411
.L.str411:
	.asciz	"lftr.wideiv18"
	.size	.L.str411, 14

	.type	.L.str412,@object       # @.str412
.L.str412:
	.asciz	"exitcond19"
	.size	.L.str412, 11

	.type	.L.str413,@object       # @.str413
.L.str413:
	.asciz	"26:3-3"
	.size	.L.str413, 7

	.type	.L.str414,@object       # @.str414
.L.str414:
	.asciz	"exitcond24"
	.size	.L.str414, 11

	.type	.L.str415,@object       # @.str415
.L.str415:
	.asciz	"._crit_edge:2-1"
	.size	.L.str415, 16

	.type	.L.str416,@object       # @.str416
.L.str416:
	.asciz	"lftr.wideiv25"
	.size	.L.str416, 14

	.type	.L.str417,@object       # @.str417
.L.str417:
	.asciz	"exitcond26"
	.size	.L.str417, 11

	.type	.L.str418,@object       # @.str418
	.align	16
.L.str418:
	.asciz	"._crit_edge9:1-0"
	.size	.L.str418, 17

	.type	.L.str419,@object       # @.str419
	.align	16
.L.str419:
	.asciz	"._crit_edge11:0-0"
	.size	.L.str419, 18

	.type	.L.str420,@object       # @.str420
	.align	16
.L.str420:
	.asciz	"._crit_edge11:0-1"
	.size	.L.str420, 18

	.type	initp,@object           # @initp
	.bss
	.globl	initp
initp:
	.byte	0                       # 0x0
	.size	initp, 1

	.type	inst_count,@object      # @inst_count
	.globl	inst_count
	.align	4
inst_count:
	.long	0                       # 0x0
	.size	inst_count, 4

	.type	.L.str421,@object       # @.str421
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str421:
	.asciz	"%%%% LABEL MAP START %%%%\n"
	.size	.L.str421, 27

	.type	.L.str1422,@object      # @.str1422
.L.str1422:
	.asciz	"%%%% LABEL MAP END %%%%\n\n"
	.size	.L.str1422, 26

	.type	full_trace_file,@object # @full_trace_file
	.comm	full_trace_file,8,8
	.type	.L.str2423,@object      # @.str2423
.L.str2423:
	.asciz	"dynamic_trace.gz"
	.size	.L.str2423, 17

	.type	.L.str3424,@object      # @.str3424
.L.str3424:
	.asciz	"w"
	.size	.L.str3424, 2

	.type	.L.str4425,@object      # @.str4425
.L.str4425:
	.asciz	"Failed to open logfile \"dynamic_trace\""
	.size	.L.str4425, 39

	.type	current_toplevel_function,@object # @current_toplevel_function
	.comm	current_toplevel_function,8,8
	.type	current_logging_status,@object # @current_logging_status
	.comm	current_logging_status,4,4
	.type	.L.str5426,@object      # @.str5426
.L.str5426:
	.asciz	"false && \"Returning from within a toplevel function before it was called!\""
	.size	.L.str5426, 75

	.type	.L.str6427,@object      # @.str6427
.L.str6427:
	.asciz	"/workspace/LLVM-Tracer/profile-func/trace_logger.c"
	.size	.L.str6427, 51

	.type	.L__PRETTY_FUNCTION__.log_or_not,@object # @__PRETTY_FUNCTION__.log_or_not
.L__PRETTY_FUNCTION__.log_or_not:
	.asciz	"logging_status log_or_not(_Bool, _Bool, int, char *)"
	.size	.L__PRETTY_FUNCTION__.log_or_not, 53

	.type	.L.str7428,@object      # @.str7428
.L.str7428:
	.asciz	"false && \"Cannot call a top level function from within another one!\""
	.size	.L.str7428, 69

	.type	.L.str8429,@object      # @.str8429
.L.str8429:
	.asciz	"0x"
	.size	.L.str8429, 3

	.type	.L.str9430,@object      # @.str9430
.L.str9430:
	.asciz	"%02x"
	.size	.L.str9430, 5

	.type	.L.str10431,@object     # @.str10431
.L.str10431:
	.asciz	"Stopping logging at inst %d.\n"
	.size	.L.str10431, 30

	.type	.L.str11432,@object     # @.str11432
.L.str11432:
	.asciz	"Starting to log at inst = %d.\n"
	.size	.L.str11432, 31

	.type	.L.str12433,@object     # @.str12433
.L.str12433:
	.asciz	"\nentry,%s,%d,\n"
	.size	.L.str12433, 15

	.type	.L.str13434,@object     # @.str13434
.L.str13434:
	.asciz	"\n0,%d,%s,%s,%s,%d,%d\n"
	.size	.L.str13434, 22

	.type	.L.str14435,@object     # @.str14435
.L.str14435:
	.asciz	"initp == true"
	.size	.L.str14435, 14

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_int,@object # @__PRETTY_FUNCTION__.trace_logger_log_int
.L__PRETTY_FUNCTION__.trace_logger_log_int:
	.asciz	"void trace_logger_log_int(int, int, int64_t, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_int, 71

	.type	.L.str15436,@object     # @.str15436
.L.str15436:
	.asciz	"r,%d,%ld,%d"
	.size	.L.str15436, 12

	.type	.L.str16437,@object     # @.str16437
.L.str16437:
	.asciz	"f,%d,%ld,%d"
	.size	.L.str16437, 12

	.type	.L.str17438,@object     # @.str17438
.L.str17438:
	.asciz	"%d,%d,%ld,%d"
	.size	.L.str17438, 13

	.type	.L.str18439,@object     # @.str18439
.L.str18439:
	.asciz	",%s"
	.size	.L.str18439, 4

	.type	.L.str19440,@object     # @.str19440
.L.str19440:
	.asciz	", "
	.size	.L.str19440, 3

	.type	.L.str20441,@object     # @.str20441
.L.str20441:
	.asciz	",%s,\n"
	.size	.L.str20441, 6

	.type	.L.str21442,@object     # @.str21442
.L.str21442:
	.asciz	",\n"
	.size	.L.str21442, 3

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_ptr,@object # @__PRETTY_FUNCTION__.trace_logger_log_ptr
.L__PRETTY_FUNCTION__.trace_logger_log_ptr:
	.asciz	"void trace_logger_log_ptr(int, int, uint64_t, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_ptr, 72

	.type	.L.str22443,@object     # @.str22443
.L.str22443:
	.asciz	"r,%d,%#llx,%d"
	.size	.L.str22443, 14

	.type	.L.str23444,@object     # @.str23444
.L.str23444:
	.asciz	"f,%d,%#llx,%d"
	.size	.L.str23444, 14

	.type	.L.str24445,@object     # @.str24445
.L.str24445:
	.asciz	"%d,%d,%#llx,%d"
	.size	.L.str24445, 15

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_double,@object # @__PRETTY_FUNCTION__.trace_logger_log_double
.L__PRETTY_FUNCTION__.trace_logger_log_double:
	.asciz	"void trace_logger_log_double(int, int, double, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_double, 73

	.type	.L.str25446,@object     # @.str25446
.L.str25446:
	.asciz	"r,%d,%f,%d"
	.size	.L.str25446, 11

	.type	.L.str26447,@object     # @.str26447
.L.str26447:
	.asciz	"f,%d,%f,%d"
	.size	.L.str26447, 11

	.type	.L.str27448,@object     # @.str27448
.L.str27448:
	.asciz	"%d,%d,%f,%d"
	.size	.L.str27448, 12

	.type	.L__PRETTY_FUNCTION__.trace_logger_log_vector,@object # @__PRETTY_FUNCTION__.trace_logger_log_vector
.L__PRETTY_FUNCTION__.trace_logger_log_vector:
	.asciz	"void trace_logger_log_vector(int, int, uint8_t *, int, char *, int, char *)"
	.size	.L__PRETTY_FUNCTION__.trace_logger_log_vector, 76

	.type	.L.str28449,@object     # @.str28449
.L.str28449:
	.asciz	"r,%d,%s,%d"
	.size	.L.str28449, 11

	.type	.L.str29450,@object     # @.str29450
.L.str29450:
	.asciz	"f,%d,%s,%d"
	.size	.L.str29450, 11

	.type	.L.str30451,@object     # @.str30451
.L.str30451:
	.asciz	"%d,%d,%s,%d"
	.size	.L.str30451, 12

	.text
.Ldebug_end0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
.Linfo_string1:
	.asciz	"mma_test_fft.c"
.Linfo_string2:
	.asciz	"/workspace/gem5-aladdin/src/aladdin/integration-test/with-cpu/mma_test_fft"
.Linfo_string3:
	.asciz	"num_vals"
.Linfo_string4:
	.asciz	"int"
.Linfo_string5:
	.asciz	"test_stores"
.Linfo_string6:
	.asciz	"store_kernel"
.Linfo_string7:
	.asciz	"main"
.Linfo_string8:
	.asciz	"kiss_fft.c"
.Linfo_string9:
	.asciz	"pi"
.Linfo_string10:
	.asciz	"double"
.Linfo_string11:
	.asciz	"kiss_fft_alloc"
.Linfo_string12:
	.asciz	"nfft"
.Linfo_string13:
	.asciz	"inverse"
.Linfo_string14:
	.asciz	"factors"
.Linfo_string15:
	.asciz	"twiddles"
.Linfo_string16:
	.asciz	"r"
.Linfo_string17:
	.asciz	"float"
.Linfo_string18:
	.asciz	"i"
.Linfo_string19:
	.asciz	"kiss_fft_cpx"
.Linfo_string20:
	.asciz	"kiss_fft_state"
.Linfo_string21:
	.asciz	"kiss_fft_cfg"
.Linfo_string22:
	.asciz	"kiss_fft_stride"
.Linfo_string23:
	.asciz	"kiss_fft"
.Linfo_string24:
	.asciz	"kiss_fft_cleanup"
.Linfo_string25:
	.asciz	"kiss_fft_next_fast_size"
.Linfo_string26:
	.asciz	"kf_work"
.Linfo_string27:
	.asciz	"kf_bfly_generic"
.Linfo_string28:
	.asciz	"kf_bfly5"
.Linfo_string29:
	.asciz	"kf_bfly4"
.Linfo_string30:
	.asciz	"kf_bfly3"
.Linfo_string31:
	.asciz	"kf_bfly2"
.Linfo_string32:
	.asciz	"kf_factor"
.Linfo_string33:
	.asciz	"store_vals"
.Linfo_string34:
	.asciz	"store_loc"
.Linfo_string35:
	.asciz	"num_failures"
.Linfo_string36:
	.asciz	"cfg"
.Linfo_string37:
	.asciz	"out"
.Linfo_string38:
	.asciz	"in"
.Linfo_string39:
	.asciz	"inverse_fft"
.Linfo_string40:
	.asciz	"mem"
.Linfo_string41:
	.asciz	"lenmem"
.Linfo_string42:
	.asciz	"long unsigned int"
.Linfo_string43:
	.asciz	"size_t"
.Linfo_string44:
	.asciz	"memneeded"
.Linfo_string45:
	.asciz	"st"
.Linfo_string46:
	.asciz	"phase"
.Linfo_string47:
	.asciz	"fin"
.Linfo_string48:
	.asciz	"fout"
.Linfo_string49:
	.asciz	"in_stride"
.Linfo_string50:
	.asciz	"tmpbuf"
.Linfo_string51:
	.asciz	"n"
.Linfo_string52:
	.asciz	"m"
.Linfo_string53:
	.asciz	"facbuf"
.Linfo_string54:
	.asciz	"p"
.Linfo_string55:
	.asciz	"floor_sqrt"
.Linfo_string56:
	.asciz	"Fout"
.Linfo_string57:
	.asciz	"f"
.Linfo_string58:
	.asciz	"fstride"
.Linfo_string59:
	.asciz	"Fout_beg"
.Linfo_string60:
	.asciz	"Fout_end"
.Linfo_string61:
	.asciz	"Norig"
.Linfo_string62:
	.asciz	"scratch"
.Linfo_string63:
	.asciz	"u"
.Linfo_string64:
	.asciz	"q"
.Linfo_string65:
	.asciz	"q1"
.Linfo_string66:
	.asciz	"k"
.Linfo_string67:
	.asciz	"t"
.Linfo_string68:
	.asciz	"twidx"
.Linfo_string69:
	.asciz	"Fout0"
.Linfo_string70:
	.asciz	"Fout1"
.Linfo_string71:
	.asciz	"Fout2"
.Linfo_string72:
	.asciz	"Fout3"
.Linfo_string73:
	.asciz	"Fout4"
.Linfo_string74:
	.asciz	"tw"
.Linfo_string75:
	.asciz	"ya"
.Linfo_string76:
	.asciz	"yb"
.Linfo_string77:
	.asciz	"m2"
.Linfo_string78:
	.asciz	"m3"
.Linfo_string79:
	.asciz	"tw1"
.Linfo_string80:
	.asciz	"tw2"
.Linfo_string81:
	.asciz	"tw3"
.Linfo_string82:
	.asciz	"epi3"
	.section	.debug_info,"",@progbits
.L.debug_info_begin0:
	.long	584                     # Length of Unit
	.short	4                       # DWARF version number
	.long	.L.debug_abbrev_begin   # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x241 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.quad	0                       # DW_AT_low_pc
	.long	.Lsection_line          # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.byte	2                       # Abbrev [2] 0x26:0xc DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.long	50                      # DW_AT_type
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.byte	10                      # DW_AT_const_value
	.byte	3                       # Abbrev [3] 0x32:0x5 DW_TAG_const_type
	.long	55                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x37:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0x3e:0x75 DW_TAG_subprogram
	.long	.Linfo_string5          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	55                      # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.quad	.Lfunc_end0             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x5b:0xf DW_TAG_formal_parameter
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc0            # DW_AT_location
	.byte	6                       # Abbrev [6] 0x6a:0xf DW_TAG_formal_parameter
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc2            # DW_AT_location
	.byte	6                       # Abbrev [6] 0x79:0xf DW_TAG_formal_parameter
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc4            # DW_AT_location
	.byte	7                       # Abbrev [7] 0x88:0xc DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	17                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	8                       # Abbrev [8] 0x94:0x1e DW_TAG_lexical_block
	.quad	.Ltmp21                 # DW_AT_low_pc
	.quad	.Ltmp27                 # DW_AT_high_pc
	.byte	7                       # Abbrev [7] 0xa5:0xc DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0xb3:0xd0 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.quad	.Lfunc_end1             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0xcc:0xf DW_TAG_formal_parameter
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc6            # DW_AT_location
	.byte	6                       # Abbrev [6] 0xdb:0xf DW_TAG_formal_parameter
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc8            # DW_AT_location
	.byte	6                       # Abbrev [6] 0xea:0xf DW_TAG_formal_parameter
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc10           # DW_AT_location
	.byte	10                      # Abbrev [10] 0xf9:0xf DW_TAG_variable
	.long	.Linfo_string36         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	506                     # DW_AT_type
	.long	.Ldebug_loc12           # DW_AT_location
	.byte	8                       # Abbrev [8] 0x108:0x7a DW_TAG_lexical_block
	.quad	.Ltmp42                 # DW_AT_low_pc
	.quad	.Ltmp55                 # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0x119:0x68 DW_TAG_lexical_block
	.quad	.Ltmp45                 # DW_AT_low_pc
	.quad	.Ltmp55                 # DW_AT_high_pc
	.byte	10                      # Abbrev [10] 0x12a:0xf DW_TAG_variable
	.long	.Linfo_string37         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	527                     # DW_AT_type
	.long	.Ldebug_loc14           # DW_AT_location
	.byte	11                      # Abbrev [11] 0x139:0xb DW_TAG_variable
	.long	.Linfo_string38         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	527                     # DW_AT_type
	.byte	8                       # Abbrev [8] 0x144:0x1e DW_TAG_lexical_block
	.quad	.Ltmp46                 # DW_AT_low_pc
	.quad	.Ltmp50                 # DW_AT_high_pc
	.byte	7                       # Abbrev [7] 0x155:0xc DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0x162:0x1e DW_TAG_lexical_block
	.quad	.Ltmp51                 # DW_AT_low_pc
	.quad	.Ltmp54                 # DW_AT_high_pc
	.byte	7                       # Abbrev [7] 0x173:0xc DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	12                      # Abbrev [12] 0x183:0x72 DW_TAG_subprogram
	.long	.Linfo_string7          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.quad	.Lfunc_end2             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	7                       # Abbrev [7] 0x1a0:0xc DW_TAG_variable
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	50                      # DW_AT_type
	.byte	10                      # DW_AT_const_value
	.byte	10                      # Abbrev [10] 0x1ac:0xf DW_TAG_variable
	.long	.Linfo_string33         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc16           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x1bb:0xf DW_TAG_variable
	.long	.Linfo_string34         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	501                     # DW_AT_type
	.long	.Ldebug_loc18           # DW_AT_location
	.byte	7                       # Abbrev [7] 0x1ca:0xc DW_TAG_variable
	.long	.Linfo_string35         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	8                       # Abbrev [8] 0x1d6:0x1e DW_TAG_lexical_block
	.quad	.Ltmp82                 # DW_AT_low_pc
	.quad	.Ltmp86                 # DW_AT_high_pc
	.byte	7                       # Abbrev [7] 0x1e7:0xc DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x1f5:0x5 DW_TAG_pointer_type
	.long	55                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0x1fa:0xb DW_TAG_typedef
	.long	517                     # DW_AT_type
	.long	.Linfo_string21         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	13                      # Abbrev [13] 0x205:0x5 DW_TAG_pointer_type
	.long	522                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x20a:0x5 DW_TAG_structure_type
	.long	.Linfo_string20         # DW_AT_name
                                        # DW_AT_declaration
	.byte	16                      # Abbrev [16] 0x20f:0xb DW_TAG_array_type
	.long	538                     # DW_AT_type
	.byte	17                      # Abbrev [17] 0x214:0x5 DW_TAG_subrange_type
	.long	580                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x21a:0xb DW_TAG_typedef
	.long	549                     # DW_AT_type
	.long	.Linfo_string19         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x225:0x1f DW_TAG_structure_type
	.byte	8                       # DW_AT_byte_size
	.byte	5                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x229:0xd DW_TAG_member
	.long	.Linfo_string16         # DW_AT_name
	.long	.Lsection_info+1039     # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	19                      # Abbrev [19] 0x236:0xd DW_TAG_member
	.long	.Linfo_string18         # DW_AT_name
	.long	.Lsection_info+1039     # DW_AT_type
	.byte	5                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	20                      # Abbrev [20] 0x244:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # DW_AT_encoding
	.byte	0                       # End Of Children Mark
.L.debug_info_end0:
.L.debug_info_begin1:
	.long	2096                    # Length of Unit
	.short	4                       # DWARF version number
	.long	.L.debug_abbrev_begin   # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x829 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string8          # DW_AT_name
	.quad	0                       # DW_AT_low_pc
	.long	.Lsection_line          # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
                                        # DW_AT_APPLE_optimized
	.byte	21                      # Abbrev [21] 0x26:0xc DW_TAG_variable
	.long	.Linfo_string9          # DW_AT_name
	.long	50                      # DW_AT_type
	.byte	2                       # DW_AT_decl_file
	.short	358                     # DW_AT_decl_line
	.byte	3                       # Abbrev [3] 0x32:0x5 DW_TAG_const_type
	.long	55                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x37:0x7 DW_TAG_base_type
	.long	.Linfo_string10         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	22                      # Abbrev [22] 0x3e:0xed DW_TAG_subprogram
	.long	.Linfo_string11         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	339                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	299                     # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.quad	.Lfunc_end3             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	23                      # Abbrev [23] 0x5c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string12         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	339                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc20           # DW_AT_location
	.byte	23                      # Abbrev [23] 0x6c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string39         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	339                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc22           # DW_AT_location
	.byte	24                      # Abbrev [24] 0x7c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string40         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	339                     # DW_AT_decl_line
	.long	2014                    # DW_AT_type
	.long	.Ldebug_loc24           # DW_AT_location
	.byte	24                      # Abbrev [24] 0x8c:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string41         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	339                     # DW_AT_decl_line
	.long	2015                    # DW_AT_type
	.long	.Ldebug_loc26           # DW_AT_location
	.byte	25                      # Abbrev [25] 0x9c:0x10 DW_TAG_variable
	.long	.Linfo_string44         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	342                     # DW_AT_decl_line
	.long	2020                    # DW_AT_type
	.long	.Ldebug_loc28           # DW_AT_location
	.byte	25                      # Abbrev [25] 0xac:0x10 DW_TAG_variable
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	341                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.long	.Ldebug_loc30           # DW_AT_location
	.byte	8                       # Abbrev [8] 0xbc:0x6e DW_TAG_lexical_block
	.quad	.Ltmp121                # DW_AT_low_pc
	.quad	.Ltmp135                # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0xcd:0x5c DW_TAG_lexical_block
	.quad	.Ltmp122                # DW_AT_low_pc
	.quad	.Ltmp135                # DW_AT_high_pc
	.byte	26                      # Abbrev [26] 0xde:0xd DW_TAG_variable
	.long	.Linfo_string18         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	353                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	8                       # Abbrev [8] 0xeb:0x3d DW_TAG_lexical_block
	.quad	.Ltmp123                # DW_AT_low_pc
	.quad	.Ltmp134                # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0xfc:0x2b DW_TAG_lexical_block
	.long	.Ldebug_range           # DW_AT_ranges
	.byte	28                      # Abbrev [28] 0x101:0x15 DW_TAG_variable
	.long	.Linfo_string9          # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	358                     # DW_AT_decl_line
	.long	50                      # DW_AT_type
	.byte	8                       # DW_AT_const_value
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64
	.byte	25                      # Abbrev [25] 0x116:0x10 DW_TAG_variable
	.long	.Linfo_string46         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	359                     # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc33           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x12b:0xb DW_TAG_typedef
	.long	310                     # DW_AT_type
	.long	.Linfo_string21         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.byte	13                      # Abbrev [13] 0x136:0x5 DW_TAG_pointer_type
	.long	315                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x13b:0x3f DW_TAG_structure_type
	.long	.Linfo_string20         # DW_AT_name
	.short	272                     # DW_AT_byte_size
	.byte	3                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x144:0xd DW_TAG_member
	.long	.Linfo_string12         # DW_AT_name
	.long	.Lsection_info+55       # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	19                      # Abbrev [19] 0x151:0xd DW_TAG_member
	.long	.Linfo_string13         # DW_AT_name
	.long	.Lsection_info+55       # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	30                      # Abbrev [30] 0x15e:0xd DW_TAG_member
	.long	.Linfo_string14         # DW_AT_name
	.long	378                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.byte	8                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	31                      # Abbrev [31] 0x16b:0xe DW_TAG_member
	.long	.Linfo_string15         # DW_AT_name
	.long	397                     # DW_AT_type
	.byte	3                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.short	264                     # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	32                      # Abbrev [32] 0x17a:0xc DW_TAG_array_type
	.long	.Lsection_info+55       # DW_AT_type
	.byte	33                      # Abbrev [33] 0x17f:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	63                      # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	20                      # Abbrev [20] 0x186:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # DW_AT_encoding
	.byte	16                      # Abbrev [16] 0x18d:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x192:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	0                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x199:0xb DW_TAG_typedef
	.long	420                     # DW_AT_type
	.long	.Linfo_string19         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	18                      # Abbrev [18] 0x1a4:0x1f DW_TAG_structure_type
	.byte	8                       # DW_AT_byte_size
	.byte	4                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.byte	30                      # Abbrev [30] 0x1a8:0xd DW_TAG_member
	.long	.Linfo_string16         # DW_AT_name
	.long	451                     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.byte	0                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	30                      # Abbrev [30] 0x1b5:0xd DW_TAG_member
	.long	.Linfo_string18         # DW_AT_name
	.long	451                     # DW_AT_type
	.byte	4                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.byte	4                       # DW_AT_data_member_location
	.byte	1                       # DW_AT_accessibility
                                        # DW_ACCESS_public
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0x1c3:0x7 DW_TAG_base_type
	.long	.Linfo_string17         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	34                      # Abbrev [34] 0x1ca:0x8f DW_TAG_subprogram
	.long	.Linfo_string22         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	371                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.quad	.Lfunc_end4             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	24                      # Abbrev [24] 0x1e4:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	371                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.long	.Ldebug_loc36           # DW_AT_location
	.byte	24                      # Abbrev [24] 0x1f4:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string47         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	371                     # DW_AT_decl_line
	.long	2038                    # DW_AT_type
	.long	.Ldebug_loc38           # DW_AT_location
	.byte	24                      # Abbrev [24] 0x204:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	371                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc40           # DW_AT_location
	.byte	23                      # Abbrev [23] 0x214:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	371                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc42           # DW_AT_location
	.byte	8                       # Abbrev [8] 0x224:0x34 DW_TAG_lexical_block
	.quad	.Ltmp159                # DW_AT_low_pc
	.quad	.Ltmp166                # DW_AT_high_pc
	.byte	8                       # Abbrev [8] 0x235:0x22 DW_TAG_lexical_block
	.quad	.Ltmp161                # DW_AT_low_pc
	.quad	.Ltmp164                # DW_AT_high_pc
	.byte	25                      # Abbrev [25] 0x246:0x10 DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	376                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc44           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x259:0x4b DW_TAG_subprogram
	.long	.Linfo_string23         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	385                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.quad	.Lfunc_end5             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	35                      # Abbrev [35] 0x273:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string36         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	385                     # DW_AT_decl_line
	.long	299                     # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\210\001"
	.byte	35                      # Abbrev [35] 0x283:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string47         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	385                     # DW_AT_decl_line
	.long	2038                    # DW_AT_type
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\240\001"
	.byte	24                      # Abbrev [24] 0x293:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	385                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc46           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x2a4:0x1a DW_TAG_subprogram
	.long	.Linfo_string24         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	391                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.quad	.Lfunc_end6             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	37                      # Abbrev [37] 0x2be:0x51 DW_TAG_subprogram
	.long	.Linfo_string25         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	.Lsection_info+55       # DW_AT_type
                                        # DW_AT_external
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.quad	.Lfunc_end7             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	23                      # Abbrev [23] 0x2dc:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	396                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc48           # DW_AT_location
	.byte	8                       # Abbrev [8] 0x2ec:0x22 DW_TAG_lexical_block
	.quad	.Ltmp220                # DW_AT_low_pc
	.quad	.Ltmp232                # DW_AT_high_pc
	.byte	38                      # Abbrev [38] 0x2fd:0x10 DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	399                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc51           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x30f:0xb0 DW_TAG_subprogram
	.long	.Linfo_string26         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	238                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.quad	.Lfunc_end9             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x328:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	239                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc72           # DW_AT_location
	.byte	6                       # Abbrev [6] 0x337:0xf DW_TAG_formal_parameter
	.long	.Linfo_string57         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	240                     # DW_AT_decl_line
	.long	2038                    # DW_AT_type
	.long	.Ldebug_loc77           # DW_AT_location
	.byte	6                       # Abbrev [6] 0x346:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	241                     # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc81           # DW_AT_location
	.byte	40                      # Abbrev [40] 0x355:0xf DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	242                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc83           # DW_AT_location
	.byte	40                      # Abbrev [40] 0x364:0xf DW_TAG_formal_parameter
	.long	.Linfo_string14         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	243                     # DW_AT_decl_line
	.long	.Lsection_info+501      # DW_AT_type
	.long	.Ldebug_loc85           # DW_AT_location
	.byte	6                       # Abbrev [6] 0x373:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	244                     # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc89           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x382:0xf DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	247                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc91           # DW_AT_location
	.byte	41                      # Abbrev [41] 0x391:0xf DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	248                     # DW_AT_decl_line
	.long	.Lsection_info+50       # DW_AT_type
	.long	.Ldebug_loc93           # DW_AT_location
	.byte	41                      # Abbrev [41] 0x3a0:0xf DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	249                     # DW_AT_decl_line
	.long	.Lsection_info+50       # DW_AT_type
	.long	.Ldebug_loc95           # DW_AT_location
	.byte	10                      # Abbrev [10] 0x3af:0xf DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	250                     # DW_AT_decl_line
	.long	2038                    # DW_AT_type
	.long	.Ldebug_loc97           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3bf:0xfe DW_TAG_subprogram
	.long	.Linfo_string27         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	198                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.quad	.Lfunc_end10            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x3d8:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	199                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc99           # DW_AT_location
	.byte	6                       # Abbrev [6] 0x3e7:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	200                     # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc101          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x3f6:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	201                     # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc103          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x405:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	202                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc105          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x414:0xf DW_TAG_formal_parameter
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	203                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc107          # DW_AT_location
	.byte	41                      # Abbrev [41] 0x423:0xf DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	209                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc109          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x432:0xf DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	211                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc111          # DW_AT_location
	.byte	42                      # Abbrev [42] 0x441:0xc DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	42                      # Abbrev [42] 0x44d:0xc DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.byte	1                       # DW_AT_const_value
	.byte	41                      # Abbrev [41] 0x459:0xf DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc116          # DW_AT_location
	.byte	43                      # Abbrev [43] 0x468:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	206                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.byte	11                      # Abbrev [11] 0x473:0xb DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	207                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x47e:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	208                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	8                       # Abbrev [8] 0x489:0x33 DW_TAG_lexical_block
	.quad	.Ltmp343                # DW_AT_low_pc
	.quad	.Ltmp371                # DW_AT_high_pc
	.byte	27                      # Abbrev [27] 0x49a:0x21 DW_TAG_lexical_block
	.long	.Ldebug_range+160       # DW_AT_ranges
	.byte	27                      # Abbrev [27] 0x49f:0x1b DW_TAG_lexical_block
	.long	.Ldebug_range+112       # DW_AT_ranges
	.byte	27                      # Abbrev [27] 0x4a4:0x15 DW_TAG_lexical_block
	.long	.Ldebug_range+48        # DW_AT_ranges
	.byte	41                      # Abbrev [41] 0x4a9:0xf DW_TAG_variable
	.long	.Linfo_string68         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	223                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc113          # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x4bd:0xe4 DW_TAG_subprogram
	.long	.Linfo_string28         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	136                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.quad	.Lfunc_end11            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x4d6:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	137                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc118          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x4e5:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	138                     # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc120          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x4f4:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	139                     # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc122          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x503:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	140                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc124          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x512:0xf DW_TAG_variable
	.long	.Linfo_string69         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc126          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x521:0xf DW_TAG_variable
	.long	.Linfo_string70         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc129          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x530:0xf DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc132          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x53f:0xf DW_TAG_variable
	.long	.Linfo_string72         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc135          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x54e:0xf DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	143                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc138          # DW_AT_location
	.byte	42                      # Abbrev [42] 0x55d:0xc DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	144                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.byte	0                       # DW_AT_const_value
	.byte	11                      # Abbrev [11] 0x569:0xb DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	145                     # DW_AT_decl_line
	.long	2063                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x574:0xb DW_TAG_variable
	.long	.Linfo_string15         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	146                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x57f:0xb DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	147                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x58a:0xb DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x595:0xb DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	148                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x5a1:0xbb DW_TAG_subprogram
	.long	.Linfo_string29         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.quad	.Lfunc_end12            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x5ba:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc141          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x5c9:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc144          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x5d8:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc146          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x5e7:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc148          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x5f6:0xf DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	2020                    # DW_AT_type
	.long	.Ldebug_loc150          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x605:0xf DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc153          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x614:0xf DW_TAG_variable
	.long	.Linfo_string78         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc155          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x623:0xf DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc157          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x632:0xf DW_TAG_variable
	.long	.Linfo_string80         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc160          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x641:0xf DW_TAG_variable
	.long	.Linfo_string81         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	51                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc163          # DW_AT_location
	.byte	11                      # Abbrev [11] 0x650:0xb DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	2075                    # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x65c:0xa8 DW_TAG_subprogram
	.long	.Linfo_string30         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.quad	.Lfunc_end13            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x675:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc166          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x684:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc169          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x693:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc171          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x6a2:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	96                      # DW_AT_decl_line
	.long	2020                    # DW_AT_type
	.long	.Ldebug_loc173          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x6b1:0xf DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	99                      # DW_AT_decl_line
	.long	2020                    # DW_AT_type
	.long	.Ldebug_loc175          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x6c0:0xf DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc178          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x6cf:0xf DW_TAG_variable
	.long	.Linfo_string80         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc180          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x6de:0xf DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc183          # DW_AT_location
	.byte	11                      # Abbrev [11] 0x6ed:0xb DW_TAG_variable
	.long	.Linfo_string62         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	2087                    # DW_AT_type
	.byte	11                      # Abbrev [11] 0x6f8:0xb DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	103                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x704:0x7f DW_TAG_subprogram
	.long	.Linfo_string31         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.quad	.Lfunc_end14            # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	6                       # Abbrev [6] 0x71d:0xf DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc186          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x72c:0xf DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	2053                    # DW_AT_type
	.long	.Ldebug_loc189          # DW_AT_location
	.byte	6                       # Abbrev [6] 0x73b:0xf DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	2058                    # DW_AT_type
	.long	.Ldebug_loc191          # DW_AT_location
	.byte	40                      # Abbrev [40] 0x74a:0xf DW_TAG_formal_parameter
	.long	.Linfo_string52         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc193          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x759:0xf DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc196          # DW_AT_location
	.byte	10                      # Abbrev [10] 0x768:0xf DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	2048                    # DW_AT_type
	.long	.Ldebug_loc199          # DW_AT_location
	.byte	11                      # Abbrev [11] 0x777:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x783:0x5b DW_TAG_subprogram
	.long	.Linfo_string32         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.quad	.Lfunc_end8             # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_APPLE_omit_frame_ptr
	.byte	23                      # Abbrev [23] 0x79d:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc61           # DW_AT_location
	.byte	23                      # Abbrev [23] 0x7ad:0x10 DW_TAG_formal_parameter
	.long	.Linfo_string53         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	309                     # DW_AT_decl_line
	.long	.Lsection_info+501      # DW_AT_type
	.long	.Ldebug_loc56           # DW_AT_location
	.byte	38                      # Abbrev [38] 0x7bd:0x10 DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	311                     # DW_AT_decl_line
	.long	.Lsection_info+55       # DW_AT_type
	.long	.Ldebug_loc65           # DW_AT_location
	.byte	25                      # Abbrev [25] 0x7cd:0x10 DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.short	312                     # DW_AT_decl_line
	.long	55                      # DW_AT_type
	.long	.Ldebug_loc70           # DW_AT_location
	.byte	0                       # End Of Children Mark
	.byte	45                      # Abbrev [45] 0x7de:0x1 DW_TAG_pointer_type
	.byte	13                      # Abbrev [13] 0x7df:0x5 DW_TAG_pointer_type
	.long	2020                    # DW_AT_type
	.byte	14                      # Abbrev [14] 0x7e4:0xb DW_TAG_typedef
	.long	2031                    # DW_AT_type
	.long	.Linfo_string43         # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.byte	4                       # Abbrev [4] 0x7ef:0x7 DW_TAG_base_type
	.long	.Linfo_string42         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	13                      # Abbrev [13] 0x7f6:0x5 DW_TAG_pointer_type
	.long	2043                    # DW_AT_type
	.byte	3                       # Abbrev [3] 0x7fb:0x5 DW_TAG_const_type
	.long	409                     # DW_AT_type
	.byte	13                      # Abbrev [13] 0x800:0x5 DW_TAG_pointer_type
	.long	409                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x805:0x5 DW_TAG_const_type
	.long	2020                    # DW_AT_type
	.byte	3                       # Abbrev [3] 0x80a:0x5 DW_TAG_const_type
	.long	299                     # DW_AT_type
	.byte	16                      # Abbrev [16] 0x80f:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x814:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	12                      # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x81b:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x820:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	5                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x827:0xc DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	33                      # Abbrev [33] 0x82c:0x6 DW_TAG_subrange_type
	.long	390                     # DW_AT_type
	.byte	4                       # DW_AT_upper_bound
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.L.debug_info_end1:
	.section	.debug_abbrev,"",@progbits
.L.debug_abbrev_begin:
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.ascii	"\341\177"              # DW_AT_APPLE_optimized
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	28                      # DW_AT_const_value
	.byte	10                      # DW_FORM_block1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	5                       # DW_FORM_data2
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	56                      # DW_AT_data_member_location
	.byte	5                       # DW_FORM_data2
	.byte	50                      # DW_AT_accessibility
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	47                      # DW_AT_upper_bound
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	2                       # DW_AT_location
	.byte	10                      # DW_FORM_block1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	16                      # DW_FORM_ref_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	1                       # DW_FORM_addr
	.byte	64                      # DW_AT_frame_base
	.byte	10                      # DW_FORM_block1
	.ascii	"\347\177"              # DW_AT_APPLE_omit_frame_ptr
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
.L.debug_abbrev_end:
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset0 = .Ltmp596-.Ltmp595              # Loc expr size
	.short	.Lset0
.Ltmp595:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\013"
.Ltmp596:
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset1 = .Ltmp598-.Ltmp597              # Loc expr size
	.short	.Lset1
.Ltmp597:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\013"
.Ltmp598:
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin0
	.quad	.Ltmp22
.Lset2 = .Ltmp600-.Ltmp599              # Loc expr size
	.short	.Lset2
.Ltmp599:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\f"
.Ltmp600:
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Lfunc_begin1
	.quad	.Ltmp44
.Lset3 = .Ltmp602-.Ltmp601              # Loc expr size
	.short	.Lset3
.Ltmp601:
	.byte	118                     # DW_OP_breg6
	.ascii	"\360~"
.Ltmp602:
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin1
	.quad	.Ltmp44
.Lset4 = .Ltmp604-.Ltmp603              # Loc expr size
	.short	.Lset4
.Ltmp603:
	.byte	118                     # DW_OP_breg6
	.ascii	"\350~"
.Ltmp604:
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Lfunc_begin1
	.quad	.Ltmp44
.Lset5 = .Ltmp606-.Ltmp605              # Loc expr size
	.short	.Lset5
.Ltmp605:
	.byte	118                     # DW_OP_breg6
	.ascii	"\324~"
.Ltmp606:
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp43
	.quad	.Ltmp44
.Lset6 = .Ltmp608-.Ltmp607              # Loc expr size
	.short	.Lset6
.Ltmp607:
	.byte	118                     # DW_OP_breg6
	.ascii	"\220~"
.Ltmp608:
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp46
	.quad	.Ltmp47
.Lset7 = .Ltmp610-.Ltmp609              # Loc expr size
	.short	.Lset7
.Ltmp609:
	.byte	118                     # DW_OP_breg6
	.ascii	"\320z"
	.byte	6
.Ltmp610:
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp80
	.quad	.Ltmp81
.Lset8 = .Ltmp612-.Ltmp611              # Loc expr size
	.short	.Lset8
.Ltmp611:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\b"
.Ltmp612:
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp82
	.quad	.Ltmp83
.Lset9 = .Ltmp614-.Ltmp613              # Loc expr size
	.short	.Lset9
.Ltmp613:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\007"
.Ltmp614:
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Lfunc_begin3
	.quad	.Ltmp113
.Lset10 = .Ltmp616-.Ltmp615             # Loc expr size
	.short	.Lset10
.Ltmp615:
	.byte	119                     # DW_OP_breg7
	.ascii	"\304\027"
.Ltmp616:
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Lfunc_begin3
	.quad	.Ltmp113
.Lset11 = .Ltmp618-.Ltmp617             # Loc expr size
	.short	.Lset11
.Ltmp617:
	.byte	119                     # DW_OP_breg7
	.ascii	"\374\030"
.Ltmp618:
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Lfunc_begin3
	.quad	.Ltmp113
.Lset12 = .Ltmp620-.Ltmp619             # Loc expr size
	.short	.Lset12
.Ltmp619:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\027"
.Ltmp620:
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Lfunc_begin3
	.quad	.Ltmp113
.Lset13 = .Ltmp622-.Ltmp621             # Loc expr size
	.short	.Lset13
.Ltmp621:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\027"
.Ltmp622:
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp112
	.quad	.Ltmp113
.Lset14 = .Ltmp624-.Ltmp623             # Loc expr size
	.short	.Lset14
.Ltmp623:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\026"
.Ltmp624:
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp115
	.quad	.Ltmp116
.Lset15 = .Ltmp626-.Ltmp625             # Loc expr size
	.short	.Lset15
.Ltmp625:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\024"
.Ltmp626:
	.quad	.Ltmp118
	.quad	.Ltmp119
.Lset16 = .Ltmp628-.Ltmp627             # Loc expr size
	.short	.Lset16
.Ltmp627:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\020"
.Ltmp628:
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp128
	.quad	.Ltmp129
.Lset17 = .Ltmp630-.Ltmp629             # Loc expr size
	.short	.Lset17
.Ltmp629:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp630:
	.quad	.Ltmp130
	.quad	.Ltmp131
.Lset18 = .Ltmp632-.Ltmp631             # Loc expr size
	.short	.Lset18
.Ltmp631:
	.byte	119                     # DW_OP_breg7
	.ascii	"\210\006"
.Ltmp632:
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Lfunc_begin4
	.quad	.Ltmp160
.Lset19 = .Ltmp634-.Ltmp633             # Loc expr size
	.short	.Lset19
.Ltmp633:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\n"
.Ltmp634:
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Lfunc_begin4
	.quad	.Ltmp160
.Lset20 = .Ltmp636-.Ltmp635             # Loc expr size
	.short	.Lset20
.Ltmp635:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\n"
.Ltmp636:
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin4
	.quad	.Ltmp160
.Lset21 = .Ltmp638-.Ltmp637             # Loc expr size
	.short	.Lset21
.Ltmp637:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\n"
.Ltmp638:
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Lfunc_begin4
	.quad	.Ltmp160
.Lset22 = .Ltmp640-.Ltmp639             # Loc expr size
	.short	.Lset22
.Ltmp639:
	.byte	119                     # DW_OP_breg7
	.ascii	"\254\013"
.Ltmp640:
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp162
	.quad	.Ltmp163
.Lset23 = .Ltmp642-.Ltmp641             # Loc expr size
	.short	.Lset23
.Ltmp641:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\005"
.Ltmp642:
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Lfunc_begin5
	.quad	.Ltmp190
.Lset24 = .Ltmp644-.Ltmp643             # Loc expr size
	.short	.Lset24
.Ltmp643:
	.byte	119                     # DW_OP_breg7
	.asciz	"\360"
.Ltmp644:
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Lfunc_begin7
	.quad	.Ltmp219
.Lset25 = .Ltmp646-.Ltmp645             # Loc expr size
	.short	.Lset25
.Ltmp645:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\016"
.Ltmp646:
	.quad	.Ltmp231
	.quad	.Ltmp232
.Lset26 = .Ltmp648-.Ltmp647             # Loc expr size
	.short	.Lset26
.Ltmp647:
	.byte	119                     # DW_OP_breg7
	.byte	56
.Ltmp648:
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp221
	.quad	.Ltmp222
.Lset27 = .Ltmp650-.Ltmp649             # Loc expr size
	.short	.Lset27
.Ltmp649:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\f"
.Ltmp650:
	.quad	.Ltmp223
	.quad	.Ltmp224
.Lset28 = .Ltmp652-.Ltmp651             # Loc expr size
	.short	.Lset28
.Ltmp651:
	.byte	119                     # DW_OP_breg7
	.ascii	"\364\t"
.Ltmp652:
	.quad	.Ltmp225
	.quad	.Ltmp226
.Lset29 = .Ltmp654-.Ltmp653             # Loc expr size
	.short	.Lset29
.Ltmp653:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\006"
.Ltmp654:
	.quad	.Ltmp227
	.quad	.Ltmp228
.Lset30 = .Ltmp656-.Ltmp655             # Loc expr size
	.short	.Lset30
.Ltmp655:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\002"
.Ltmp656:
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Lfunc_begin8
	.quad	.Ltmp256
.Lset31 = .Ltmp658-.Ltmp657             # Loc expr size
	.short	.Lset31
.Ltmp657:
	.byte	84                      # DW_OP_reg4
.Ltmp658:
	.quad	.Ltmp256
	.quad	.Ltmp261
.Lset32 = .Ltmp660-.Ltmp659             # Loc expr size
	.short	.Lset32
.Ltmp659:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\013"
.Ltmp660:
	.quad	.Ltmp272
	.quad	.Ltmp273
.Lset33 = .Ltmp662-.Ltmp661             # Loc expr size
	.short	.Lset33
.Ltmp661:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp662:
	.quad	.Ltmp273
	.quad	.Ltmp274
.Lset34 = .Ltmp664-.Ltmp663             # Loc expr size
	.short	.Lset34
.Ltmp663:
	.byte	119                     # DW_OP_breg7
	.byte	16
.Ltmp664:
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Lfunc_begin8
	.quad	.Ltmp257
.Lset35 = .Ltmp666-.Ltmp665             # Loc expr size
	.short	.Lset35
.Ltmp665:
	.byte	85                      # DW_OP_reg5
.Ltmp666:
	.quad	.Ltmp257
	.quad	.Ltmp258
.Lset36 = .Ltmp668-.Ltmp667             # Loc expr size
	.short	.Lset36
.Ltmp667:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\013"
.Ltmp668:
	.quad	.Ltmp271
	.quad	.Ltmp274
.Lset37 = .Ltmp670-.Ltmp669             # Loc expr size
	.short	.Lset37
.Ltmp669:
	.byte	119                     # DW_OP_breg7
	.byte	36
.Ltmp670:
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp259
	.quad	.Ltmp265
.Lset38 = .Ltmp672-.Ltmp671             # Loc expr size
	.short	.Lset38
.Ltmp671:
	.byte	16                      # DW_OP_constu
	.byte	3
.Ltmp672:
	.quad	.Ltmp265
	.quad	.Ltmp266
.Lset39 = .Ltmp674-.Ltmp673             # Loc expr size
	.short	.Lset39
.Ltmp673:
	.byte	119                     # DW_OP_breg7
	.ascii	"\314\005"
.Ltmp674:
	.quad	.Ltmp268
	.quad	.Ltmp270
.Lset40 = .Ltmp676-.Ltmp675             # Loc expr size
	.short	.Lset40
.Ltmp675:
	.byte	119                     # DW_OP_breg7
	.ascii	"\244\n"
.Ltmp676:
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp260
	.quad	.Ltmp261
.Lset41 = .Ltmp678-.Ltmp677             # Loc expr size
	.short	.Lset41
.Ltmp677:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\n"
.Ltmp678:
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin9
	.quad	.Ltmp298
.Lset42 = .Ltmp680-.Ltmp679             # Loc expr size
	.short	.Lset42
.Ltmp679:
	.byte	85                      # DW_OP_reg5
.Ltmp680:
	.quad	.Ltmp298
	.quad	.Ltmp305
.Lset43 = .Ltmp682-.Ltmp681             # Loc expr size
	.short	.Lset43
.Ltmp681:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\025"
.Ltmp682:
	.quad	.Ltmp310
	.quad	.Ltmp311
.Lset44 = .Ltmp684-.Ltmp683             # Loc expr size
	.short	.Lset44
.Ltmp683:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\r"
.Ltmp684:
	.quad	.Ltmp314
	.quad	.Ltmp315
.Lset45 = .Ltmp686-.Ltmp685             # Loc expr size
	.short	.Lset45
.Ltmp685:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\t"
.Ltmp686:
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin9
	.quad	.Ltmp305
.Lset46 = .Ltmp688-.Ltmp687             # Loc expr size
	.short	.Lset46
.Ltmp687:
	.byte	119                     # DW_OP_breg7
	.ascii	"\240\025"
.Ltmp688:
	.quad	.Ltmp309
	.quad	.Ltmp311
.Lset47 = .Ltmp690-.Ltmp689             # Loc expr size
	.short	.Lset47
.Ltmp689:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\r"
.Ltmp690:
	.quad	.Ltmp313
	.quad	.Ltmp315
.Lset48 = .Ltmp692-.Ltmp691             # Loc expr size
	.short	.Lset48
.Ltmp691:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\t"
.Ltmp692:
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin9
	.quad	.Ltmp305
.Lset49 = .Ltmp694-.Ltmp693             # Loc expr size
	.short	.Lset49
.Ltmp693:
	.byte	119                     # DW_OP_breg7
	.ascii	"\230\025"
.Ltmp694:
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin9
	.quad	.Ltmp305
.Lset50 = .Ltmp696-.Ltmp695             # Loc expr size
	.short	.Lset50
.Ltmp695:
	.byte	119                     # DW_OP_breg7
	.ascii	"\214\027"
.Ltmp696:
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin9
	.quad	.Ltmp300
.Lset51 = .Ltmp698-.Ltmp697             # Loc expr size
	.short	.Lset51
.Ltmp697:
	.byte	119                     # DW_OP_breg7
	.ascii	"\210\025"
.Ltmp698:
	.quad	.Ltmp300
	.quad	.Ltmp302
.Lset52 = .Ltmp700-.Ltmp699             # Loc expr size
	.short	.Lset52
.Ltmp699:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\024"
.Ltmp700:
	.quad	.Ltmp302
	.quad	.Ltmp305
.Lset53 = .Ltmp702-.Ltmp701             # Loc expr size
	.short	.Lset53
.Ltmp701:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\024"
.Ltmp702:
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Lfunc_begin9
	.quad	.Ltmp305
.Lset54 = .Ltmp704-.Ltmp703             # Loc expr size
	.short	.Lset54
.Ltmp703:
	.byte	119                     # DW_OP_breg7
	.ascii	"\200\025"
.Ltmp704:
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp299
	.quad	.Ltmp305
.Lset55 = .Ltmp706-.Ltmp705             # Loc expr size
	.short	.Lset55
.Ltmp705:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\025"
.Ltmp706:
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp301
	.quad	.Ltmp305
.Lset56 = .Ltmp708-.Ltmp707             # Loc expr size
	.short	.Lset56
.Ltmp707:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\024"
.Ltmp708:
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp303
	.quad	.Ltmp305
.Lset57 = .Ltmp710-.Ltmp709             # Loc expr size
	.short	.Lset57
.Ltmp709:
	.byte	119                     # DW_OP_breg7
	.ascii	"\244\024"
.Ltmp710:
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp304
	.quad	.Ltmp305
.Lset58 = .Ltmp712-.Ltmp711             # Loc expr size
	.short	.Lset58
.Ltmp711:
	.byte	119                     # DW_OP_breg7
	.ascii	"\220\024"
.Ltmp712:
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin10
	.quad	.Ltmp344
.Lset59 = .Ltmp714-.Ltmp713             # Loc expr size
	.short	.Lset59
.Ltmp713:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\031"
.Ltmp714:
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Lfunc_begin10
	.quad	.Ltmp344
.Lset60 = .Ltmp716-.Ltmp715             # Loc expr size
	.short	.Lset60
.Ltmp715:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\031"
.Ltmp716:
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin10
	.quad	.Ltmp344
.Lset61 = .Ltmp718-.Ltmp717             # Loc expr size
	.short	.Lset61
.Ltmp717:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\031"
.Ltmp718:
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Lfunc_begin10
	.quad	.Ltmp344
.Lset62 = .Ltmp720-.Ltmp719             # Loc expr size
	.short	.Lset62
.Ltmp719:
	.byte	119                     # DW_OP_breg7
	.ascii	"\234\033"
.Ltmp720:
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin10
	.quad	.Ltmp344
.Lset63 = .Ltmp722-.Ltmp721             # Loc expr size
	.short	.Lset63
.Ltmp721:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\031"
.Ltmp722:
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp341
	.quad	.Ltmp342
.Lset64 = .Ltmp724-.Ltmp723             # Loc expr size
	.short	.Lset64
.Ltmp723:
	.byte	119                     # DW_OP_breg7
	.ascii	"\224\031"
.Ltmp724:
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp343
	.quad	.Ltmp344
.Lset65 = .Ltmp726-.Ltmp725             # Loc expr size
	.short	.Lset65
.Ltmp725:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\027"
.Ltmp726:
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp358
	.quad	.Ltmp364
.Lset66 = .Ltmp728-.Ltmp727             # Loc expr size
	.short	.Lset66
.Ltmp727:
	.byte	16                      # DW_OP_constu
	.byte	0
.Ltmp728:
	.quad	.Ltmp364
	.quad	.Ltmp368
.Lset67 = .Ltmp730-.Ltmp729             # Loc expr size
	.short	.Lset67
.Ltmp729:
	.byte	119                     # DW_OP_breg7
	.ascii	"\204\005"
.Ltmp730:
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp369
	.quad	.Ltmp370
.Lset68 = .Ltmp732-.Ltmp731             # Loc expr size
	.short	.Lset68
.Ltmp731:
	.byte	119                     # DW_OP_breg7
	.ascii	"\264\002"
.Ltmp732:
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin11
	.quad	.Ltmp396
.Lset69 = .Ltmp734-.Ltmp733             # Loc expr size
	.short	.Lset69
.Ltmp733:
	.byte	119                     # DW_OP_breg7
	.ascii	"\200\030"
.Ltmp734:
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin11
	.quad	.Ltmp396
.Lset70 = .Ltmp736-.Ltmp735             # Loc expr size
	.short	.Lset70
.Ltmp735:
	.byte	119                     # DW_OP_breg7
	.ascii	"\370\027"
.Ltmp736:
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin11
	.quad	.Ltmp396
.Lset71 = .Ltmp738-.Ltmp737             # Loc expr size
	.short	.Lset71
.Ltmp737:
	.byte	119                     # DW_OP_breg7
	.ascii	"\360\027"
.Ltmp738:
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin11
	.quad	.Ltmp396
.Lset72 = .Ltmp740-.Ltmp739             # Loc expr size
	.short	.Lset72
.Ltmp739:
	.byte	119                     # DW_OP_breg7
	.ascii	"\214\032"
.Ltmp740:
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp395
	.quad	.Ltmp396
.Lset73 = .Ltmp742-.Ltmp741             # Loc expr size
	.short	.Lset73
.Ltmp741:
	.byte	119                     # DW_OP_breg7
	.ascii	"\200\030"
.Ltmp742:
	.quad	.Ltmp418
	.quad	.Ltmp423
.Lset74 = .Ltmp744-.Ltmp743             # Loc expr size
	.short	.Lset74
.Ltmp743:
	.byte	119                     # DW_OP_breg7
	.asciz	"\310"
.Ltmp744:
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp401
	.quad	.Ltmp396
.Lset75 = .Ltmp746-.Ltmp745             # Loc expr size
	.short	.Lset75
.Ltmp745:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\023"
.Ltmp746:
	.quad	.Ltmp419
	.quad	.Ltmp423
.Lset76 = .Ltmp748-.Ltmp747             # Loc expr size
	.short	.Lset76
.Ltmp747:
	.byte	119                     # DW_OP_breg7
	.asciz	"\300"
.Ltmp748:
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp399
	.quad	.Ltmp396
.Lset77 = .Ltmp750-.Ltmp749             # Loc expr size
	.short	.Lset77
.Ltmp749:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\023"
.Ltmp750:
	.quad	.Ltmp420
	.quad	.Ltmp423
.Lset78 = .Ltmp752-.Ltmp751             # Loc expr size
	.short	.Lset78
.Ltmp751:
	.byte	119                     # DW_OP_breg7
	.byte	56
.Ltmp752:
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp398
	.quad	.Ltmp396
.Lset79 = .Ltmp754-.Ltmp753             # Loc expr size
	.short	.Lset79
.Ltmp753:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\023"
.Ltmp754:
	.quad	.Ltmp421
	.quad	.Ltmp423
.Lset80 = .Ltmp756-.Ltmp755             # Loc expr size
	.short	.Lset80
.Ltmp755:
	.byte	119                     # DW_OP_breg7
	.byte	48
.Ltmp756:
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp397
	.quad	.Ltmp396
.Lset81 = .Ltmp758-.Ltmp757             # Loc expr size
	.short	.Lset81
.Ltmp757:
	.byte	119                     # DW_OP_breg7
	.ascii	"\340\023"
.Ltmp758:
	.quad	.Ltmp422
	.quad	.Ltmp423
.Lset82 = .Ltmp760-.Ltmp759             # Loc expr size
	.short	.Lset82
.Ltmp759:
	.byte	119                     # DW_OP_breg7
	.byte	40
.Ltmp760:
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Lfunc_begin12
	.quad	.Ltmp453
.Lset83 = .Ltmp762-.Ltmp761             # Loc expr size
	.short	.Lset83
.Ltmp761:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\023"
.Ltmp762:
	.quad	.Ltmp474
	.quad	.Ltmp476
.Lset84 = .Ltmp764-.Ltmp763             # Loc expr size
	.short	.Lset84
.Ltmp763:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp764:
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Lfunc_begin12
	.quad	.Ltmp453
.Lset85 = .Ltmp766-.Ltmp765             # Loc expr size
	.short	.Lset85
.Ltmp765:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\023"
.Ltmp766:
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Lfunc_begin12
	.quad	.Ltmp453
.Lset86 = .Ltmp768-.Ltmp767             # Loc expr size
	.short	.Lset86
.Ltmp767:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\023"
.Ltmp768:
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Lfunc_begin12
	.quad	.Ltmp453
.Lset87 = .Ltmp770-.Ltmp769             # Loc expr size
	.short	.Lset87
.Ltmp769:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\023"
.Ltmp770:
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp447
	.quad	.Ltmp453
.Lset88 = .Ltmp772-.Ltmp771             # Loc expr size
	.short	.Lset88
.Ltmp771:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\023"
.Ltmp772:
	.quad	.Ltmp475
	.quad	.Ltmp476
.Lset89 = .Ltmp774-.Ltmp773             # Loc expr size
	.short	.Lset89
.Ltmp773:
	.byte	119                     # DW_OP_breg7
	.byte	16
.Ltmp774:
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp448
	.quad	.Ltmp453
.Lset90 = .Ltmp776-.Ltmp775             # Loc expr size
	.short	.Lset90
.Ltmp775:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\022"
.Ltmp776:
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp449
	.quad	.Ltmp453
.Lset91 = .Ltmp778-.Ltmp777             # Loc expr size
	.short	.Lset91
.Ltmp777:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\022"
.Ltmp778:
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp450
	.quad	.Ltmp453
.Lset92 = .Ltmp780-.Ltmp779             # Loc expr size
	.short	.Lset92
.Ltmp779:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp780:
	.quad	.Ltmp463
	.quad	.Ltmp467
.Lset93 = .Ltmp782-.Ltmp781             # Loc expr size
	.short	.Lset93
.Ltmp781:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\007"
.Ltmp782:
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp450
	.quad	.Ltmp453
.Lset94 = .Ltmp784-.Ltmp783             # Loc expr size
	.short	.Lset94
.Ltmp783:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp784:
	.quad	.Ltmp464
	.quad	.Ltmp467
.Lset95 = .Ltmp786-.Ltmp785             # Loc expr size
	.short	.Lset95
.Ltmp785:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp786:
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp450
	.quad	.Ltmp453
.Lset96 = .Ltmp788-.Ltmp787             # Loc expr size
	.short	.Lset96
.Ltmp787:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\022"
.Ltmp788:
	.quad	.Ltmp465
	.quad	.Ltmp467
.Lset97 = .Ltmp790-.Ltmp789             # Loc expr size
	.short	.Lset97
.Ltmp789:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\007"
.Ltmp790:
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Lfunc_begin13
	.quad	.Ltmp504
.Lset98 = .Ltmp792-.Ltmp791             # Loc expr size
	.short	.Lset98
.Ltmp791:
	.byte	119                     # DW_OP_breg7
	.ascii	"\330\f"
.Ltmp792:
	.quad	.Ltmp515
	.quad	.Ltmp517
.Lset99 = .Ltmp794-.Ltmp793             # Loc expr size
	.short	.Lset99
.Ltmp793:
	.byte	119                     # DW_OP_breg7
	.byte	32
.Ltmp794:
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Lfunc_begin13
	.quad	.Ltmp504
.Lset100 = .Ltmp796-.Ltmp795            # Loc expr size
	.short	.Lset100
.Ltmp795:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\f"
.Ltmp796:
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Lfunc_begin13
	.quad	.Ltmp504
.Lset101 = .Ltmp798-.Ltmp797            # Loc expr size
	.short	.Lset101
.Ltmp797:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\f"
.Ltmp798:
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Lfunc_begin13
	.quad	.Ltmp504
.Lset102 = .Ltmp800-.Ltmp799            # Loc expr size
	.short	.Lset102
.Ltmp799:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\f"
.Ltmp800:
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp500
	.quad	.Ltmp504
.Lset103 = .Ltmp802-.Ltmp801            # Loc expr size
	.short	.Lset103
.Ltmp801:
	.byte	119                     # DW_OP_breg7
	.ascii	"\300\f"
.Ltmp802:
	.quad	.Ltmp516
	.quad	.Ltmp517
.Lset104 = .Ltmp804-.Ltmp803            # Loc expr size
	.short	.Lset104
.Ltmp803:
	.byte	119                     # DW_OP_breg7
	.byte	24
.Ltmp804:
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp501
	.quad	.Ltmp504
.Lset105 = .Ltmp806-.Ltmp805            # Loc expr size
	.short	.Lset105
.Ltmp805:
	.byte	119                     # DW_OP_breg7
	.ascii	"\350\013"
.Ltmp806:
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp502
	.quad	.Ltmp504
.Lset106 = .Ltmp808-.Ltmp807            # Loc expr size
	.short	.Lset106
.Ltmp807:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\013"
.Ltmp808:
	.quad	.Ltmp511
	.quad	.Ltmp517
.Lset107 = .Ltmp810-.Ltmp809            # Loc expr size
	.short	.Lset107
.Ltmp809:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\001"
.Ltmp810:
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp502
	.quad	.Ltmp504
.Lset108 = .Ltmp812-.Ltmp811            # Loc expr size
	.short	.Lset108
.Ltmp811:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\013"
.Ltmp812:
	.quad	.Ltmp510
	.quad	.Ltmp517
.Lset109 = .Ltmp814-.Ltmp813            # Loc expr size
	.short	.Lset109
.Ltmp813:
	.byte	119                     # DW_OP_breg7
	.ascii	"\320\001"
.Ltmp814:
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Lfunc_begin14
	.quad	.Ltmp543
.Lset110 = .Ltmp816-.Ltmp815            # Loc expr size
	.short	.Lset110
.Ltmp815:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\007"
.Ltmp816:
	.quad	.Ltmp550
	.quad	.Ltmp552
.Lset111 = .Ltmp818-.Ltmp817            # Loc expr size
	.short	.Lset111
.Ltmp817:
	.byte	119                     # DW_OP_breg7
	.byte	32
.Ltmp818:
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Lfunc_begin14
	.quad	.Ltmp543
.Lset112 = .Ltmp820-.Ltmp819            # Loc expr size
	.short	.Lset112
.Ltmp819:
	.byte	119                     # DW_OP_breg7
	.ascii	"\260\007"
.Ltmp820:
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Lfunc_begin14
	.quad	.Ltmp543
.Lset113 = .Ltmp822-.Ltmp821            # Loc expr size
	.short	.Lset113
.Ltmp821:
	.byte	119                     # DW_OP_breg7
	.ascii	"\250\007"
.Ltmp822:
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Lfunc_begin14
	.quad	.Ltmp543
.Lset114 = .Ltmp824-.Ltmp823            # Loc expr size
	.short	.Lset114
.Ltmp823:
	.byte	119                     # DW_OP_breg7
	.ascii	"\244\007"
.Ltmp824:
	.quad	.Ltmp551
	.quad	.Ltmp552
.Lset115 = .Ltmp826-.Ltmp825            # Loc expr size
	.short	.Lset115
.Ltmp825:
	.byte	119                     # DW_OP_breg7
	.byte	28
.Ltmp826:
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp541
	.quad	.Ltmp543
.Lset116 = .Ltmp828-.Ltmp827            # Loc expr size
	.short	.Lset116
.Ltmp827:
	.byte	119                     # DW_OP_breg7
	.ascii	"\310\006"
.Ltmp828:
	.quad	.Ltmp546
	.quad	.Ltmp552
.Lset117 = .Ltmp830-.Ltmp829            # Loc expr size
	.short	.Lset117
.Ltmp829:
	.byte	119                     # DW_OP_breg7
	.asciz	"\330"
.Ltmp830:
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp542
	.quad	.Ltmp543
.Lset118 = .Ltmp832-.Ltmp831            # Loc expr size
	.short	.Lset118
.Ltmp831:
	.byte	119                     # DW_OP_breg7
	.ascii	"\270\006"
.Ltmp832:
	.quad	.Ltmp549
	.quad	.Ltmp552
.Lset119 = .Ltmp834-.Ltmp833            # Loc expr size
	.short	.Lset119
.Ltmp833:
	.byte	119                     # DW_OP_breg7
	.byte	40
.Ltmp834:
	.quad	0
	.quad	0
.Ldebug_loc202:
	.section	.debug_aranges,"",@progbits
	.long	44                      # Length of ARange Set
	.short	2                       # DWARF Arange version number
	.long	.L.debug_info_begin0    # Offset Into Debug Info Section
	.byte	8                       # Address Size (in bytes)
	.byte	0                       # Segment Size (in bytes)
	.byte	255
	.byte	255
	.byte	255
	.byte	255
	.quad	.Lfunc_begin0
.Lset120 = .Lfunc_begin3-.Lfunc_begin0
	.quad	.Lset120
	.quad	0                       # ARange terminator
	.quad	0
	.long	44                      # Length of ARange Set
	.short	2                       # DWARF Arange version number
	.long	.L.debug_info_begin1    # Offset Into Debug Info Section
	.byte	8                       # Address Size (in bytes)
	.byte	0                       # Segment Size (in bytes)
	.byte	255
	.byte	255
	.byte	255
	.byte	255
	.quad	.Lfunc_begin3
.Lset121 = .Ldebug_end0-.Lfunc_begin3
	.quad	.Lset121
	.quad	0                       # ARange terminator
	.quad	0
	.section	.debug_ranges,"",@progbits
	.quad	.Ltmp124
	.quad	.Ltmp125
	.quad	.Ltmp126
	.quad	.Ltmp133
	.quad	0
	.quad	0
	.quad	.Ltmp347
	.quad	.Ltmp349
	.quad	.Ltmp355
	.quad	.Ltmp356
	.quad	.Ltmp357
	.quad	.Ltmp368
	.quad	0
	.quad	0
	.quad	.Ltmp346
	.quad	.Ltmp349
	.quad	.Ltmp354
	.quad	.Ltmp370
	.quad	0
	.quad	0
	.quad	.Ltmp345
	.quad	.Ltmp349
	.quad	.Ltmp350
	.quad	.Ltmp370
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.section	.debug_pubnames,"",@progbits
.Lset122 = .Lpubnames_end1-.Lpubnames_begin1 # Length of Public Names Info
	.long	.Lset122
.Lpubnames_begin1:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin1    # Offset of Compilation Unit Info
.Lset123 = .L.debug_info_end1-.L.debug_info_begin1 # Compilation Unit Length
	.long	.Lset123
	.long	676                     # DIE offset
	.asciz	"kiss_fft_cleanup"      # External Name
	.long	1441                    # DIE offset
	.asciz	"kf_bfly4"              # External Name
	.long	1213                    # DIE offset
	.asciz	"kf_bfly5"              # External Name
	.long	62                      # DIE offset
	.asciz	"kiss_fft_alloc"        # External Name
	.long	458                     # DIE offset
	.asciz	"kiss_fft_stride"       # External Name
	.long	1796                    # DIE offset
	.asciz	"kf_bfly2"              # External Name
	.long	783                     # DIE offset
	.asciz	"kf_work"               # External Name
	.long	601                     # DIE offset
	.asciz	"kiss_fft"              # External Name
	.long	959                     # DIE offset
	.asciz	"kf_bfly_generic"       # External Name
	.long	1923                    # DIE offset
	.asciz	"kf_factor"             # External Name
	.long	702                     # DIE offset
	.asciz	"kiss_fft_next_fast_size" # External Name
	.long	1628                    # DIE offset
	.asciz	"kf_bfly3"              # External Name
	.long	0                       # End Mark
.Lpubnames_end1:
.Lset124 = .Lpubnames_end0-.Lpubnames_begin0 # Length of Public Names Info
	.long	.Lset124
.Lpubnames_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
.Lset125 = .L.debug_info_end0-.L.debug_info_begin0 # Compilation Unit Length
	.long	.Lset125
	.long	387                     # DIE offset
	.asciz	"main"                  # External Name
	.long	179                     # DIE offset
	.asciz	"store_kernel"          # External Name
	.long	62                      # DIE offset
	.asciz	"test_stores"           # External Name
	.long	0                       # End Mark
.Lpubnames_end0:
	.section	.debug_pubtypes,"",@progbits
.Lset126 = .Lpubtypes_end1-.Lpubtypes_begin1 # Length of Public Types Info
	.long	.Lset126
.Lpubtypes_begin1:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin1    # Offset of Compilation Unit Info
.Lset127 = .L.debug_info_end1-.L.debug_info_begin1 # Compilation Unit Length
	.long	.Lset127
	.long	409                     # DIE offset
	.asciz	"kiss_fft_cpx"          # External Name
	.long	451                     # DIE offset
	.asciz	"float"                 # External Name
	.long	299                     # DIE offset
	.asciz	"kiss_fft_cfg"          # External Name
	.long	315                     # DIE offset
	.asciz	"kiss_fft_state"        # External Name
	.long	55                      # DIE offset
	.asciz	"double"                # External Name
	.long	55                      # DIE offset
	.asciz	"int"                   # External Name
	.long	2031                    # DIE offset
	.asciz	"long unsigned int"     # External Name
	.long	2020                    # DIE offset
	.asciz	"size_t"                # External Name
	.long	0                       # End Mark
.Lpubtypes_end1:
.Lset128 = .Lpubtypes_end0-.Lpubtypes_begin0 # Length of Public Types Info
	.long	.Lset128
.Lpubtypes_begin0:
	.short	2                       # DWARF Version
	.long	.L.debug_info_begin0    # Offset of Compilation Unit Info
.Lset129 = .L.debug_info_end0-.L.debug_info_begin0 # Compilation Unit Length
	.long	.Lset129
	.long	538                     # DIE offset
	.asciz	"kiss_fft_cpx"          # External Name
	.long	451                     # DIE offset
	.asciz	"float"                 # External Name
	.long	506                     # DIE offset
	.asciz	"kiss_fft_cfg"          # External Name
	.long	55                      # DIE offset
	.asciz	"int"                   # External Name
	.long	0                       # End Mark
.Lpubtypes_end0:

	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.ident	"clang version 3.4.2 (tags/RELEASE_34/dot2-final)"
	.section	".note.GNU-stack","",@progbits
